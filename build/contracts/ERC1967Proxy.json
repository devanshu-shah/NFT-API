{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_logic",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beacon",
          "type": "address"
        }
      ],
      "name": "BeaconUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "35": "contracts/node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
    "36": "contracts/node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
    "37": "contracts/node_modules/@openzeppelin/contracts/proxy/Proxy.sol"
  },
  "ast": {
    "absolutePath": "contracts/node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
    "exportedSymbols": {
      "Address": [
        15074
      ],
      "ERC1967Proxy": [
        5815
      ],
      "ERC1967Upgrade": [
        6164
      ],
      "IBeacon": [
        6308
      ],
      "Proxy": [
        6216
      ],
      "StorageSlot": [
        15481
      ]
    },
    "id": 5816,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5764,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:35"
      },
      {
        "absolutePath": "contracts/node_modules/@openzeppelin/contracts/proxy/Proxy.sol",
        "file": "../Proxy.sol",
        "id": 5765,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5816,
        "sourceUnit": 6217,
        "src": "58:22:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "file": "./ERC1967Upgrade.sol",
        "id": 5766,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5816,
        "sourceUnit": 6165,
        "src": "81:30:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5768,
              "name": "Proxy",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6216,
              "src": "511:5:35"
            },
            "id": 5769,
            "nodeType": "InheritanceSpecifier",
            "src": "511:5:35"
          },
          {
            "baseName": {
              "id": 5770,
              "name": "ERC1967Upgrade",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6164,
              "src": "518:14:35"
            },
            "id": 5771,
            "nodeType": "InheritanceSpecifier",
            "src": "518:14:35"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 5767,
          "nodeType": "StructuredDocumentation",
          "src": "113:372:35",
          "text": " @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\n implementation address that can be changed. This address is stored in storage in the location specified by\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\n implementation behind the proxy."
        },
        "fullyImplemented": true,
        "id": 5815,
        "linearizedBaseContracts": [
          5815,
          6164,
          6216
        ],
        "name": "ERC1967Proxy",
        "nameLocation": "495:12:35",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 5801,
              "nodeType": "Block",
              "src": "935:161:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 5792,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5780,
                          "name": "_IMPLEMENTATION_SLOT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5828,
                          "src": "952:20:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 5790,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "656970313936372e70726f78792e696d706c656d656e746174696f6e",
                                        "id": 5786,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1002:30:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd",
                                          "typeString": "literal_string \"eip1967.proxy.implementation\""
                                        },
                                        "value": "eip1967.proxy.implementation"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd",
                                          "typeString": "literal_string \"eip1967.proxy.implementation\""
                                        }
                                      ],
                                      "id": 5785,
                                      "name": "keccak256",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -8,
                                      "src": "992:9:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                        "typeString": "function (bytes memory) pure returns (bytes32)"
                                      }
                                    },
                                    "id": 5787,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "992:41:35",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 5784,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "984:7:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 5783,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "984:7:35",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 5788,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "984:50:35",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 5789,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1037:1:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "984:54:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 5782,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "976:7:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 5781,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "976:7:35",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5791,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "976:63:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "952:87:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 5779,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "945:6:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 5793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "945:95:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5794,
                  "nodeType": "ExpressionStatement",
                  "src": "945:95:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5796,
                        "name": "_logic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5774,
                        "src": "1068:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5797,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5776,
                        "src": "1076:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 5798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1083:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 5795,
                      "name": "_upgradeToAndCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5915,
                      "src": "1050:17:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,bytes memory,bool)"
                      }
                    },
                    "id": 5799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1050:39:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5800,
                  "nodeType": "ExpressionStatement",
                  "src": "1050:39:35"
                }
              ]
            },
            "documentation": {
              "id": 5772,
              "nodeType": "StructuredDocumentation",
              "src": "539:335:35",
              "text": " @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\n If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\n function call, and allows initializating the storage of the proxy like a Solidity constructor."
            },
            "id": 5802,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5777,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5774,
                  "mutability": "mutable",
                  "name": "_logic",
                  "nameLocation": "899:6:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 5802,
                  "src": "891:14:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5773,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "891:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5776,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "920:5:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 5802,
                  "src": "907:18:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 5775,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "907:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "890:36:35"
            },
            "returnParameters": {
              "id": 5778,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "935:0:35"
            },
            "scope": 5815,
            "src": "879:217:35",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              6181
            ],
            "body": {
              "id": 5813,
              "nodeType": "Block",
              "src": "1255:59:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 5809,
                        "name": "ERC1967Upgrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6164,
                        "src": "1272:14:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC1967Upgrade_$6164_$",
                          "typeString": "type(contract ERC1967Upgrade)"
                        }
                      },
                      "id": 5810,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_getImplementation",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5846,
                      "src": "1272:33:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 5811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1272:35:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 5808,
                  "id": 5812,
                  "nodeType": "Return",
                  "src": "1265:42:35"
                }
              ]
            },
            "documentation": {
              "id": 5803,
              "nodeType": "StructuredDocumentation",
              "src": "1102:67:35",
              "text": " @dev Returns the current implementation address."
            },
            "id": 5814,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_implementation",
            "nameLocation": "1183:15:35",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 5805,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1223:8:35"
            },
            "parameters": {
              "id": 5804,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1198:2:35"
            },
            "returnParameters": {
              "id": 5808,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5807,
                  "mutability": "mutable",
                  "name": "impl",
                  "nameLocation": "1249:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 5814,
                  "src": "1241:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5806,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1241:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1240:14:35"
            },
            "scope": 5815,
            "src": "1174:140:35",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 5816,
        "src": "486:830:35",
        "usedErrors": []
      }
    ],
    "src": "33:1284:35"
  },
  "bytecode": "608060405260405161078d38038061078d833981016040819052610022916102f5565b61004d60017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd610412565b6000805160206107468339815191521461006957610069610463565b6100758282600061007c565b505061048f565b610085836100b2565b6000825111806100925750805b156100ad576100ab83836100f260201b6100291760201c565b505b505050565b6100bb8161011e565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606101178383604051806060016040528060278152602001610766602791396101de565b9392505050565b610131816102b360201b6100551760201c565b6101985760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084015b60405180910390fd5b806101bd60008051602061074683398151915260001b6102b960201b61005b1760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b6060833b61023d5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b606482015260840161018f565b600080856001600160a01b03168560405161025891906103c3565b600060405180830381855af49150503d8060008114610293576040519150601f19603f3d011682016040523d82523d6000602084013e610298565b606091505b5090925090506102a98282866102bc565b9695505050505050565b3b151590565b90565b606083156102cb575081610117565b8251156102db5782518084602001fd5b8160405162461bcd60e51b815260040161018f91906103df565b6000806040838503121561030857600080fd5b82516001600160a01b038116811461031f57600080fd5b60208401519092506001600160401b038082111561033c57600080fd5b818501915085601f83011261035057600080fd5b81518181111561036257610362610479565b604051601f8201601f19908116603f0116810190838211818310171561038a5761038a610479565b816040528281528860208487010111156103a357600080fd5b6103b4836020830160208801610437565b80955050505050509250929050565b600082516103d5818460208701610437565b9190910192915050565b60208152600082518060208401526103fe816040850160208701610437565b601f01601f19169190910160400192915050565b60008282101561043257634e487b7160e01b600052601160045260246000fd5b500390565b60005b8381101561045257818101518382015260200161043a565b838111156100ab5750506000910152565b634e487b7160e01b600052600160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6102a88061049e6000396000f3fe60806040523661001357610011610017565b005b6100115b61002761002261005e565b610096565b565b606061004e838360405180606001604052806027815260200161024c602791396100ba565b9392505050565b3b151590565b90565b60006100917f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b3660008037600080366000845af43d6000803e8080156100b5573d6000f35b3d6000fd5b6060833b61011e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084015b60405180910390fd5b600080856001600160a01b03168560405161013991906101cc565b600060405180830381855af49150503d8060008114610174576040519150601f19603f3d011682016040523d82523d6000602084013e610179565b606091505b5091509150610189828286610193565b9695505050505050565b606083156101a257508161004e565b8251156101b25782518084602001fd5b8160405162461bcd60e51b815260040161011591906101e8565b600082516101de81846020870161021b565b9190910192915050565b602081526000825180602084015261020781604085016020870161021b565b601f01601f19169190910160400192915050565b60005b8381101561023657818101518382015260200161021e565b83811115610245576000848401525b5050505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220b11bf9f2c4b314f73e1bd54122601c3b2dc6027938bdb4f0c42d997296eec45464736f6c63430008060033360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.6+commit.11564f7e"
  },
  "contractName": "ERC1967Proxy",
  "coverageMap": {
    "branches": {
      "35": {},
      "36": {},
      "37": {}
    },
    "statements": {
      "35": {
        "ERC1967Proxy._implementation": {
          "3": [
            1265,
            1307
          ]
        }
      },
      "36": {
        "ERC1967Upgrade._getImplementation": {
          "4": [
            1244,
            1305
          ]
        }
      },
      "37": {
        "Proxy.<fallback>": {
          "1": [
            2610,
            2621
          ]
        },
        "Proxy.<receive>": {
          "0": [
            2833,
            2844
          ]
        },
        "Proxy._fallback": {
          "2": [
            2332,
            2360
          ]
        }
      }
    }
  },
  "dependencies": [
    "ERC1967Upgrade",
    "Proxy"
  ],
  "deployedBytecode": "60806040523661001357610011610017565b005b6100115b61002761002261005e565b610096565b565b606061004e838360405180606001604052806027815260200161024c602791396100ba565b9392505050565b3b151590565b90565b60006100917f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b3660008037600080366000845af43d6000803e8080156100b5573d6000f35b3d6000fd5b6060833b61011e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084015b60405180910390fd5b600080856001600160a01b03168560405161013991906101cc565b600060405180830381855af49150503d8060008114610174576040519150601f19603f3d011682016040523d82523d6000602084013e610179565b606091505b5091509150610189828286610193565b9695505050505050565b606083156101a257508161004e565b8251156101b25782518084602001fd5b8160405162461bcd60e51b815260040161011591906101e8565b600082516101de81846020870161021b565b9190910192915050565b602081526000825180602084015261020781604085016020870161021b565b601f01601f19169190910160400192915050565b60005b8381101561023657818101518382015260200161021e565b83811115610245576000848401525b5050505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220b11bf9f2c4b314f73e1bd54122601c3b2dc6027938bdb4f0c42d997296eec45464736f6c63430008060033",
  "deployedSourceMap": "486:830:35:-:0;;;;;;2833:11:37;:9;:11::i;:::-;486:830:35;;2610:11:37;2257:110;2332:28;2342:17;:15;:17::i;:::-;2332:9;:28::i;:::-;2257:110::o;6170:198:91:-;6253:12;6284:77;6305:6;6313:4;6284:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6277:84;6170:198;-1:-1:-1;;;6170:198:91:o;718:377::-;1034:20;1080:8;;;718:377::o;1542:147:97:-;1669:4;1542:147::o;1174:140:35:-;1241:12;1272:35;901:66:36;1251:54;-1:-1:-1;;;;;1251:54:36;;1172:140;1272:35:35;1265:42;;1174:140;:::o;883:895:37:-;1221:14;1218:1;1215;1202:34;1435:1;1432;1416:14;1413:1;1397:14;1390:5;1377:60;1511:16;1508:1;1505;1490:38;1549:6;1616:66;;;;1731:16;1728:1;1721:27;1616:66;1651:16;1648:1;1641:27;6554:387:91;6695:12;1034:20;;6719:69;;;;-1:-1:-1;;;6719:69:91;;883:2:121;6719:69:91;;;865:21:121;922:2;902:18;;;895:30;961:34;941:18;;;934:62;-1:-1:-1;;;1012:18:121;;;1005:36;1058:19;;6719:69:91;;;;;;;;;6800:12;6814:23;6841:6;-1:-1:-1;;;;;6841:19:91;6861:4;6841:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6799:67;;;;6883:51;6900:7;6909:10;6921:12;6883:16;:51::i;:::-;6876:58;6554:387;-1:-1:-1;;;;;;6554:387:91:o;7161:692::-;7307:12;7335:7;7331:516;;;-1:-1:-1;7365:10:91;7358:17;;7331:516;7476:17;;:21;7472:365;;7670:10;7664:17;7730:15;7717:10;7713:2;7709:19;7702:44;7472:365;7809:12;7802:20;;-1:-1:-1;;;7802:20:91;;;;;;;;:::i;14:274:121:-;143:3;181:6;175:13;197:53;243:6;238:3;231:4;223:6;219:17;197:53;:::i;:::-;266:16;;;;;151:137;-1:-1:-1;;151:137:121:o;293:383::-;442:2;431:9;424:21;405:4;474:6;468:13;517:6;512:2;501:9;497:18;490:34;533:66;592:6;587:2;576:9;572:18;567:2;559:6;555:15;533:66;:::i;:::-;660:2;639:15;-1:-1:-1;;635:29:121;620:45;;;;667:2;616:54;;414:262;-1:-1:-1;;414:262:121:o;1088:258::-;1160:1;1170:113;1184:6;1181:1;1178:13;1170:113;;;1260:11;;;1254:18;1241:11;;;1234:39;1206:2;1199:10;1170:113;;;1301:6;1298:1;1295:13;1292:2;;;1336:1;1327:6;1322:3;1318:16;1311:27;1292:2;;1141:205;;;:::o",
  "language": "Solidity",
  "natspec": {
    "details": "This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an implementation address that can be changed. This address is stored in storage in the location specified by https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the implementation behind the proxy.",
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Initializes the upgradeable proxy with an initial implementation specified by `_logic`. If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded function call, and allows initializating the storage of the proxy like a Solidity constructor."
      }
    },
    "version": 1
  },
  "offset": [
    486,
    1316
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x13 JUMPI PUSH2 0x11 PUSH2 0x17 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11 JUMPDEST PUSH2 0x27 PUSH2 0x22 PUSH2 0x5E JUMP JUMPDEST PUSH2 0x96 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH2 0x4E DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x24C PUSH1 0x27 SWAP2 CODECOPY PUSH2 0xBA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x91 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0xB5 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x60 DUP4 EXTCODESIZE PUSH2 0x11E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1B9D1C9858DD PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x139 SWAP2 SWAP1 PUSH2 0x1CC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x174 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x179 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x189 DUP3 DUP3 DUP7 PUSH2 0x193 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1A2 JUMPI POP DUP2 PUSH2 0x4E JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x1B2 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x115 SWAP2 SWAP1 PUSH2 0x1E8 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1DE DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x21B JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x207 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x21B JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x236 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x21E JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x245 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x70667358221220B11BF9 CALLCODE 0xC4 0xB3 EQ 0xF7 RETURNDATACOPY SHL 0xD5 COINBASE 0x22 PUSH1 0x1C EXTCODESIZE 0x2D 0xC6 MUL PUSH26 0x38BDB4F0C42D997296EEC45464736F6C63430008060033000000 ",
  "pcMap": {
    "0": {
      "offset": [
        486,
        1316
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        486,
        1316
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        486,
        1316
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "5": {
      "fn": null,
      "offset": [
        486,
        1316
      ],
      "op": "CALLDATASIZE",
      "path": "35"
    },
    "6": {
      "fn": null,
      "offset": [
        486,
        1316
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x13"
    },
    "9": {
      "fn": null,
      "offset": [
        486,
        1316
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "10": {
      "fn": "Proxy.<receive>",
      "offset": [
        2833,
        2844
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 0,
      "value": "0x11"
    },
    "13": {
      "fn": "Proxy.<receive>",
      "offset": [
        2833,
        2842
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x17"
    },
    "16": {
      "fn": "Proxy.<receive>",
      "jump": "i",
      "offset": [
        2833,
        2844
      ],
      "op": "JUMP",
      "path": "37"
    },
    "17": {
      "fn": "Proxy.<receive>",
      "offset": [
        2833,
        2844
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "18": {
      "offset": [
        486,
        1316
      ],
      "op": "STOP",
      "path": "35"
    },
    "19": {
      "fn": "Proxy.<receive>",
      "offset": [
        486,
        1316
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "20": {
      "fn": "Proxy.<fallback>",
      "offset": [
        2610,
        2621
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 1,
      "value": "0x11"
    },
    "23": {
      "fn": "Proxy._fallback",
      "offset": [
        2257,
        2367
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "24": {
      "fn": "Proxy._fallback",
      "offset": [
        2332,
        2360
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 2,
      "value": "0x27"
    },
    "27": {
      "fn": "Proxy._fallback",
      "offset": [
        2342,
        2359
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x22"
    },
    "30": {
      "fn": "Proxy._fallback",
      "offset": [
        2342,
        2357
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x5E"
    },
    "33": {
      "fn": "Proxy._fallback",
      "jump": "i",
      "offset": [
        2342,
        2359
      ],
      "op": "JUMP",
      "path": "37"
    },
    "34": {
      "fn": "Proxy._fallback",
      "offset": [
        2342,
        2359
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "35": {
      "fn": "Proxy._fallback",
      "offset": [
        2332,
        2341
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x96"
    },
    "38": {
      "fn": "Proxy._fallback",
      "jump": "i",
      "offset": [
        2332,
        2360
      ],
      "op": "JUMP",
      "path": "37"
    },
    "39": {
      "fn": "Proxy._fallback",
      "offset": [
        2332,
        2360
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "40": {
      "fn": "Proxy._fallback",
      "jump": "o",
      "offset": [
        2257,
        2367
      ],
      "op": "JUMP",
      "path": "37"
    },
    "41": {
      "op": "JUMPDEST"
    },
    "42": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "44": {
      "op": "PUSH2",
      "value": "0x4E"
    },
    "47": {
      "op": "DUP4"
    },
    "48": {
      "op": "DUP4"
    },
    "49": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "51": {
      "op": "MLOAD"
    },
    "52": {
      "op": "DUP1"
    },
    "53": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "55": {
      "op": "ADD"
    },
    "56": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "58": {
      "op": "MSTORE"
    },
    "59": {
      "op": "DUP1"
    },
    "60": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "62": {
      "op": "DUP2"
    },
    "63": {
      "op": "MSTORE"
    },
    "64": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "66": {
      "op": "ADD"
    },
    "67": {
      "op": "PUSH2",
      "value": "0x24C"
    },
    "70": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "72": {
      "op": "SWAP2"
    },
    "73": {
      "op": "CODECOPY"
    },
    "74": {
      "op": "PUSH2",
      "value": "0xBA"
    },
    "77": {
      "jump": "i",
      "op": "JUMP"
    },
    "78": {
      "op": "JUMPDEST"
    },
    "79": {
      "op": "SWAP4"
    },
    "80": {
      "op": "SWAP3"
    },
    "81": {
      "op": "POP"
    },
    "82": {
      "op": "POP"
    },
    "83": {
      "op": "POP"
    },
    "84": {
      "jump": "o",
      "op": "JUMP"
    },
    "85": {
      "op": "JUMPDEST"
    },
    "86": {
      "op": "EXTCODESIZE"
    },
    "87": {
      "op": "ISZERO"
    },
    "88": {
      "op": "ISZERO"
    },
    "89": {
      "op": "SWAP1"
    },
    "90": {
      "jump": "o",
      "op": "JUMP"
    },
    "91": {
      "op": "JUMPDEST"
    },
    "92": {
      "op": "SWAP1"
    },
    "93": {
      "jump": "o",
      "op": "JUMP"
    },
    "94": {
      "fn": "ERC1967Proxy._implementation",
      "offset": [
        1174,
        1314
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "95": {
      "fn": "ERC1967Proxy._implementation",
      "offset": [
        1241,
        1253
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "97": {
      "fn": "ERC1967Proxy._implementation",
      "offset": [
        1272,
        1307
      ],
      "op": "PUSH2",
      "path": "35",
      "statement": 3,
      "value": "0x91"
    },
    "100": {
      "offset": [
        901,
        967
      ],
      "op": "PUSH32",
      "path": "36",
      "value": "0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
    },
    "133": {
      "fn": "ERC1967Upgrade._getImplementation",
      "offset": [
        1251,
        1305
      ],
      "op": "SLOAD",
      "path": "36",
      "statement": 4
    },
    "134": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "138": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "140": {
      "op": "SHL"
    },
    "141": {
      "op": "SUB"
    },
    "142": {
      "fn": "ERC1967Upgrade._getImplementation",
      "offset": [
        1251,
        1305
      ],
      "op": "AND",
      "path": "36"
    },
    "143": {
      "fn": "ERC1967Upgrade._getImplementation",
      "offset": [
        1251,
        1305
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "144": {
      "fn": "ERC1967Upgrade._getImplementation",
      "offset": [
        1172,
        1312
      ],
      "op": "JUMP",
      "path": "36"
    },
    "145": {
      "fn": "ERC1967Proxy._implementation",
      "offset": [
        1272,
        1307
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "146": {
      "fn": "ERC1967Proxy._implementation",
      "offset": [
        1265,
        1307
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "147": {
      "fn": "ERC1967Proxy._implementation",
      "offset": [
        1265,
        1307
      ],
      "op": "POP",
      "path": "35"
    },
    "148": {
      "fn": "ERC1967Proxy._implementation",
      "offset": [
        1174,
        1314
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "149": {
      "fn": "ERC1967Proxy._implementation",
      "jump": "o",
      "offset": [
        1174,
        1314
      ],
      "op": "JUMP",
      "path": "35"
    },
    "150": {
      "fn": "Proxy._delegate",
      "offset": [
        883,
        1778
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "151": {
      "fn": "Proxy._delegate",
      "offset": [
        1221,
        1235
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "152": {
      "fn": "Proxy._delegate",
      "offset": [
        1218,
        1219
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "154": {
      "fn": "Proxy._delegate",
      "offset": [
        1215,
        1216
      ],
      "op": "DUP1",
      "path": "37"
    },
    "155": {
      "fn": "Proxy._delegate",
      "offset": [
        1202,
        1236
      ],
      "op": "CALLDATACOPY",
      "path": "37"
    },
    "156": {
      "fn": "Proxy._delegate",
      "offset": [
        1435,
        1436
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "158": {
      "fn": "Proxy._delegate",
      "offset": [
        1432,
        1433
      ],
      "op": "DUP1",
      "path": "37"
    },
    "159": {
      "fn": "Proxy._delegate",
      "offset": [
        1416,
        1430
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "160": {
      "fn": "Proxy._delegate",
      "offset": [
        1413,
        1414
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "162": {
      "fn": "Proxy._delegate",
      "offset": [
        1397,
        1411
      ],
      "op": "DUP5",
      "path": "37"
    },
    "163": {
      "fn": "Proxy._delegate",
      "offset": [
        1390,
        1395
      ],
      "op": "GAS",
      "path": "37"
    },
    "164": {
      "fn": "Proxy._delegate",
      "offset": [
        1377,
        1437
      ],
      "op": "DELEGATECALL",
      "path": "37"
    },
    "165": {
      "fn": "Proxy._delegate",
      "offset": [
        1511,
        1527
      ],
      "op": "RETURNDATASIZE",
      "path": "37"
    },
    "166": {
      "fn": "Proxy._delegate",
      "offset": [
        1508,
        1509
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "168": {
      "fn": "Proxy._delegate",
      "offset": [
        1505,
        1506
      ],
      "op": "DUP1",
      "path": "37"
    },
    "169": {
      "fn": "Proxy._delegate",
      "offset": [
        1490,
        1528
      ],
      "op": "RETURNDATACOPY",
      "path": "37"
    },
    "170": {
      "fn": "Proxy._delegate",
      "offset": [
        1549,
        1555
      ],
      "op": "DUP1",
      "path": "37"
    },
    "171": {
      "fn": "Proxy._delegate",
      "offset": [
        1616,
        1682
      ],
      "op": "DUP1",
      "path": "37"
    },
    "172": {
      "fn": "Proxy._delegate",
      "offset": [
        1616,
        1682
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "173": {
      "fn": "Proxy._delegate",
      "offset": [
        1616,
        1682
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xB5"
    },
    "176": {
      "fn": "Proxy._delegate",
      "offset": [
        1616,
        1682
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "177": {
      "fn": "Proxy._delegate",
      "offset": [
        1731,
        1747
      ],
      "op": "RETURNDATASIZE",
      "path": "37"
    },
    "178": {
      "fn": "Proxy._delegate",
      "offset": [
        1728,
        1729
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "180": {
      "fn": "Proxy._delegate",
      "offset": [
        1721,
        1748
      ],
      "op": "RETURN",
      "path": "37"
    },
    "181": {
      "fn": "Proxy._delegate",
      "offset": [
        1616,
        1682
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "182": {
      "fn": "Proxy._delegate",
      "offset": [
        1651,
        1667
      ],
      "op": "RETURNDATASIZE",
      "path": "37"
    },
    "183": {
      "fn": "Proxy._delegate",
      "offset": [
        1648,
        1649
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "185": {
      "fn": "Proxy._delegate",
      "offset": [
        1641,
        1668
      ],
      "op": "REVERT",
      "path": "37"
    },
    "186": {
      "op": "JUMPDEST"
    },
    "187": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "189": {
      "op": "DUP4"
    },
    "190": {
      "op": "EXTCODESIZE"
    },
    "191": {
      "op": "PUSH2",
      "value": "0x11E"
    },
    "194": {
      "op": "JUMPI"
    },
    "195": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "197": {
      "op": "MLOAD"
    },
    "198": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "202": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "204": {
      "op": "SHL"
    },
    "205": {
      "op": "DUP2"
    },
    "206": {
      "op": "MSTORE"
    },
    "207": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "209": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "211": {
      "op": "DUP3"
    },
    "212": {
      "op": "ADD"
    },
    "213": {
      "op": "MSTORE"
    },
    "214": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "216": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "218": {
      "op": "DUP3"
    },
    "219": {
      "op": "ADD"
    },
    "220": {
      "op": "MSTORE"
    },
    "221": {
      "op": "PUSH32",
      "value": "0x416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F"
    },
    "254": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "256": {
      "op": "DUP3"
    },
    "257": {
      "op": "ADD"
    },
    "258": {
      "op": "MSTORE"
    },
    "259": {
      "op": "PUSH6",
      "value": "0x1B9D1C9858DD"
    },
    "266": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "268": {
      "op": "SHL"
    },
    "269": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "271": {
      "op": "DUP3"
    },
    "272": {
      "op": "ADD"
    },
    "273": {
      "op": "MSTORE"
    },
    "274": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "276": {
      "op": "ADD"
    },
    "277": {
      "op": "JUMPDEST"
    },
    "278": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "280": {
      "op": "MLOAD"
    },
    "281": {
      "op": "DUP1"
    },
    "282": {
      "op": "SWAP2"
    },
    "283": {
      "op": "SUB"
    },
    "284": {
      "op": "SWAP1"
    },
    "285": {
      "op": "REVERT"
    },
    "286": {
      "op": "JUMPDEST"
    },
    "287": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "289": {
      "op": "DUP1"
    },
    "290": {
      "op": "DUP6"
    },
    "291": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "293": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "295": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "297": {
      "op": "SHL"
    },
    "298": {
      "op": "SUB"
    },
    "299": {
      "op": "AND"
    },
    "300": {
      "op": "DUP6"
    },
    "301": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "303": {
      "op": "MLOAD"
    },
    "304": {
      "op": "PUSH2",
      "value": "0x139"
    },
    "307": {
      "op": "SWAP2"
    },
    "308": {
      "op": "SWAP1"
    },
    "309": {
      "op": "PUSH2",
      "value": "0x1CC"
    },
    "312": {
      "jump": "i",
      "op": "JUMP"
    },
    "313": {
      "op": "JUMPDEST"
    },
    "314": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "316": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "318": {
      "op": "MLOAD"
    },
    "319": {
      "op": "DUP1"
    },
    "320": {
      "op": "DUP4"
    },
    "321": {
      "op": "SUB"
    },
    "322": {
      "op": "DUP2"
    },
    "323": {
      "op": "DUP6"
    },
    "324": {
      "op": "GAS"
    },
    "325": {
      "op": "DELEGATECALL"
    },
    "326": {
      "op": "SWAP2"
    },
    "327": {
      "op": "POP"
    },
    "328": {
      "op": "POP"
    },
    "329": {
      "op": "RETURNDATASIZE"
    },
    "330": {
      "op": "DUP1"
    },
    "331": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "333": {
      "op": "DUP2"
    },
    "334": {
      "op": "EQ"
    },
    "335": {
      "op": "PUSH2",
      "value": "0x174"
    },
    "338": {
      "op": "JUMPI"
    },
    "339": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "341": {
      "op": "MLOAD"
    },
    "342": {
      "op": "SWAP2"
    },
    "343": {
      "op": "POP"
    },
    "344": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "346": {
      "op": "NOT"
    },
    "347": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "349": {
      "op": "RETURNDATASIZE"
    },
    "350": {
      "op": "ADD"
    },
    "351": {
      "op": "AND"
    },
    "352": {
      "op": "DUP3"
    },
    "353": {
      "op": "ADD"
    },
    "354": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "356": {
      "op": "MSTORE"
    },
    "357": {
      "op": "RETURNDATASIZE"
    },
    "358": {
      "op": "DUP3"
    },
    "359": {
      "op": "MSTORE"
    },
    "360": {
      "op": "RETURNDATASIZE"
    },
    "361": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "363": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "365": {
      "op": "DUP5"
    },
    "366": {
      "op": "ADD"
    },
    "367": {
      "op": "RETURNDATACOPY"
    },
    "368": {
      "op": "PUSH2",
      "value": "0x179"
    },
    "371": {
      "op": "JUMP"
    },
    "372": {
      "op": "JUMPDEST"
    },
    "373": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "375": {
      "op": "SWAP2"
    },
    "376": {
      "op": "POP"
    },
    "377": {
      "op": "JUMPDEST"
    },
    "378": {
      "op": "POP"
    },
    "379": {
      "op": "SWAP2"
    },
    "380": {
      "op": "POP"
    },
    "381": {
      "op": "SWAP2"
    },
    "382": {
      "op": "POP"
    },
    "383": {
      "op": "PUSH2",
      "value": "0x189"
    },
    "386": {
      "op": "DUP3"
    },
    "387": {
      "op": "DUP3"
    },
    "388": {
      "op": "DUP7"
    },
    "389": {
      "op": "PUSH2",
      "value": "0x193"
    },
    "392": {
      "jump": "i",
      "op": "JUMP"
    },
    "393": {
      "op": "JUMPDEST"
    },
    "394": {
      "op": "SWAP7"
    },
    "395": {
      "op": "SWAP6"
    },
    "396": {
      "op": "POP"
    },
    "397": {
      "op": "POP"
    },
    "398": {
      "op": "POP"
    },
    "399": {
      "op": "POP"
    },
    "400": {
      "op": "POP"
    },
    "401": {
      "op": "POP"
    },
    "402": {
      "jump": "o",
      "op": "JUMP"
    },
    "403": {
      "op": "JUMPDEST"
    },
    "404": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "406": {
      "op": "DUP4"
    },
    "407": {
      "op": "ISZERO"
    },
    "408": {
      "op": "PUSH2",
      "value": "0x1A2"
    },
    "411": {
      "op": "JUMPI"
    },
    "412": {
      "op": "POP"
    },
    "413": {
      "op": "DUP2"
    },
    "414": {
      "op": "PUSH2",
      "value": "0x4E"
    },
    "417": {
      "op": "JUMP"
    },
    "418": {
      "op": "JUMPDEST"
    },
    "419": {
      "op": "DUP3"
    },
    "420": {
      "op": "MLOAD"
    },
    "421": {
      "op": "ISZERO"
    },
    "422": {
      "op": "PUSH2",
      "value": "0x1B2"
    },
    "425": {
      "op": "JUMPI"
    },
    "426": {
      "op": "DUP3"
    },
    "427": {
      "op": "MLOAD"
    },
    "428": {
      "op": "DUP1"
    },
    "429": {
      "op": "DUP5"
    },
    "430": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "432": {
      "op": "ADD"
    },
    "433": {
      "op": "REVERT"
    },
    "434": {
      "op": "JUMPDEST"
    },
    "435": {
      "op": "DUP2"
    },
    "436": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "438": {
      "op": "MLOAD"
    },
    "439": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "443": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "445": {
      "op": "SHL"
    },
    "446": {
      "op": "DUP2"
    },
    "447": {
      "op": "MSTORE"
    },
    "448": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "450": {
      "op": "ADD"
    },
    "451": {
      "op": "PUSH2",
      "value": "0x115"
    },
    "454": {
      "op": "SWAP2"
    },
    "455": {
      "op": "SWAP1"
    },
    "456": {
      "op": "PUSH2",
      "value": "0x1E8"
    },
    "459": {
      "jump": "i",
      "op": "JUMP"
    },
    "460": {
      "op": "JUMPDEST"
    },
    "461": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "463": {
      "op": "DUP3"
    },
    "464": {
      "op": "MLOAD"
    },
    "465": {
      "op": "PUSH2",
      "value": "0x1DE"
    },
    "468": {
      "op": "DUP2"
    },
    "469": {
      "op": "DUP5"
    },
    "470": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "472": {
      "op": "DUP8"
    },
    "473": {
      "op": "ADD"
    },
    "474": {
      "op": "PUSH2",
      "value": "0x21B"
    },
    "477": {
      "jump": "i",
      "op": "JUMP"
    },
    "478": {
      "op": "JUMPDEST"
    },
    "479": {
      "op": "SWAP2"
    },
    "480": {
      "op": "SWAP1"
    },
    "481": {
      "op": "SWAP2"
    },
    "482": {
      "op": "ADD"
    },
    "483": {
      "op": "SWAP3"
    },
    "484": {
      "op": "SWAP2"
    },
    "485": {
      "op": "POP"
    },
    "486": {
      "op": "POP"
    },
    "487": {
      "jump": "o",
      "op": "JUMP"
    },
    "488": {
      "op": "JUMPDEST"
    },
    "489": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "491": {
      "op": "DUP2"
    },
    "492": {
      "op": "MSTORE"
    },
    "493": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "495": {
      "op": "DUP3"
    },
    "496": {
      "op": "MLOAD"
    },
    "497": {
      "op": "DUP1"
    },
    "498": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "500": {
      "op": "DUP5"
    },
    "501": {
      "op": "ADD"
    },
    "502": {
      "op": "MSTORE"
    },
    "503": {
      "op": "PUSH2",
      "value": "0x207"
    },
    "506": {
      "op": "DUP2"
    },
    "507": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "509": {
      "op": "DUP6"
    },
    "510": {
      "op": "ADD"
    },
    "511": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "513": {
      "op": "DUP8"
    },
    "514": {
      "op": "ADD"
    },
    "515": {
      "op": "PUSH2",
      "value": "0x21B"
    },
    "518": {
      "jump": "i",
      "op": "JUMP"
    },
    "519": {
      "op": "JUMPDEST"
    },
    "520": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "522": {
      "op": "ADD"
    },
    "523": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "525": {
      "op": "NOT"
    },
    "526": {
      "op": "AND"
    },
    "527": {
      "op": "SWAP2"
    },
    "528": {
      "op": "SWAP1"
    },
    "529": {
      "op": "SWAP2"
    },
    "530": {
      "op": "ADD"
    },
    "531": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "533": {
      "op": "ADD"
    },
    "534": {
      "op": "SWAP3"
    },
    "535": {
      "op": "SWAP2"
    },
    "536": {
      "op": "POP"
    },
    "537": {
      "op": "POP"
    },
    "538": {
      "jump": "o",
      "op": "JUMP"
    },
    "539": {
      "op": "JUMPDEST"
    },
    "540": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "542": {
      "op": "JUMPDEST"
    },
    "543": {
      "op": "DUP4"
    },
    "544": {
      "op": "DUP2"
    },
    "545": {
      "op": "LT"
    },
    "546": {
      "op": "ISZERO"
    },
    "547": {
      "op": "PUSH2",
      "value": "0x236"
    },
    "550": {
      "op": "JUMPI"
    },
    "551": {
      "op": "DUP2"
    },
    "552": {
      "op": "DUP2"
    },
    "553": {
      "op": "ADD"
    },
    "554": {
      "op": "MLOAD"
    },
    "555": {
      "op": "DUP4"
    },
    "556": {
      "op": "DUP3"
    },
    "557": {
      "op": "ADD"
    },
    "558": {
      "op": "MSTORE"
    },
    "559": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "561": {
      "op": "ADD"
    },
    "562": {
      "op": "PUSH2",
      "value": "0x21E"
    },
    "565": {
      "op": "JUMP"
    },
    "566": {
      "op": "JUMPDEST"
    },
    "567": {
      "op": "DUP4"
    },
    "568": {
      "op": "DUP2"
    },
    "569": {
      "op": "GT"
    },
    "570": {
      "op": "ISZERO"
    },
    "571": {
      "op": "PUSH2",
      "value": "0x245"
    },
    "574": {
      "op": "JUMPI"
    },
    "575": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "577": {
      "op": "DUP5"
    },
    "578": {
      "op": "DUP5"
    },
    "579": {
      "op": "ADD"
    },
    "580": {
      "op": "MSTORE"
    },
    "581": {
      "op": "JUMPDEST"
    },
    "582": {
      "op": "POP"
    },
    "583": {
      "op": "POP"
    },
    "584": {
      "op": "POP"
    },
    "585": {
      "op": "POP"
    },
    "586": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "12eedfbe5dc78d20a142f25d78d8b80ce73cc1c5",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../Proxy.sol\";\nimport \"./ERC1967Upgrade.sol\";\n\n/**\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\n * implementation address that can be changed. This address is stored in storage in the location specified by\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\n * implementation behind the proxy.\n */\ncontract ERC1967Proxy is Proxy, ERC1967Upgrade {\n    /**\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\n     *\n     * If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\n     * function call, and allows initializating the storage of the proxy like a Solidity constructor.\n     */\n    constructor(address _logic, bytes memory _data) payable {\n        assert(_IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(\"eip1967.proxy.implementation\")) - 1));\n        _upgradeToAndCall(_logic, _data, false);\n    }\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function _implementation() internal view virtual override returns (address impl) {\n        return ERC1967Upgrade._getImplementation();\n    }\n}\n",
  "sourceMap": "486:830:35:-:0;;;879:217;;;;;;;;;;;;;;;;;;:::i;:::-;984:54;1037:1;992:41;984:54;:::i;:::-;-1:-1:-1;;;;;;;;;;;952:87:35;945:95;;;;:::i;:::-;1050:39;1068:6;1076:5;1083;1050:17;:39::i;:::-;879:217;;486:830;;2054:295:36;2192:29;2203:17;2192:10;:29::i;:::-;2249:1;2235:4;:11;:15;:28;;;;2254:9;2235:28;2231:112;;;2279:53;2308:17;2327:4;2279:28;;;;;:53;;:::i;:::-;;2231:112;2054:295;;;:::o;1768:152::-;1834:37;1853:17;1834:18;:37::i;:::-;1886:27;;-1:-1:-1;;;;;1886:27:36;;;;;;;;1768:152;:::o;6170:198:91:-;6253:12;6284:77;6305:6;6313:4;6284:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6277:84;6170:198;-1:-1:-1;;;6170:198:91:o;1403:259:36:-;1484:37;1503:17;1484:18;;;;;:37;;:::i;:::-;1476:95;;;;-1:-1:-1;;;1476:95:36;;1938:2:121;1476:95:36;;;1920:21:121;1977:2;1957:18;;;1950:30;2016:34;1996:18;;;1989:62;-1:-1:-1;;;2067:18:121;;;2060:43;2120:19;;1476:95:36;;;;;;;;;1638:17;1581:48;-1:-1:-1;;;;;;;;;;;1608:20:36;;1581:26;;;;;:48;;:::i;:::-;:74;;-1:-1:-1;;;;;;1581:74:36;-1:-1:-1;;;;;1581:74:36;;;;;;;;;;-1:-1:-1;1403:259:36:o;6554:387:91:-;6695:12;1034:20;;6719:69;;;;-1:-1:-1;;;6719:69:91;;2352:2:121;6719:69:91;;;2334:21:121;2391:2;2371:18;;;2364:30;2430:34;2410:18;;;2403:62;-1:-1:-1;;;2481:18:121;;;2474:36;2527:19;;6719:69:91;2324:228:121;6719:69:91;6800:12;6814:23;6841:6;-1:-1:-1;;;;;6841:19:91;6861:4;6841:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6799:67:91;;-1:-1:-1;6799:67:91;-1:-1:-1;6883:51:91;6799:67;;6921:12;6883:16;:51::i;:::-;6876:58;6554:387;-1:-1:-1;;;;;;6554:387:91:o;718:377::-;1034:20;1080:8;;;718:377::o;1542:147:97:-;1669:4;1542:147::o;7161:692:91:-;7307:12;7335:7;7331:516;;;-1:-1:-1;7365:10:91;7358:17;;7331:516;7476:17;;:21;7472:365;;7670:10;7664:17;7730:15;7717:10;7713:2;7709:19;7702:44;7472:365;7809:12;7802:20;;-1:-1:-1;;;7802:20:91;;;;;;;;:::i;14:1050:121:-;102:6;110;163:2;151:9;142:7;138:23;134:32;131:2;;;179:1;176;169:12;131:2;205:16;;-1:-1:-1;;;;;250:31:121;;240:42;;230:2;;296:1;293;286:12;230:2;368;353:18;;347:25;319:5;;-1:-1:-1;;;;;;421:14:121;;;418:2;;;448:1;445;438:12;418:2;486:6;475:9;471:22;461:32;;531:7;524:4;520:2;516:13;512:27;502:2;;553:1;550;543:12;502:2;582;576:9;604:2;600;597:10;594:2;;;610:18;;:::i;:::-;685:2;679:9;653:2;739:13;;-1:-1:-1;;735:22:121;;;759:2;731:31;727:40;715:53;;;783:18;;;803:22;;;780:46;777:2;;;829:18;;:::i;:::-;869:10;865:2;858:22;904:2;896:6;889:18;944:7;939:2;934;930;926:11;922:20;919:33;916:2;;;965:1;962;955:12;916:2;978:55;1030:2;1025;1017:6;1013:15;1008:2;1004;1000:11;978:55;:::i;:::-;1052:6;1042:16;;;;;;;121:943;;;;;:::o;1069:274::-;1198:3;1236:6;1230:13;1252:53;1298:6;1293:3;1286:4;1278:6;1274:17;1252:53;:::i;:::-;1321:16;;;;;1206:137;-1:-1:-1;;1206:137:121:o;1348:383::-;1497:2;1486:9;1479:21;1460:4;1529:6;1523:13;1572:6;1567:2;1556:9;1552:18;1545:34;1588:66;1647:6;1642:2;1631:9;1627:18;1622:2;1614:6;1610:15;1588:66;:::i;:::-;1715:2;1694:15;-1:-1:-1;;1690:29:121;1675:45;;;;1722:2;1671:54;;1469:262;-1:-1:-1;;1469:262:121:o;2557:222::-;2597:4;2625:1;2622;2619:8;2616:2;;;2669:10;2664:3;2660:20;2657:1;2650:31;2704:4;2701:1;2694:15;2732:4;2729:1;2722:15;2616:2;-1:-1:-1;2764:9:121;;2606:173::o;2784:258::-;2856:1;2866:113;2880:6;2877:1;2874:13;2866:113;;;2956:11;;;2950:18;2937:11;;;2930:39;2902:2;2895:10;2866:113;;;2997:6;2994:1;2991:13;2988:2;;;-1:-1:-1;;3032:1:121;3014:16;;3007:27;2837:205::o;3047:127::-;3108:10;3103:3;3099:20;3096:1;3089:31;3139:4;3136:1;3129:15;3163:4;3160:1;3153:15;3179:127;3240:10;3235:3;3231:20;3228:1;3221:31;3271:4;3268:1;3261:15;3295:4;3292:1;3285:15;3211:95;486:830:35;;;;;;",
  "sourcePath": "contracts/node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
  "type": "contract"
}