{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "beacon",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beacon",
          "type": "address"
        }
      ],
      "name": "BeaconUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "36": "contracts/node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
    "37": "contracts/node_modules/@openzeppelin/contracts/proxy/Proxy.sol",
    "38": "contracts/node_modules/@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol",
    "39": "contracts/node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol"
  },
  "ast": {
    "absolutePath": "contracts/node_modules/@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol",
    "exportedSymbols": {
      "Address": [
        15074
      ],
      "BeaconProxy": [
        6298
      ],
      "ERC1967Upgrade": [
        6164
      ],
      "IBeacon": [
        6308
      ],
      "Proxy": [
        6216
      ],
      "StorageSlot": [
        15481
      ]
    },
    "id": 6299,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6218,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:38"
      },
      {
        "absolutePath": "contracts/node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
        "file": "./IBeacon.sol",
        "id": 6219,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6299,
        "sourceUnit": 6309,
        "src": "58:23:38",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/node_modules/@openzeppelin/contracts/proxy/Proxy.sol",
        "file": "../Proxy.sol",
        "id": 6220,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6299,
        "sourceUnit": 6217,
        "src": "82:22:38",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "file": "../ERC1967/ERC1967Upgrade.sol",
        "id": 6221,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6299,
        "sourceUnit": 6165,
        "src": "105:39:38",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6223,
              "name": "Proxy",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6216,
              "src": "524:5:38"
            },
            "id": 6224,
            "nodeType": "InheritanceSpecifier",
            "src": "524:5:38"
          },
          {
            "baseName": {
              "id": 6225,
              "name": "ERC1967Upgrade",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6164,
              "src": "531:14:38"
            },
            "id": 6226,
            "nodeType": "InheritanceSpecifier",
            "src": "531:14:38"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 6222,
          "nodeType": "StructuredDocumentation",
          "src": "146:353:38",
          "text": " @dev This contract implements a proxy that gets the implementation address for each call from a {UpgradeableBeacon}.\n The beacon address is stored in storage slot `uint256(keccak256('eip1967.proxy.beacon')) - 1`, so that it doesn't\n conflict with the storage layout of the implementation behind the proxy.\n _Available since v3.4._"
        },
        "fullyImplemented": true,
        "id": 6298,
        "linearizedBaseContracts": [
          6298,
          6164,
          6216
        ],
        "name": "BeaconProxy",
        "nameLocation": "509:11:38",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 6256,
              "nodeType": "Block",
              "src": "1037:150:38",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 6247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6235,
                          "name": "_BEACON_SLOT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6071,
                          "src": "1054:12:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 6245,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "656970313936372e70726f78792e626561636f6e",
                                        "id": 6241,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1096:22:38",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_a3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d51",
                                          "typeString": "literal_string \"eip1967.proxy.beacon\""
                                        },
                                        "value": "eip1967.proxy.beacon"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_a3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d51",
                                          "typeString": "literal_string \"eip1967.proxy.beacon\""
                                        }
                                      ],
                                      "id": 6240,
                                      "name": "keccak256",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -8,
                                      "src": "1086:9:38",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                        "typeString": "function (bytes memory) pure returns (bytes32)"
                                      }
                                    },
                                    "id": 6242,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1086:33:38",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 6239,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1078:7:38",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 6238,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1078:7:38",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 6243,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1078:42:38",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 6244,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1123:1:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "1078:46:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 6237,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1070:7:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 6236,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1070:7:38",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 6246,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1070:55:38",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "1054:71:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 6234,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "1047:6:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 6248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1047:79:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6249,
                  "nodeType": "ExpressionStatement",
                  "src": "1047:79:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6251,
                        "name": "beacon",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6229,
                        "src": "1160:6:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6252,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6231,
                        "src": "1168:4:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 6253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1174:5:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 6250,
                      "name": "_upgradeBeaconToAndCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6163,
                      "src": "1136:23:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,bytes memory,bool)"
                      }
                    },
                    "id": 6254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1136:44:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6255,
                  "nodeType": "ExpressionStatement",
                  "src": "1136:44:38"
                }
              ]
            },
            "documentation": {
              "id": 6227,
              "nodeType": "StructuredDocumentation",
              "src": "552:425:38",
              "text": " @dev Initializes the proxy with `beacon`.\n If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon. This\n will typically be an encoded function call, and allows initializating the storage of the proxy like a Solidity\n constructor.\n Requirements:\n - `beacon` must be a contract with the interface {IBeacon}."
            },
            "id": 6257,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6232,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6229,
                  "mutability": "mutable",
                  "name": "beacon",
                  "nameLocation": "1002:6:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 6257,
                  "src": "994:14:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6228,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "994:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6231,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "1023:4:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 6257,
                  "src": "1010:17:38",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 6230,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1010:5:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "993:35:38"
            },
            "returnParameters": {
              "id": 6233,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1037:0:38"
            },
            "scope": 6298,
            "src": "982:205:38",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6266,
              "nodeType": "Block",
              "src": "1316:36:38",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 6263,
                      "name": "_getBeacon",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6089,
                      "src": "1333:10:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 6264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1333:12:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 6262,
                  "id": 6265,
                  "nodeType": "Return",
                  "src": "1326:19:38"
                }
              ]
            },
            "documentation": {
              "id": 6258,
              "nodeType": "StructuredDocumentation",
              "src": "1193:59:38",
              "text": " @dev Returns the current beacon address."
            },
            "id": 6267,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beacon",
            "nameLocation": "1266:7:38",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6259,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1273:2:38"
            },
            "returnParameters": {
              "id": 6262,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6261,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6267,
                  "src": "1307:7:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6260,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1307:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1306:9:38"
            },
            "scope": 6298,
            "src": "1257:95:38",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              6181
            ],
            "body": {
              "id": 6281,
              "nodeType": "Block",
              "src": "1531:62:38",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 6275,
                              "name": "_getBeacon",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6089,
                              "src": "1556:10:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 6276,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1556:12:38",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 6274,
                          "name": "IBeacon",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6308,
                          "src": "1548:7:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IBeacon_$6308_$",
                            "typeString": "type(contract IBeacon)"
                          }
                        },
                        "id": 6277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1548:21:38",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBeacon_$6308",
                          "typeString": "contract IBeacon"
                        }
                      },
                      "id": 6278,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "implementation",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6307,
                      "src": "1548:36:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 6279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1548:38:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 6273,
                  "id": 6280,
                  "nodeType": "Return",
                  "src": "1541:45:38"
                }
              ]
            },
            "documentation": {
              "id": 6268,
              "nodeType": "StructuredDocumentation",
              "src": "1358:92:38",
              "text": " @dev Returns the current implementation address of the associated beacon."
            },
            "id": 6282,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_implementation",
            "nameLocation": "1464:15:38",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 6270,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1504:8:38"
            },
            "parameters": {
              "id": 6269,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1479:2:38"
            },
            "returnParameters": {
              "id": 6273,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6272,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6282,
                  "src": "1522:7:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6271,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1522:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1521:9:38"
            },
            "scope": 6298,
            "src": "1455:138:38",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 6296,
              "nodeType": "Block",
              "src": "2043:61:38",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6291,
                        "name": "beacon",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6285,
                        "src": "2077:6:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6292,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6287,
                        "src": "2085:4:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 6293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2091:5:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 6290,
                      "name": "_upgradeBeaconToAndCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6163,
                      "src": "2053:23:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,bytes memory,bool)"
                      }
                    },
                    "id": 6294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2053:44:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6295,
                  "nodeType": "ExpressionStatement",
                  "src": "2053:44:38"
                }
              ]
            },
            "documentation": {
              "id": 6283,
              "nodeType": "StructuredDocumentation",
              "src": "1599:367:38",
              "text": " @dev Changes the proxy to use a new beacon. Deprecated: see {_upgradeBeaconToAndCall}.\n If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon.\n Requirements:\n - `beacon` must be a contract.\n - The implementation returned by `beacon` must be a contract."
            },
            "id": 6297,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setBeacon",
            "nameLocation": "1980:10:38",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6288,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6285,
                  "mutability": "mutable",
                  "name": "beacon",
                  "nameLocation": "1999:6:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 6297,
                  "src": "1991:14:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6284,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1991:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6287,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "2020:4:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 6297,
                  "src": "2007:17:38",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 6286,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2007:5:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1990:35:38"
            },
            "returnParameters": {
              "id": 6289,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2043:0:38"
            },
            "scope": 6298,
            "src": "1971:133:38",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 6299,
        "src": "500:1606:38",
        "usedErrors": []
      }
    ],
    "src": "33:2074:38"
  },
  "bytecode": "608060405260405161099338038061099383398101604081905261002291610470565b61004d60017fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5161057f565b60008051602061094c83398151915214610069576100696105d0565b6100758282600061007c565b50506105fc565b61008583610156565b6040516001600160a01b038416907f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e90600090a26000825111806100c65750805b156101515761014f836001600160a01b0316635c60da1b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561010757600080fd5b505afa15801561011b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013f9190610455565b836102f660201b6100291760201c565b505b505050565b6101698161032260201b6100551760201c565b6101c85760405162461bcd60e51b815260206004820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e6044820152641d1c9858dd60da1b60648201526084015b60405180910390fd5b61024b816001600160a01b0316635c60da1b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561020457600080fd5b505afa158015610218573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023c9190610455565b61032260201b6100551760201c565b6102b05760405162461bcd60e51b815260206004820152603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201526f1cc81b9bdd08184818dbdb9d1c9858dd60821b60648201526084016101bf565b806102d560008051602061094c83398151915260001b61032860201b61005b1760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b606061031b838360405180606001604052806027815260200161096c6027913961032b565b9392505050565b3b151590565b90565b6060833b61038a5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016101bf565b600080856001600160a01b0316856040516103a59190610530565b600060405180830381855af49150503d80600081146103e0576040519150601f19603f3d011682016040523d82523d6000602084013e6103e5565b606091505b5090925090506103f6828286610400565b9695505050505050565b6060831561040f57508161031b565b82511561041f5782518084602001fd5b8160405162461bcd60e51b81526004016101bf919061054c565b80516001600160a01b038116811461045057600080fd5b919050565b60006020828403121561046757600080fd5b61031b82610439565b6000806040838503121561048357600080fd5b61048c83610439565b60208401519092506001600160401b03808211156104a957600080fd5b818501915085601f8301126104bd57600080fd5b8151818111156104cf576104cf6105e6565b604051601f8201601f19908116603f011681019083821181831017156104f7576104f76105e6565b8160405282815288602084870101111561051057600080fd5b6105218360208301602088016105a4565b80955050505050509250929050565b600082516105428184602087016105a4565b9190910192915050565b602081526000825180602084015261056b8160408501602087016105a4565b601f01601f19169190910160400192915050565b60008282101561059f57634e487b7160e01b600052601160045260246000fd5b500390565b60005b838110156105bf5781810151838201526020016105a7565b8381111561014f5750506000910152565b634e487b7160e01b600052600160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6103418061060b6000396000f3fe60806040523661001357610011610017565b005b6100115b61002761002261005e565b610106565b565b606061004e83836040518060600160405280602781526020016102e56027913961012a565b9392505050565b3b151590565b90565b60006100917fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50546001600160a01b031690565b6001600160a01b0316635c60da1b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156100c957600080fd5b505afa1580156100dd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610101919061023c565b905090565b3660008037600080366000845af43d6000803e808015610125573d6000f35b3d6000fd5b6060833b61018e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084015b60405180910390fd5b600080856001600160a01b0316856040516101a99190610265565b600060405180830381855af49150503d80600081146101e4576040519150601f19603f3d011682016040523d82523d6000602084013e6101e9565b606091505b50915091506101f9828286610203565b9695505050505050565b6060831561021257508161004e565b8251156102225782518084602001fd5b8160405162461bcd60e51b81526004016101859190610281565b60006020828403121561024e57600080fd5b81516001600160a01b038116811461004e57600080fd5b600082516102778184602087016102b4565b9190910192915050565b60208152600082518060208401526102a08160408501602087016102b4565b601f01601f19169190910160400192915050565b60005b838110156102cf5781810151838201526020016102b7565b838111156102de576000848401525b5050505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212206b4f51758f31635c117327e5349336e9338f74d504dcb91bb9bb5758cfca9d3164736f6c63430008060033a3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.6+commit.11564f7e"
  },
  "contractName": "BeaconProxy",
  "coverageMap": {
    "branches": {
      "36": {},
      "37": {},
      "38": {},
      "39": {}
    },
    "statements": {
      "36": {
        "ERC1967Upgrade._getBeacon": {
          "4": [
            5503,
            5556
          ]
        }
      },
      "37": {
        "Proxy.<fallback>": {
          "1": [
            2610,
            2621
          ]
        },
        "Proxy.<receive>": {
          "0": [
            2833,
            2844
          ]
        },
        "Proxy._fallback": {
          "2": [
            2332,
            2360
          ]
        }
      },
      "38": {
        "BeaconProxy._implementation": {
          "3": [
            1541,
            1586
          ]
        }
      },
      "39": {}
    }
  },
  "dependencies": [
    "ERC1967Upgrade",
    "IBeacon",
    "Proxy"
  ],
  "deployedBytecode": "60806040523661001357610011610017565b005b6100115b61002761002261005e565b610106565b565b606061004e83836040518060600160405280602781526020016102e56027913961012a565b9392505050565b3b151590565b90565b60006100917fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50546001600160a01b031690565b6001600160a01b0316635c60da1b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156100c957600080fd5b505afa1580156100dd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610101919061023c565b905090565b3660008037600080366000845af43d6000803e808015610125573d6000f35b3d6000fd5b6060833b61018e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084015b60405180910390fd5b600080856001600160a01b0316856040516101a99190610265565b600060405180830381855af49150503d80600081146101e4576040519150601f19603f3d011682016040523d82523d6000602084013e6101e9565b606091505b50915091506101f9828286610203565b9695505050505050565b6060831561021257508161004e565b8251156102225782518084602001fd5b8160405162461bcd60e51b81526004016101859190610281565b60006020828403121561024e57600080fd5b81516001600160a01b038116811461004e57600080fd5b600082516102778184602087016102b4565b9190910192915050565b60208152600082518060208401526102a08160408501602087016102b4565b601f01601f19169190910160400192915050565b60005b838110156102cf5781810151838201526020016102b7565b838111156102de576000848401525b5050505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212206b4f51758f31635c117327e5349336e9338f74d504dcb91bb9bb5758cfca9d3164736f6c63430008060033",
  "deployedSourceMap": "500:1606:38:-:0;;;;;;2833:11:37;:9;:11::i;:::-;500:1606:38;;2610:11:37;2257:110;2332:28;2342:17;:15;:17::i;:::-;2332:9;:28::i;:::-;2257:110::o;6170:198:91:-;6253:12;6284:77;6305:6;6313:4;6284:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6277:84;6170:198;-1:-1:-1;;;6170:198:91:o;718:377::-;1034:20;1080:8;;;718:377::o;1542:147:97:-;1669:4;1542:147::o;1455:138:38:-;1522:7;1556:12;5194:66:36;5510:46;-1:-1:-1;;;;;5510:46:36;;5439:124;1556:12:38;-1:-1:-1;;;;;1548:36:38;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1541:45;;1455:138;:::o;883:895:37:-;1221:14;1218:1;1215;1202:34;1435:1;1432;1416:14;1413:1;1397:14;1390:5;1377:60;1511:16;1508:1;1505;1490:38;1549:6;1616:66;;;;1731:16;1728:1;1721:27;1616:66;1651:16;1648:1;1641:27;6554:387:91;6695:12;1034:20;;6719:69;;;;-1:-1:-1;;;6719:69:91;;1178:2:121;6719:69:91;;;1160:21:121;1217:2;1197:18;;;1190:30;1256:34;1236:18;;;1229:62;-1:-1:-1;;;1307:18:121;;;1300:36;1353:19;;6719:69:91;;;;;;;;;6800:12;6814:23;6841:6;-1:-1:-1;;;;;6841:19:91;6861:4;6841:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6799:67;;;;6883:51;6900:7;6909:10;6921:12;6883:16;:51::i;:::-;6876:58;6554:387;-1:-1:-1;;;;;;6554:387:91:o;7161:692::-;7307:12;7335:7;7331:516;;;-1:-1:-1;7365:10:91;7358:17;;7331:516;7476:17;;:21;7472:365;;7670:10;7664:17;7730:15;7717:10;7713:2;7709:19;7702:44;7472:365;7809:12;7802:20;;-1:-1:-1;;;7802:20:91;;;;;;;;:::i;14:290:121:-;84:6;137:2;125:9;116:7;112:23;108:32;105:2;;;153:1;150;143:12;105:2;179:16;;-1:-1:-1;;;;;224:31:121;;214:42;;204:2;;270:1;267;260:12;309:274;438:3;476:6;470:13;492:53;538:6;533:3;526:4;518:6;514:17;492:53;:::i;:::-;561:16;;;;;446:137;-1:-1:-1;;446:137:121:o;588:383::-;737:2;726:9;719:21;700:4;769:6;763:13;812:6;807:2;796:9;792:18;785:34;828:66;887:6;882:2;871:9;867:18;862:2;854:6;850:15;828:66;:::i;:::-;955:2;934:15;-1:-1:-1;;930:29:121;915:45;;;;962:2;911:54;;709:262;-1:-1:-1;;709:262:121:o;1383:258::-;1455:1;1465:113;1479:6;1476:1;1473:13;1465:113;;;1555:11;;;1549:18;1536:11;;;1529:39;1501:2;1494:10;1465:113;;;1596:6;1593:1;1590:13;1587:2;;;1631:1;1622:6;1617:3;1613:16;1606:27;1587:2;;1436:205;;;:::o",
  "language": "Solidity",
  "natspec": {
    "details": "This contract implements a proxy that gets the implementation address for each call from a {UpgradeableBeacon}. The beacon address is stored in storage slot `uint256(keccak256('eip1967.proxy.beacon')) - 1`, so that it doesn't conflict with the storage layout of the implementation behind the proxy. _Available since v3.4._",
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Initializes the proxy with `beacon`. If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon. This will typically be an encoded function call, and allows initializating the storage of the proxy like a Solidity constructor. Requirements: - `beacon` must be a contract with the interface {IBeacon}."
      }
    },
    "version": 1
  },
  "offset": [
    500,
    2106
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x13 JUMPI PUSH2 0x11 PUSH2 0x17 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11 JUMPDEST PUSH2 0x27 PUSH2 0x22 PUSH2 0x5E JUMP JUMPDEST PUSH2 0x106 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH2 0x4E DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2E5 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x12A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x91 PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5C60DA1B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x23C JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x125 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x60 DUP4 EXTCODESIZE PUSH2 0x18E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1B9D1C9858DD PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0x265 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1E4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1E9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1F9 DUP3 DUP3 DUP7 PUSH2 0x203 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x212 JUMPI POP DUP2 PUSH2 0x4E JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x222 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x185 SWAP2 SWAP1 PUSH2 0x281 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x277 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2B4 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2A0 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x2B4 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2CF JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2B7 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2DE JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x706673582212206B4F51 PUSH22 0x8F31635C117327E5349336E9338F74D504DCB91BB9BB JUMPI PC 0xCF 0xCA SWAP14 BALANCE PUSH5 0x736F6C6343 STOP ADDMOD MOD STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        500,
        2106
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        500,
        2106
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        500,
        2106
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "5": {
      "fn": null,
      "offset": [
        500,
        2106
      ],
      "op": "CALLDATASIZE",
      "path": "38"
    },
    "6": {
      "fn": null,
      "offset": [
        500,
        2106
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x13"
    },
    "9": {
      "fn": null,
      "offset": [
        500,
        2106
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "10": {
      "fn": "Proxy.<receive>",
      "offset": [
        2833,
        2844
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 0,
      "value": "0x11"
    },
    "13": {
      "fn": "Proxy.<receive>",
      "offset": [
        2833,
        2842
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x17"
    },
    "16": {
      "fn": "Proxy.<receive>",
      "jump": "i",
      "offset": [
        2833,
        2844
      ],
      "op": "JUMP",
      "path": "37"
    },
    "17": {
      "fn": "Proxy.<receive>",
      "offset": [
        2833,
        2844
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "18": {
      "offset": [
        500,
        2106
      ],
      "op": "STOP",
      "path": "38"
    },
    "19": {
      "fn": "Proxy.<receive>",
      "offset": [
        500,
        2106
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "20": {
      "fn": "Proxy.<fallback>",
      "offset": [
        2610,
        2621
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 1,
      "value": "0x11"
    },
    "23": {
      "fn": "Proxy._fallback",
      "offset": [
        2257,
        2367
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "24": {
      "fn": "Proxy._fallback",
      "offset": [
        2332,
        2360
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 2,
      "value": "0x27"
    },
    "27": {
      "fn": "Proxy._fallback",
      "offset": [
        2342,
        2359
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x22"
    },
    "30": {
      "fn": "Proxy._fallback",
      "offset": [
        2342,
        2357
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x5E"
    },
    "33": {
      "fn": "Proxy._fallback",
      "jump": "i",
      "offset": [
        2342,
        2359
      ],
      "op": "JUMP",
      "path": "37"
    },
    "34": {
      "fn": "Proxy._fallback",
      "offset": [
        2342,
        2359
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "35": {
      "fn": "Proxy._fallback",
      "offset": [
        2332,
        2341
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x106"
    },
    "38": {
      "fn": "Proxy._fallback",
      "jump": "i",
      "offset": [
        2332,
        2360
      ],
      "op": "JUMP",
      "path": "37"
    },
    "39": {
      "fn": "Proxy._fallback",
      "offset": [
        2332,
        2360
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "40": {
      "fn": "Proxy._fallback",
      "jump": "o",
      "offset": [
        2257,
        2367
      ],
      "op": "JUMP",
      "path": "37"
    },
    "41": {
      "op": "JUMPDEST"
    },
    "42": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "44": {
      "op": "PUSH2",
      "value": "0x4E"
    },
    "47": {
      "op": "DUP4"
    },
    "48": {
      "op": "DUP4"
    },
    "49": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "51": {
      "op": "MLOAD"
    },
    "52": {
      "op": "DUP1"
    },
    "53": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "55": {
      "op": "ADD"
    },
    "56": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "58": {
      "op": "MSTORE"
    },
    "59": {
      "op": "DUP1"
    },
    "60": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "62": {
      "op": "DUP2"
    },
    "63": {
      "op": "MSTORE"
    },
    "64": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "66": {
      "op": "ADD"
    },
    "67": {
      "op": "PUSH2",
      "value": "0x2E5"
    },
    "70": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "72": {
      "op": "SWAP2"
    },
    "73": {
      "op": "CODECOPY"
    },
    "74": {
      "op": "PUSH2",
      "value": "0x12A"
    },
    "77": {
      "jump": "i",
      "op": "JUMP"
    },
    "78": {
      "op": "JUMPDEST"
    },
    "79": {
      "op": "SWAP4"
    },
    "80": {
      "op": "SWAP3"
    },
    "81": {
      "op": "POP"
    },
    "82": {
      "op": "POP"
    },
    "83": {
      "op": "POP"
    },
    "84": {
      "jump": "o",
      "op": "JUMP"
    },
    "85": {
      "op": "JUMPDEST"
    },
    "86": {
      "op": "EXTCODESIZE"
    },
    "87": {
      "op": "ISZERO"
    },
    "88": {
      "op": "ISZERO"
    },
    "89": {
      "op": "SWAP1"
    },
    "90": {
      "jump": "o",
      "op": "JUMP"
    },
    "91": {
      "op": "JUMPDEST"
    },
    "92": {
      "op": "SWAP1"
    },
    "93": {
      "jump": "o",
      "op": "JUMP"
    },
    "94": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1455,
        1593
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "95": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1522,
        1529
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "97": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1556,
        1568
      ],
      "op": "PUSH2",
      "path": "38",
      "statement": 3,
      "value": "0x91"
    },
    "100": {
      "offset": [
        5194,
        5260
      ],
      "op": "PUSH32",
      "path": "36",
      "value": "0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50"
    },
    "133": {
      "fn": "ERC1967Upgrade._getBeacon",
      "offset": [
        5510,
        5556
      ],
      "op": "SLOAD",
      "path": "36",
      "statement": 4
    },
    "134": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "138": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "140": {
      "op": "SHL"
    },
    "141": {
      "op": "SUB"
    },
    "142": {
      "fn": "ERC1967Upgrade._getBeacon",
      "offset": [
        5510,
        5556
      ],
      "op": "AND",
      "path": "36"
    },
    "143": {
      "fn": "ERC1967Upgrade._getBeacon",
      "offset": [
        5510,
        5556
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "144": {
      "fn": "ERC1967Upgrade._getBeacon",
      "offset": [
        5439,
        5563
      ],
      "op": "JUMP",
      "path": "36"
    },
    "145": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1556,
        1568
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "146": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "148": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "150": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "152": {
      "op": "SHL"
    },
    "153": {
      "op": "SUB"
    },
    "154": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1584
      ],
      "op": "AND",
      "path": "38"
    },
    "155": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1584
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0x5C60DA1B"
    },
    "160": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "162": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "163": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "DUP2",
      "path": "38"
    },
    "164": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0xFFFFFFFF"
    },
    "169": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "AND",
      "path": "38"
    },
    "170": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0xE0"
    },
    "172": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "SHL",
      "path": "38"
    },
    "173": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "DUP2",
      "path": "38"
    },
    "174": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "175": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "177": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "ADD",
      "path": "38"
    },
    "178": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "180": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "182": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "183": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "DUP1",
      "path": "38"
    },
    "184": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "DUP4",
      "path": "38"
    },
    "185": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "SUB",
      "path": "38"
    },
    "186": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "DUP2",
      "path": "38"
    },
    "187": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "DUP7",
      "path": "38"
    },
    "188": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "DUP1",
      "path": "38"
    },
    "189": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "EXTCODESIZE",
      "path": "38"
    },
    "190": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "ISZERO",
      "path": "38"
    },
    "191": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "DUP1",
      "path": "38"
    },
    "192": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "ISZERO",
      "path": "38"
    },
    "193": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xC9"
    },
    "196": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "197": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "199": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "DUP1",
      "path": "38"
    },
    "200": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "REVERT",
      "path": "38"
    },
    "201": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "202": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "POP",
      "path": "38"
    },
    "203": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "GAS",
      "path": "38"
    },
    "204": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "STATICCALL",
      "path": "38"
    },
    "205": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "ISZERO",
      "path": "38"
    },
    "206": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "DUP1",
      "path": "38"
    },
    "207": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "ISZERO",
      "path": "38"
    },
    "208": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xDD"
    },
    "211": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "212": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "RETURNDATASIZE",
      "path": "38"
    },
    "213": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "215": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "DUP1",
      "path": "38"
    },
    "216": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "RETURNDATACOPY",
      "path": "38"
    },
    "217": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "RETURNDATASIZE",
      "path": "38"
    },
    "218": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "220": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "REVERT",
      "path": "38"
    },
    "221": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "222": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "POP",
      "path": "38"
    },
    "223": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "POP",
      "path": "38"
    },
    "224": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "POP",
      "path": "38"
    },
    "225": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "POP",
      "path": "38"
    },
    "226": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "228": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "229": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "RETURNDATASIZE",
      "path": "38"
    },
    "230": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x1F"
    },
    "232": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "NOT",
      "path": "38"
    },
    "233": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x1F"
    },
    "235": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "DUP3",
      "path": "38"
    },
    "236": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "ADD",
      "path": "38"
    },
    "237": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "AND",
      "path": "38"
    },
    "238": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "DUP3",
      "path": "38"
    },
    "239": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "ADD",
      "path": "38"
    },
    "240": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "DUP1",
      "path": "38"
    },
    "241": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "243": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "244": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "POP",
      "path": "38"
    },
    "245": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "DUP2",
      "path": "38"
    },
    "246": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "ADD",
      "path": "38"
    },
    "247": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "248": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x101"
    },
    "251": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "252": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "253": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x23C"
    },
    "256": {
      "fn": "BeaconProxy._implementation",
      "jump": "i",
      "offset": [
        1548,
        1586
      ],
      "op": "JUMP",
      "path": "38"
    },
    "257": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "258": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1541,
        1586
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "259": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1541,
        1586
      ],
      "op": "POP",
      "path": "38"
    },
    "260": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1455,
        1593
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "261": {
      "fn": "BeaconProxy._implementation",
      "jump": "o",
      "offset": [
        1455,
        1593
      ],
      "op": "JUMP",
      "path": "38"
    },
    "262": {
      "fn": "Proxy._delegate",
      "offset": [
        883,
        1778
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "263": {
      "fn": "Proxy._delegate",
      "offset": [
        1221,
        1235
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "264": {
      "fn": "Proxy._delegate",
      "offset": [
        1218,
        1219
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "266": {
      "fn": "Proxy._delegate",
      "offset": [
        1215,
        1216
      ],
      "op": "DUP1",
      "path": "37"
    },
    "267": {
      "fn": "Proxy._delegate",
      "offset": [
        1202,
        1236
      ],
      "op": "CALLDATACOPY",
      "path": "37"
    },
    "268": {
      "fn": "Proxy._delegate",
      "offset": [
        1435,
        1436
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "270": {
      "fn": "Proxy._delegate",
      "offset": [
        1432,
        1433
      ],
      "op": "DUP1",
      "path": "37"
    },
    "271": {
      "fn": "Proxy._delegate",
      "offset": [
        1416,
        1430
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "272": {
      "fn": "Proxy._delegate",
      "offset": [
        1413,
        1414
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "274": {
      "fn": "Proxy._delegate",
      "offset": [
        1397,
        1411
      ],
      "op": "DUP5",
      "path": "37"
    },
    "275": {
      "fn": "Proxy._delegate",
      "offset": [
        1390,
        1395
      ],
      "op": "GAS",
      "path": "37"
    },
    "276": {
      "fn": "Proxy._delegate",
      "offset": [
        1377,
        1437
      ],
      "op": "DELEGATECALL",
      "path": "37"
    },
    "277": {
      "fn": "Proxy._delegate",
      "offset": [
        1511,
        1527
      ],
      "op": "RETURNDATASIZE",
      "path": "37"
    },
    "278": {
      "fn": "Proxy._delegate",
      "offset": [
        1508,
        1509
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "280": {
      "fn": "Proxy._delegate",
      "offset": [
        1505,
        1506
      ],
      "op": "DUP1",
      "path": "37"
    },
    "281": {
      "fn": "Proxy._delegate",
      "offset": [
        1490,
        1528
      ],
      "op": "RETURNDATACOPY",
      "path": "37"
    },
    "282": {
      "fn": "Proxy._delegate",
      "offset": [
        1549,
        1555
      ],
      "op": "DUP1",
      "path": "37"
    },
    "283": {
      "fn": "Proxy._delegate",
      "offset": [
        1616,
        1682
      ],
      "op": "DUP1",
      "path": "37"
    },
    "284": {
      "fn": "Proxy._delegate",
      "offset": [
        1616,
        1682
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "285": {
      "fn": "Proxy._delegate",
      "offset": [
        1616,
        1682
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x125"
    },
    "288": {
      "fn": "Proxy._delegate",
      "offset": [
        1616,
        1682
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "289": {
      "fn": "Proxy._delegate",
      "offset": [
        1731,
        1747
      ],
      "op": "RETURNDATASIZE",
      "path": "37"
    },
    "290": {
      "fn": "Proxy._delegate",
      "offset": [
        1728,
        1729
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "292": {
      "fn": "Proxy._delegate",
      "offset": [
        1721,
        1748
      ],
      "op": "RETURN",
      "path": "37"
    },
    "293": {
      "fn": "Proxy._delegate",
      "offset": [
        1616,
        1682
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "294": {
      "fn": "Proxy._delegate",
      "offset": [
        1651,
        1667
      ],
      "op": "RETURNDATASIZE",
      "path": "37"
    },
    "295": {
      "fn": "Proxy._delegate",
      "offset": [
        1648,
        1649
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "297": {
      "fn": "Proxy._delegate",
      "offset": [
        1641,
        1668
      ],
      "op": "REVERT",
      "path": "37"
    },
    "298": {
      "op": "JUMPDEST"
    },
    "299": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "301": {
      "op": "DUP4"
    },
    "302": {
      "op": "EXTCODESIZE"
    },
    "303": {
      "op": "PUSH2",
      "value": "0x18E"
    },
    "306": {
      "op": "JUMPI"
    },
    "307": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "309": {
      "op": "MLOAD"
    },
    "310": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "314": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "316": {
      "op": "SHL"
    },
    "317": {
      "op": "DUP2"
    },
    "318": {
      "op": "MSTORE"
    },
    "319": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "321": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "323": {
      "op": "DUP3"
    },
    "324": {
      "op": "ADD"
    },
    "325": {
      "op": "MSTORE"
    },
    "326": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "328": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "330": {
      "op": "DUP3"
    },
    "331": {
      "op": "ADD"
    },
    "332": {
      "op": "MSTORE"
    },
    "333": {
      "op": "PUSH32",
      "value": "0x416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F"
    },
    "366": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "368": {
      "op": "DUP3"
    },
    "369": {
      "op": "ADD"
    },
    "370": {
      "op": "MSTORE"
    },
    "371": {
      "op": "PUSH6",
      "value": "0x1B9D1C9858DD"
    },
    "378": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "380": {
      "op": "SHL"
    },
    "381": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "383": {
      "op": "DUP3"
    },
    "384": {
      "op": "ADD"
    },
    "385": {
      "op": "MSTORE"
    },
    "386": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "388": {
      "op": "ADD"
    },
    "389": {
      "op": "JUMPDEST"
    },
    "390": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "392": {
      "op": "MLOAD"
    },
    "393": {
      "op": "DUP1"
    },
    "394": {
      "op": "SWAP2"
    },
    "395": {
      "op": "SUB"
    },
    "396": {
      "op": "SWAP1"
    },
    "397": {
      "op": "REVERT"
    },
    "398": {
      "op": "JUMPDEST"
    },
    "399": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "401": {
      "op": "DUP1"
    },
    "402": {
      "op": "DUP6"
    },
    "403": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "405": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "407": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "409": {
      "op": "SHL"
    },
    "410": {
      "op": "SUB"
    },
    "411": {
      "op": "AND"
    },
    "412": {
      "op": "DUP6"
    },
    "413": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "415": {
      "op": "MLOAD"
    },
    "416": {
      "op": "PUSH2",
      "value": "0x1A9"
    },
    "419": {
      "op": "SWAP2"
    },
    "420": {
      "op": "SWAP1"
    },
    "421": {
      "op": "PUSH2",
      "value": "0x265"
    },
    "424": {
      "jump": "i",
      "op": "JUMP"
    },
    "425": {
      "op": "JUMPDEST"
    },
    "426": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "428": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "430": {
      "op": "MLOAD"
    },
    "431": {
      "op": "DUP1"
    },
    "432": {
      "op": "DUP4"
    },
    "433": {
      "op": "SUB"
    },
    "434": {
      "op": "DUP2"
    },
    "435": {
      "op": "DUP6"
    },
    "436": {
      "op": "GAS"
    },
    "437": {
      "op": "DELEGATECALL"
    },
    "438": {
      "op": "SWAP2"
    },
    "439": {
      "op": "POP"
    },
    "440": {
      "op": "POP"
    },
    "441": {
      "op": "RETURNDATASIZE"
    },
    "442": {
      "op": "DUP1"
    },
    "443": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "445": {
      "op": "DUP2"
    },
    "446": {
      "op": "EQ"
    },
    "447": {
      "op": "PUSH2",
      "value": "0x1E4"
    },
    "450": {
      "op": "JUMPI"
    },
    "451": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "453": {
      "op": "MLOAD"
    },
    "454": {
      "op": "SWAP2"
    },
    "455": {
      "op": "POP"
    },
    "456": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "458": {
      "op": "NOT"
    },
    "459": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "461": {
      "op": "RETURNDATASIZE"
    },
    "462": {
      "op": "ADD"
    },
    "463": {
      "op": "AND"
    },
    "464": {
      "op": "DUP3"
    },
    "465": {
      "op": "ADD"
    },
    "466": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "468": {
      "op": "MSTORE"
    },
    "469": {
      "op": "RETURNDATASIZE"
    },
    "470": {
      "op": "DUP3"
    },
    "471": {
      "op": "MSTORE"
    },
    "472": {
      "op": "RETURNDATASIZE"
    },
    "473": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "475": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "477": {
      "op": "DUP5"
    },
    "478": {
      "op": "ADD"
    },
    "479": {
      "op": "RETURNDATACOPY"
    },
    "480": {
      "op": "PUSH2",
      "value": "0x1E9"
    },
    "483": {
      "op": "JUMP"
    },
    "484": {
      "op": "JUMPDEST"
    },
    "485": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "487": {
      "op": "SWAP2"
    },
    "488": {
      "op": "POP"
    },
    "489": {
      "op": "JUMPDEST"
    },
    "490": {
      "op": "POP"
    },
    "491": {
      "op": "SWAP2"
    },
    "492": {
      "op": "POP"
    },
    "493": {
      "op": "SWAP2"
    },
    "494": {
      "op": "POP"
    },
    "495": {
      "op": "PUSH2",
      "value": "0x1F9"
    },
    "498": {
      "op": "DUP3"
    },
    "499": {
      "op": "DUP3"
    },
    "500": {
      "op": "DUP7"
    },
    "501": {
      "op": "PUSH2",
      "value": "0x203"
    },
    "504": {
      "jump": "i",
      "op": "JUMP"
    },
    "505": {
      "op": "JUMPDEST"
    },
    "506": {
      "op": "SWAP7"
    },
    "507": {
      "op": "SWAP6"
    },
    "508": {
      "op": "POP"
    },
    "509": {
      "op": "POP"
    },
    "510": {
      "op": "POP"
    },
    "511": {
      "op": "POP"
    },
    "512": {
      "op": "POP"
    },
    "513": {
      "op": "POP"
    },
    "514": {
      "jump": "o",
      "op": "JUMP"
    },
    "515": {
      "op": "JUMPDEST"
    },
    "516": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "518": {
      "op": "DUP4"
    },
    "519": {
      "op": "ISZERO"
    },
    "520": {
      "op": "PUSH2",
      "value": "0x212"
    },
    "523": {
      "op": "JUMPI"
    },
    "524": {
      "op": "POP"
    },
    "525": {
      "op": "DUP2"
    },
    "526": {
      "op": "PUSH2",
      "value": "0x4E"
    },
    "529": {
      "op": "JUMP"
    },
    "530": {
      "op": "JUMPDEST"
    },
    "531": {
      "op": "DUP3"
    },
    "532": {
      "op": "MLOAD"
    },
    "533": {
      "op": "ISZERO"
    },
    "534": {
      "op": "PUSH2",
      "value": "0x222"
    },
    "537": {
      "op": "JUMPI"
    },
    "538": {
      "op": "DUP3"
    },
    "539": {
      "op": "MLOAD"
    },
    "540": {
      "op": "DUP1"
    },
    "541": {
      "op": "DUP5"
    },
    "542": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "544": {
      "op": "ADD"
    },
    "545": {
      "op": "REVERT"
    },
    "546": {
      "op": "JUMPDEST"
    },
    "547": {
      "op": "DUP2"
    },
    "548": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "550": {
      "op": "MLOAD"
    },
    "551": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "555": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "557": {
      "op": "SHL"
    },
    "558": {
      "op": "DUP2"
    },
    "559": {
      "op": "MSTORE"
    },
    "560": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "562": {
      "op": "ADD"
    },
    "563": {
      "op": "PUSH2",
      "value": "0x185"
    },
    "566": {
      "op": "SWAP2"
    },
    "567": {
      "op": "SWAP1"
    },
    "568": {
      "op": "PUSH2",
      "value": "0x281"
    },
    "571": {
      "jump": "i",
      "op": "JUMP"
    },
    "572": {
      "op": "JUMPDEST"
    },
    "573": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "575": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "577": {
      "op": "DUP3"
    },
    "578": {
      "op": "DUP5"
    },
    "579": {
      "op": "SUB"
    },
    "580": {
      "op": "SLT"
    },
    "581": {
      "op": "ISZERO"
    },
    "582": {
      "op": "PUSH2",
      "value": "0x24E"
    },
    "585": {
      "op": "JUMPI"
    },
    "586": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "588": {
      "op": "DUP1"
    },
    "589": {
      "op": "REVERT"
    },
    "590": {
      "op": "JUMPDEST"
    },
    "591": {
      "op": "DUP2"
    },
    "592": {
      "op": "MLOAD"
    },
    "593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "595": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "597": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "599": {
      "op": "SHL"
    },
    "600": {
      "op": "SUB"
    },
    "601": {
      "op": "DUP2"
    },
    "602": {
      "op": "AND"
    },
    "603": {
      "op": "DUP2"
    },
    "604": {
      "op": "EQ"
    },
    "605": {
      "op": "PUSH2",
      "value": "0x4E"
    },
    "608": {
      "op": "JUMPI"
    },
    "609": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "611": {
      "op": "DUP1"
    },
    "612": {
      "op": "REVERT"
    },
    "613": {
      "op": "JUMPDEST"
    },
    "614": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "616": {
      "op": "DUP3"
    },
    "617": {
      "op": "MLOAD"
    },
    "618": {
      "op": "PUSH2",
      "value": "0x277"
    },
    "621": {
      "op": "DUP2"
    },
    "622": {
      "op": "DUP5"
    },
    "623": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "625": {
      "op": "DUP8"
    },
    "626": {
      "op": "ADD"
    },
    "627": {
      "op": "PUSH2",
      "value": "0x2B4"
    },
    "630": {
      "jump": "i",
      "op": "JUMP"
    },
    "631": {
      "op": "JUMPDEST"
    },
    "632": {
      "op": "SWAP2"
    },
    "633": {
      "op": "SWAP1"
    },
    "634": {
      "op": "SWAP2"
    },
    "635": {
      "op": "ADD"
    },
    "636": {
      "op": "SWAP3"
    },
    "637": {
      "op": "SWAP2"
    },
    "638": {
      "op": "POP"
    },
    "639": {
      "op": "POP"
    },
    "640": {
      "jump": "o",
      "op": "JUMP"
    },
    "641": {
      "op": "JUMPDEST"
    },
    "642": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "644": {
      "op": "DUP2"
    },
    "645": {
      "op": "MSTORE"
    },
    "646": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "648": {
      "op": "DUP3"
    },
    "649": {
      "op": "MLOAD"
    },
    "650": {
      "op": "DUP1"
    },
    "651": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "653": {
      "op": "DUP5"
    },
    "654": {
      "op": "ADD"
    },
    "655": {
      "op": "MSTORE"
    },
    "656": {
      "op": "PUSH2",
      "value": "0x2A0"
    },
    "659": {
      "op": "DUP2"
    },
    "660": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "662": {
      "op": "DUP6"
    },
    "663": {
      "op": "ADD"
    },
    "664": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "666": {
      "op": "DUP8"
    },
    "667": {
      "op": "ADD"
    },
    "668": {
      "op": "PUSH2",
      "value": "0x2B4"
    },
    "671": {
      "jump": "i",
      "op": "JUMP"
    },
    "672": {
      "op": "JUMPDEST"
    },
    "673": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "675": {
      "op": "ADD"
    },
    "676": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "678": {
      "op": "NOT"
    },
    "679": {
      "op": "AND"
    },
    "680": {
      "op": "SWAP2"
    },
    "681": {
      "op": "SWAP1"
    },
    "682": {
      "op": "SWAP2"
    },
    "683": {
      "op": "ADD"
    },
    "684": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "686": {
      "op": "ADD"
    },
    "687": {
      "op": "SWAP3"
    },
    "688": {
      "op": "SWAP2"
    },
    "689": {
      "op": "POP"
    },
    "690": {
      "op": "POP"
    },
    "691": {
      "jump": "o",
      "op": "JUMP"
    },
    "692": {
      "op": "JUMPDEST"
    },
    "693": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "695": {
      "op": "JUMPDEST"
    },
    "696": {
      "op": "DUP4"
    },
    "697": {
      "op": "DUP2"
    },
    "698": {
      "op": "LT"
    },
    "699": {
      "op": "ISZERO"
    },
    "700": {
      "op": "PUSH2",
      "value": "0x2CF"
    },
    "703": {
      "op": "JUMPI"
    },
    "704": {
      "op": "DUP2"
    },
    "705": {
      "op": "DUP2"
    },
    "706": {
      "op": "ADD"
    },
    "707": {
      "op": "MLOAD"
    },
    "708": {
      "op": "DUP4"
    },
    "709": {
      "op": "DUP3"
    },
    "710": {
      "op": "ADD"
    },
    "711": {
      "op": "MSTORE"
    },
    "712": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "714": {
      "op": "ADD"
    },
    "715": {
      "op": "PUSH2",
      "value": "0x2B7"
    },
    "718": {
      "op": "JUMP"
    },
    "719": {
      "op": "JUMPDEST"
    },
    "720": {
      "op": "DUP4"
    },
    "721": {
      "op": "DUP2"
    },
    "722": {
      "op": "GT"
    },
    "723": {
      "op": "ISZERO"
    },
    "724": {
      "op": "PUSH2",
      "value": "0x2DE"
    },
    "727": {
      "op": "JUMPI"
    },
    "728": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "730": {
      "op": "DUP5"
    },
    "731": {
      "op": "DUP5"
    },
    "732": {
      "op": "ADD"
    },
    "733": {
      "op": "MSTORE"
    },
    "734": {
      "op": "JUMPDEST"
    },
    "735": {
      "op": "POP"
    },
    "736": {
      "op": "POP"
    },
    "737": {
      "op": "POP"
    },
    "738": {
      "op": "POP"
    },
    "739": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "dd40923fa69467eb230c9e1520c8560dfcaf70b4",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IBeacon.sol\";\nimport \"../Proxy.sol\";\nimport \"../ERC1967/ERC1967Upgrade.sol\";\n\n/**\n * @dev This contract implements a proxy that gets the implementation address for each call from a {UpgradeableBeacon}.\n *\n * The beacon address is stored in storage slot `uint256(keccak256('eip1967.proxy.beacon')) - 1`, so that it doesn't\n * conflict with the storage layout of the implementation behind the proxy.\n *\n * _Available since v3.4._\n */\ncontract BeaconProxy is Proxy, ERC1967Upgrade {\n    /**\n     * @dev Initializes the proxy with `beacon`.\n     *\n     * If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon. This\n     * will typically be an encoded function call, and allows initializating the storage of the proxy like a Solidity\n     * constructor.\n     *\n     * Requirements:\n     *\n     * - `beacon` must be a contract with the interface {IBeacon}.\n     */\n    constructor(address beacon, bytes memory data) payable {\n        assert(_BEACON_SLOT == bytes32(uint256(keccak256(\"eip1967.proxy.beacon\")) - 1));\n        _upgradeBeaconToAndCall(beacon, data, false);\n    }\n\n    /**\n     * @dev Returns the current beacon address.\n     */\n    function _beacon() internal view virtual returns (address) {\n        return _getBeacon();\n    }\n\n    /**\n     * @dev Returns the current implementation address of the associated beacon.\n     */\n    function _implementation() internal view virtual override returns (address) {\n        return IBeacon(_getBeacon()).implementation();\n    }\n\n    /**\n     * @dev Changes the proxy to use a new beacon. Deprecated: see {_upgradeBeaconToAndCall}.\n     *\n     * If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon.\n     *\n     * Requirements:\n     *\n     * - `beacon` must be a contract.\n     * - The implementation returned by `beacon` must be a contract.\n     */\n    function _setBeacon(address beacon, bytes memory data) internal virtual {\n        _upgradeBeaconToAndCall(beacon, data, false);\n    }\n}\n",
  "sourceMap": "500:1606:38:-:0;;;982:205;;;;;;;;;;;;;;;;;;:::i;:::-;1078:46;1123:1;1086:33;1078:46;:::i;:::-;-1:-1:-1;;;;;;;;;;;1054:71:38;1047:79;;;;:::i;:::-;1136:44;1160:6;1168:4;1174:5;1136:23;:44::i;:::-;982:205;;500:1606;;6319:343:36;6455:21;6466:9;6455:10;:21::i;:::-;6491:25;;-1:-1:-1;;;;;6491:25:36;;;;;;;;6544:1;6530:4;:11;:15;:28;;;;6549:9;6530:28;6526:130;;;6574:71;6611:9;-1:-1:-1;;;;;6603:33:36;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6640:4;6574:28;;;;;:71;;:::i;:::-;;6526:130;6319:343;;;:::o;5645:371::-;5710:29;5729:9;5710:18;;;;;:29;;:::i;:::-;5702:79;;;;-1:-1:-1;;;5702:79:36;;2251:2:121;5702:79:36;;;2233:21:121;2290:2;2270:18;;;2263:30;2329:34;2309:18;;;2302:62;-1:-1:-1;;;2380:18:121;;;2373:35;2425:19;;5702:79:36;;;;;;;;;5812:55;5839:9;-1:-1:-1;;;;;5831:33:36;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5812:18;;;;;:55;;:::i;:::-;5791:150;;;;-1:-1:-1;;;5791:150:36;;3064:2:121;5791:150:36;;;3046:21:121;3103:2;3083:18;;;3076:30;3142:34;3122:18;;;3115:62;-1:-1:-1;;;3193:18:121;;;3186:46;3249:19;;5791:150:36;3036:238:121;5791:150:36;6000:9;5951:40;-1:-1:-1;;;;;;;;;;;5978:12:36;;5951:26;;;;;:40;;:::i;:::-;:58;;-1:-1:-1;;;;;;5951:58:36;-1:-1:-1;;;;;5951:58:36;;;;;;;;;;-1:-1:-1;5645:371:36:o;6170:198:91:-;6253:12;6284:77;6305:6;6313:4;6284:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6277:84;6170:198;-1:-1:-1;;;6170:198:91:o;718:377::-;1034:20;1080:8;;;718:377::o;1542:147:97:-;1669:4;1542:147::o;6554:387:91:-;6695:12;1034:20;;6719:69;;;;-1:-1:-1;;;6719:69:91;;2657:2:121;6719:69:91;;;2639:21:121;2696:2;2676:18;;;2669:30;2735:34;2715:18;;;2708:62;-1:-1:-1;;;2786:18:121;;;2779:36;2832:19;;6719:69:91;2629:228:121;6719:69:91;6800:12;6814:23;6841:6;-1:-1:-1;;;;;6841:19:91;6861:4;6841:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6799:67:91;;-1:-1:-1;6799:67:91;-1:-1:-1;6883:51:91;6799:67;;6921:12;6883:16;:51::i;:::-;6876:58;6554:387;-1:-1:-1;;;;;;6554:387:91:o;7161:692::-;7307:12;7335:7;7331:516;;;-1:-1:-1;7365:10:91;7358:17;;7331:516;7476:17;;:21;7472:365;;7670:10;7664:17;7730:15;7717:10;7713:2;7709:19;7702:44;7472:365;7809:12;7802:20;;-1:-1:-1;;;7802:20:91;;;;;;;;:::i;14:177:121:-;93:13;;-1:-1:-1;;;;;135:31:121;;125:42;;115:2;;181:1;178;171:12;115:2;74:117;;;:::o;196:208::-;266:6;319:2;307:9;298:7;294:23;290:32;287:2;;;335:1;332;325:12;287:2;358:40;388:9;358:40;:::i;409:968::-;497:6;505;558:2;546:9;537:7;533:23;529:32;526:2;;;574:1;571;564:12;526:2;597:40;627:9;597:40;:::i;:::-;681:2;666:18;;660:25;587:50;;-1:-1:-1;;;;;;734:14:121;;;731:2;;;761:1;758;751:12;731:2;799:6;788:9;784:22;774:32;;844:7;837:4;833:2;829:13;825:27;815:2;;866:1;863;856:12;815:2;895;889:9;917:2;913;910:10;907:2;;;923:18;;:::i;:::-;998:2;992:9;966:2;1052:13;;-1:-1:-1;;1048:22:121;;;1072:2;1044:31;1040:40;1028:53;;;1096:18;;;1116:22;;;1093:46;1090:2;;;1142:18;;:::i;:::-;1182:10;1178:2;1171:22;1217:2;1209:6;1202:18;1257:7;1252:2;1247;1243;1239:11;1235:20;1232:33;1229:2;;;1278:1;1275;1268:12;1229:2;1291:55;1343:2;1338;1330:6;1326:15;1321:2;1317;1313:11;1291:55;:::i;:::-;1365:6;1355:16;;;;;;;516:861;;;;;:::o;1382:274::-;1511:3;1549:6;1543:13;1565:53;1611:6;1606:3;1599:4;1591:6;1587:17;1565:53;:::i;:::-;1634:16;;;;;1519:137;-1:-1:-1;;1519:137:121:o;1661:383::-;1810:2;1799:9;1792:21;1773:4;1842:6;1836:13;1885:6;1880:2;1869:9;1865:18;1858:34;1901:66;1960:6;1955:2;1944:9;1940:18;1935:2;1927:6;1923:15;1901:66;:::i;:::-;2028:2;2007:15;-1:-1:-1;;2003:29:121;1988:45;;;;2035:2;1984:54;;1782:262;-1:-1:-1;;1782:262:121:o;3279:222::-;3319:4;3347:1;3344;3341:8;3338:2;;;3391:10;3386:3;3382:20;3379:1;3372:31;3426:4;3423:1;3416:15;3454:4;3451:1;3444:15;3338:2;-1:-1:-1;3486:9:121;;3328:173::o;3506:258::-;3578:1;3588:113;3602:6;3599:1;3596:13;3588:113;;;3678:11;;;3672:18;3659:11;;;3652:39;3624:2;3617:10;3588:113;;;3719:6;3716:1;3713:13;3710:2;;;-1:-1:-1;;3754:1:121;3736:16;;3729:27;3559:205::o;3769:127::-;3830:10;3825:3;3821:20;3818:1;3811:31;3861:4;3858:1;3851:15;3885:4;3882:1;3875:15;3901:127;3962:10;3957:3;3953:20;3950:1;3943:31;3993:4;3990:1;3983:15;4017:4;4014:1;4007:15;3933:95;500:1606:38;;;;;;",
  "sourcePath": "contracts/node_modules/@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol",
  "type": "contract"
}