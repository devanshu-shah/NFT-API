{
  "abi": [],
  "allSourcePaths": {
    "100": "contracts/node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
    "102": "contracts/node_modules/@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol"
  },
  "ast": {
    "absolutePath": "contracts/node_modules/@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol",
    "exportedSymbols": {
      "Address": [
        15074
      ],
      "ECDSA": [
        16265
      ],
      "IERC1271": [
        5240
      ],
      "SignatureChecker": [
        16415
      ]
    },
    "id": 16416,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 16338,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:102"
      },
      {
        "absolutePath": "contracts/node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
        "file": "./ECDSA.sol",
        "id": 16339,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 16416,
        "sourceUnit": 16266,
        "src": "58:21:102",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/node_modules/@openzeppelin/contracts/utils/Address.sol",
        "file": "../Address.sol",
        "id": 16340,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 16416,
        "sourceUnit": 15075,
        "src": "80:24:102",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/node_modules/@openzeppelin/contracts/interfaces/IERC1271.sol",
        "file": "../../interfaces/IERC1271.sol",
        "id": 16341,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 16416,
        "sourceUnit": 5241,
        "src": "105:39:102",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": {
          "id": 16342,
          "nodeType": "StructuredDocumentation",
          "src": "146:538:102",
          "text": " @dev Signature verification helper: Provide a single mechanism to verify both private-key (EOA) ECDSA signature and\n ERC1271 contract sigantures. Using this instead of ECDSA.recover in your contract will make them compatible with\n smart contract wallets such as Argent and Gnosis.\n Note: unlike ECDSA signatures, contract signature's are revocable, and the outcome of this function can thus change\n through time. It could return true at block N and false at block N+1 (or the opposite).\n _Available since v4.1._"
        },
        "fullyImplemented": true,
        "id": 16415,
        "linearizedBaseContracts": [
          16415
        ],
        "name": "SignatureChecker",
        "nameLocation": "693:16:102",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 16413,
              "nodeType": "Block",
              "src": "858:491:102",
              "statements": [
                {
                  "assignments": [
                    16354,
                    16357
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 16354,
                      "mutability": "mutable",
                      "name": "recovered",
                      "nameLocation": "877:9:102",
                      "nodeType": "VariableDeclaration",
                      "scope": 16413,
                      "src": "869:17:102",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 16353,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "869:7:102",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 16357,
                      "mutability": "mutable",
                      "name": "error",
                      "nameLocation": "907:5:102",
                      "nodeType": "VariableDeclaration",
                      "scope": 16413,
                      "src": "888:24:102",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_RecoverError_$15907",
                        "typeString": "enum ECDSA.RecoverError"
                      },
                      "typeName": {
                        "id": 16356,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 16355,
                          "name": "ECDSA.RecoverError",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 15907,
                          "src": "888:18:102"
                        },
                        "referencedDeclaration": 15907,
                        "src": "888:18:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RecoverError_$15907",
                          "typeString": "enum ECDSA.RecoverError"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 16363,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 16360,
                        "name": "hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16346,
                        "src": "933:4:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 16361,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16348,
                        "src": "939:9:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 16358,
                        "name": "ECDSA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16265,
                        "src": "916:5:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ECDSA_$16265_$",
                          "typeString": "type(library ECDSA)"
                        }
                      },
                      "id": 16359,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tryRecover",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16026,
                      "src": "916:16:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$15907_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError)"
                      }
                    },
                    "id": 16362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "916:33:102",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$15907_$",
                      "typeString": "tuple(address,enum ECDSA.RecoverError)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "868:81:102"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 16372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_RecoverError_$15907",
                        "typeString": "enum ECDSA.RecoverError"
                      },
                      "id": 16368,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 16364,
                        "name": "error",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16357,
                        "src": "963:5:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RecoverError_$15907",
                          "typeString": "enum ECDSA.RecoverError"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "expression": {
                            "id": 16365,
                            "name": "ECDSA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16265,
                            "src": "972:5:102",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ECDSA_$16265_$",
                              "typeString": "type(library ECDSA)"
                            }
                          },
                          "id": 16366,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "RecoverError",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15907,
                          "src": "972:18:102",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_RecoverError_$15907_$",
                            "typeString": "type(enum ECDSA.RecoverError)"
                          }
                        },
                        "id": 16367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "NoError",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15902,
                        "src": "972:26:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RecoverError_$15907",
                          "typeString": "enum ECDSA.RecoverError"
                        }
                      },
                      "src": "963:35:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 16371,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 16369,
                        "name": "recovered",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16354,
                        "src": "1002:9:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 16370,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16344,
                        "src": "1015:6:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "1002:19:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "963:58:102",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 16376,
                  "nodeType": "IfStatement",
                  "src": "959:100:102",
                  "trueBody": {
                    "id": 16375,
                    "nodeType": "Block",
                    "src": "1023:36:102",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 16373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1044:4:102",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 16352,
                        "id": 16374,
                        "nodeType": "Return",
                        "src": "1037:11:102"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    16378,
                    16380
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 16378,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "1075:7:102",
                      "nodeType": "VariableDeclaration",
                      "scope": 16413,
                      "src": "1070:12:102",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 16377,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1070:4:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 16380,
                      "mutability": "mutable",
                      "name": "result",
                      "nameLocation": "1097:6:102",
                      "nodeType": "VariableDeclaration",
                      "scope": 16413,
                      "src": "1084:19:102",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 16379,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1084:5:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 16392,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 16385,
                                "name": "IERC1271",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5240,
                                "src": "1161:8:102",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1271_$5240_$",
                                  "typeString": "type(contract IERC1271)"
                                }
                              },
                              "id": 16386,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "isValidSignature",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5239,
                              "src": "1161:25:102",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                                "typeString": "function IERC1271.isValidSignature(bytes32,bytes memory) view returns (bytes4)"
                              }
                            },
                            "id": 16387,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "1161:34:102",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 16388,
                            "name": "hash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16346,
                            "src": "1197:4:102",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 16389,
                            "name": "signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16348,
                            "src": "1203:9:102",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 16383,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1138:3:102",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 16384,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "1138:22:102",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 16390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1138:75:102",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 16381,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16344,
                        "src": "1107:6:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 16382,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "staticcall",
                      "nodeType": "MemberAccess",
                      "src": "1107:17:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) view returns (bool,bytes memory)"
                      }
                    },
                    "id": 16391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1107:116:102",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1069:154:102"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 16410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 16398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 16393,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16378,
                            "src": "1241:7:102",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 16397,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 16394,
                                "name": "result",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16380,
                                "src": "1252:6:102",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 16395,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "1252:13:102",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "3332",
                              "id": 16396,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1269:2:102",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_32_by_1",
                                "typeString": "int_const 32"
                              },
                              "value": "32"
                            },
                            "src": "1252:19:102",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1241:30:102",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "id": 16409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 16401,
                                "name": "result",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16380,
                                "src": "1286:6:102",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "components": [
                                  {
                                    "id": 16403,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1295:6:102",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bytes4_$",
                                      "typeString": "type(bytes4)"
                                    },
                                    "typeName": {
                                      "id": 16402,
                                      "name": "bytes4",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1295:6:102",
                                      "typeDescriptions": {}
                                    }
                                  }
                                ],
                                "id": 16404,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "1294:8:102",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes4_$",
                                  "typeString": "type(bytes4)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_type$_t_bytes4_$",
                                  "typeString": "type(bytes4)"
                                }
                              ],
                              "expression": {
                                "id": 16399,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "1275:3:102",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 16400,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "decode",
                              "nodeType": "MemberAccess",
                              "src": "1275:10:102",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 16405,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1275:28:102",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 16406,
                                "name": "IERC1271",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5240,
                                "src": "1307:8:102",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1271_$5240_$",
                                  "typeString": "type(contract IERC1271)"
                                }
                              },
                              "id": 16407,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "isValidSignature",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5239,
                              "src": "1307:25:102",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                                "typeString": "function IERC1271.isValidSignature(bytes32,bytes memory) view returns (bytes4)"
                              }
                            },
                            "id": 16408,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "1307:34:102",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "src": "1275:66:102",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1241:100:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 16411,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1240:102:102",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 16352,
                  "id": 16412,
                  "nodeType": "Return",
                  "src": "1233:109:102"
                }
              ]
            },
            "id": 16414,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isValidSignatureNow",
            "nameLocation": "725:19:102",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16349,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16344,
                  "mutability": "mutable",
                  "name": "signer",
                  "nameLocation": "762:6:102",
                  "nodeType": "VariableDeclaration",
                  "scope": 16414,
                  "src": "754:14:102",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16343,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "754:7:102",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16346,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "786:4:102",
                  "nodeType": "VariableDeclaration",
                  "scope": 16414,
                  "src": "778:12:102",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 16345,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "778:7:102",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16348,
                  "mutability": "mutable",
                  "name": "signature",
                  "nameLocation": "813:9:102",
                  "nodeType": "VariableDeclaration",
                  "scope": 16414,
                  "src": "800:22:102",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 16347,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "800:5:102",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "744:84:102"
            },
            "returnParameters": {
              "id": 16352,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16351,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 16414,
                  "src": "852:4:102",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 16350,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "852:4:102",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "851:6:102"
            },
            "scope": 16415,
            "src": "716:633:102",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 16416,
        "src": "685:666:102",
        "usedErrors": []
      }
    ],
    "src": "33:1319:102"
  },
  "bytecode": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207ed130c249d5655b9cd55a05fb835c5b1999239c40437b11830483d4f4abedc764736f6c63430008060033",
  "bytecodeSha1": "1ce946f6a4eaa185320328620ccf999b9e86db7c",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.6+commit.11564f7e"
  },
  "contractName": "SignatureChecker",
  "coverageMap": {
    "branches": {
      "100": {},
      "102": {}
    },
    "statements": {
      "100": {},
      "102": {}
    }
  },
  "dependencies": [
    "ECDSA"
  ],
  "deployedBytecode": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207ed130c249d5655b9cd55a05fb835c5b1999239c40437b11830483d4f4abedc764736f6c63430008060033",
  "deployedSourceMap": "685:666:102:-:0;;;;;;;;",
  "language": "Solidity",
  "natspec": {
    "details": "Signature verification helper: Provide a single mechanism to verify both private-key (EOA) ECDSA signature and ERC1271 contract sigantures. Using this instead of ECDSA.recover in your contract will make them compatible with smart contract wallets such as Argent and Gnosis. Note: unlike ECDSA signatures, contract signature's are revocable, and the outcome of this function can thus change through time. It could return true at block N and false at block N+1 (or the opposite). _Available since v4.1._",
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    685,
    1351
  ],
  "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH31 0xD130C249D5655B9CD55A05FB835C5B1999239C40437B11830483D4F4ABEDC7 PUSH5 0x736F6C6343 STOP ADDMOD MOD STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        685,
        1351
      ],
      "op": "PUSH20",
      "path": "102",
      "value": "0x0"
    },
    "21": {
      "fn": null,
      "offset": [
        685,
        1351
      ],
      "op": "ADDRESS",
      "path": "102"
    },
    "22": {
      "fn": null,
      "offset": [
        685,
        1351
      ],
      "op": "EQ",
      "path": "102"
    },
    "23": {
      "fn": null,
      "offset": [
        685,
        1351
      ],
      "op": "PUSH1",
      "path": "102",
      "value": "0x80"
    },
    "25": {
      "fn": null,
      "offset": [
        685,
        1351
      ],
      "op": "PUSH1",
      "path": "102",
      "value": "0x40"
    },
    "27": {
      "fn": null,
      "offset": [
        685,
        1351
      ],
      "op": "MSTORE",
      "path": "102"
    },
    "28": {
      "fn": null,
      "offset": [
        685,
        1351
      ],
      "op": "PUSH1",
      "path": "102",
      "value": "0x0"
    },
    "30": {
      "fn": null,
      "offset": [
        685,
        1351
      ],
      "op": "DUP1",
      "path": "102"
    },
    "31": {
      "fn": null,
      "offset": [
        685,
        1351
      ],
      "op": "REVERT",
      "path": "102"
    }
  },
  "sha1": "d486eb5c85edae758da6257896148a2c74710e9c",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./ECDSA.sol\";\nimport \"../Address.sol\";\nimport \"../../interfaces/IERC1271.sol\";\n\n/**\n * @dev Signature verification helper: Provide a single mechanism to verify both private-key (EOA) ECDSA signature and\n * ERC1271 contract sigantures. Using this instead of ECDSA.recover in your contract will make them compatible with\n * smart contract wallets such as Argent and Gnosis.\n *\n * Note: unlike ECDSA signatures, contract signature's are revocable, and the outcome of this function can thus change\n * through time. It could return true at block N and false at block N+1 (or the opposite).\n *\n * _Available since v4.1._\n */\nlibrary SignatureChecker {\n    function isValidSignatureNow(\n        address signer,\n        bytes32 hash,\n        bytes memory signature\n    ) internal view returns (bool) {\n        (address recovered, ECDSA.RecoverError error) = ECDSA.tryRecover(hash, signature);\n        if (error == ECDSA.RecoverError.NoError && recovered == signer) {\n            return true;\n        }\n\n        (bool success, bytes memory result) = signer.staticcall(\n            abi.encodeWithSelector(IERC1271.isValidSignature.selector, hash, signature)\n        );\n        return (success && result.length == 32 && abi.decode(result, (bytes4)) == IERC1271.isValidSignature.selector);\n    }\n}\n",
  "sourceMap": "685:666:102:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;685:666:102;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/node_modules/@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol",
  "type": "library"
}