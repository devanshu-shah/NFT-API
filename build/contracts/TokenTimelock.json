{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "beneficiary_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "releaseTime_",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "beneficiary",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "release",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "releaseTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "59": "contracts/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
    "73": "contracts/node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
    "74": "contracts/node_modules/@openzeppelin/contracts/token/ERC20/utils/TokenTimelock.sol",
    "91": "contracts/node_modules/@openzeppelin/contracts/utils/Address.sol"
  },
  "ast": {
    "absolutePath": "contracts/node_modules/@openzeppelin/contracts/token/ERC20/utils/TokenTimelock.sol",
    "exportedSymbols": {
      "Address": [
        15074
      ],
      "IERC20": [
        9447
      ],
      "SafeERC20": [
        11535
      ],
      "TokenTimelock": [
        11650
      ]
    },
    "id": 11651,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11537,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:74"
      },
      {
        "absolutePath": "contracts/node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "./SafeERC20.sol",
        "id": 11538,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 11651,
        "sourceUnit": 11536,
        "src": "58:25:74",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 11539,
          "nodeType": "StructuredDocumentation",
          "src": "85:221:74",
          "text": " @dev A token holder contract that will allow a beneficiary to extract the\n tokens after a given release time.\n Useful for simple vesting schedules like \"advisors get all of their tokens\n after 1 year\"."
        },
        "fullyImplemented": true,
        "id": 11650,
        "linearizedBaseContracts": [
          11650
        ],
        "name": "TokenTimelock",
        "nameLocation": "316:13:74",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 11543,
            "libraryName": {
              "id": 11540,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11535,
              "src": "342:9:74"
            },
            "nodeType": "UsingForDirective",
            "src": "336:27:74",
            "typeName": {
              "id": 11542,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 11541,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 9447,
                "src": "356:6:74"
              },
              "referencedDeclaration": 9447,
              "src": "356:6:74",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$9447",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": false,
            "id": 11546,
            "mutability": "immutable",
            "name": "_token",
            "nameLocation": "439:6:74",
            "nodeType": "VariableDeclaration",
            "scope": 11650,
            "src": "414:31:74",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$9447",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 11545,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 11544,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 9447,
                "src": "414:6:74"
              },
              "referencedDeclaration": 9447,
              "src": "414:6:74",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$9447",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 11548,
            "mutability": "immutable",
            "name": "_beneficiary",
            "nameLocation": "531:12:74",
            "nodeType": "VariableDeclaration",
            "scope": 11650,
            "src": "505:38:74",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 11547,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "505:7:74",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 11550,
            "mutability": "immutable",
            "name": "_releaseTime",
            "nameLocation": "623:12:74",
            "nodeType": "VariableDeclaration",
            "scope": 11650,
            "src": "597:38:74",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11549,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "597:7:74",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 11580,
              "nodeType": "Block",
              "src": "743:209:74",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 11564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11561,
                          "name": "releaseTime_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11557,
                          "src": "761:12:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "id": 11562,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "776:5:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 11563,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "776:15:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "761:30:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e54696d656c6f636b3a2072656c656173652074696d65206973206265666f72652063757272656e742074696d65",
                        "id": 11565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "793:52:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e1658b776de3735ba90dc86438c12854f3617d6d488d64009fdab5928e27c313",
                          "typeString": "literal_string \"TokenTimelock: release time is before current time\""
                        },
                        "value": "TokenTimelock: release time is before current time"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e1658b776de3735ba90dc86438c12854f3617d6d488d64009fdab5928e27c313",
                          "typeString": "literal_string \"TokenTimelock: release time is before current time\""
                        }
                      ],
                      "id": 11560,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "753:7:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11566,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "753:93:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11567,
                  "nodeType": "ExpressionStatement",
                  "src": "753:93:74"
                },
                {
                  "expression": {
                    "id": 11570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11568,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11546,
                      "src": "856:6:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$9447",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11569,
                      "name": "token_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11553,
                      "src": "865:6:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$9447",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "856:15:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$9447",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 11571,
                  "nodeType": "ExpressionStatement",
                  "src": "856:15:74"
                },
                {
                  "expression": {
                    "id": 11574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11572,
                      "name": "_beneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11548,
                      "src": "881:12:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11573,
                      "name": "beneficiary_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11555,
                      "src": "896:12:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "881:27:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 11575,
                  "nodeType": "ExpressionStatement",
                  "src": "881:27:74"
                },
                {
                  "expression": {
                    "id": 11578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11576,
                      "name": "_releaseTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11550,
                      "src": "918:12:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11577,
                      "name": "releaseTime_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11557,
                      "src": "933:12:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "918:27:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11579,
                  "nodeType": "ExpressionStatement",
                  "src": "918:27:74"
                }
              ]
            },
            "id": 11581,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11558,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11553,
                  "mutability": "mutable",
                  "name": "token_",
                  "nameLocation": "670:6:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 11581,
                  "src": "663:13:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$9447",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 11552,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 11551,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9447,
                      "src": "663:6:74"
                    },
                    "referencedDeclaration": 9447,
                    "src": "663:6:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$9447",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11555,
                  "mutability": "mutable",
                  "name": "beneficiary_",
                  "nameLocation": "694:12:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 11581,
                  "src": "686:20:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11554,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "686:7:74",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11557,
                  "mutability": "mutable",
                  "name": "releaseTime_",
                  "nameLocation": "724:12:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 11581,
                  "src": "716:20:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11556,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "716:7:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "653:89:74"
            },
            "returnParameters": {
              "id": 11559,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "743:0:74"
            },
            "scope": 11650,
            "src": "642:310:74",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11590,
              "nodeType": "Block",
              "src": "1065:30:74",
              "statements": [
                {
                  "expression": {
                    "id": 11588,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11546,
                    "src": "1082:6:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$9447",
                      "typeString": "contract IERC20"
                    }
                  },
                  "functionReturnParameters": 11587,
                  "id": 11589,
                  "nodeType": "Return",
                  "src": "1075:13:74"
                }
              ]
            },
            "documentation": {
              "id": 11582,
              "nodeType": "StructuredDocumentation",
              "src": "958:48:74",
              "text": " @return the token being held."
            },
            "functionSelector": "fc0c546a",
            "id": 11591,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "token",
            "nameLocation": "1020:5:74",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11583,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1025:2:74"
            },
            "returnParameters": {
              "id": 11587,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11586,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11591,
                  "src": "1057:6:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$9447",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 11585,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 11584,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9447,
                      "src": "1057:6:74"
                    },
                    "referencedDeclaration": 9447,
                    "src": "1057:6:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$9447",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1056:8:74"
            },
            "scope": 11650,
            "src": "1011:84:74",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11599,
              "nodeType": "Block",
              "src": "1224:36:74",
              "statements": [
                {
                  "expression": {
                    "id": 11597,
                    "name": "_beneficiary",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11548,
                    "src": "1241:12:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 11596,
                  "id": 11598,
                  "nodeType": "Return",
                  "src": "1234:19:74"
                }
              ]
            },
            "documentation": {
              "id": 11592,
              "nodeType": "StructuredDocumentation",
              "src": "1101:57:74",
              "text": " @return the beneficiary of the tokens."
            },
            "functionSelector": "38af3eed",
            "id": 11600,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "beneficiary",
            "nameLocation": "1172:11:74",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11593,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1183:2:74"
            },
            "returnParameters": {
              "id": 11596,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11595,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11600,
                  "src": "1215:7:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11594,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1215:7:74",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1214:9:74"
            },
            "scope": 11650,
            "src": "1163:97:74",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11608,
              "nodeType": "Block",
              "src": "1397:36:74",
              "statements": [
                {
                  "expression": {
                    "id": 11606,
                    "name": "_releaseTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11550,
                    "src": "1414:12:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 11605,
                  "id": 11607,
                  "nodeType": "Return",
                  "src": "1407:19:74"
                }
              ]
            },
            "documentation": {
              "id": 11601,
              "nodeType": "StructuredDocumentation",
              "src": "1266:65:74",
              "text": " @return the time when the tokens are released."
            },
            "functionSelector": "b91d4001",
            "id": 11609,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "releaseTime",
            "nameLocation": "1345:11:74",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11602,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1356:2:74"
            },
            "returnParameters": {
              "id": 11605,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11604,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11609,
                  "src": "1388:7:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11603,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1388:7:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1387:9:74"
            },
            "scope": 11650,
            "src": "1336:97:74",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11648,
              "nodeType": "Block",
              "src": "1554:294:74",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 11618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 11614,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "1572:5:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 11615,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "1572:15:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 11616,
                            "name": "releaseTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11609,
                            "src": "1591:11:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 11617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1591:13:74",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1572:32:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e54696d656c6f636b3a2063757272656e742074696d65206973206265666f72652072656c656173652074696d65",
                        "id": 11619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1606:52:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0345c6084b4d4be2f1249aa1f58ddc5a11b524aacb744b63dfad68c56d61fad0",
                          "typeString": "literal_string \"TokenTimelock: current time is before release time\""
                        },
                        "value": "TokenTimelock: current time is before release time"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0345c6084b4d4be2f1249aa1f58ddc5a11b524aacb744b63dfad68c56d61fad0",
                          "typeString": "literal_string \"TokenTimelock: current time is before release time\""
                        }
                      ],
                      "id": 11613,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1564:7:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1564:95:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11621,
                  "nodeType": "ExpressionStatement",
                  "src": "1564:95:74"
                },
                {
                  "assignments": [
                    11623
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11623,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "1678:6:74",
                      "nodeType": "VariableDeclaration",
                      "scope": 11648,
                      "src": "1670:14:74",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11622,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1670:7:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11632,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 11629,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1713:4:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenTimelock_$11650",
                              "typeString": "contract TokenTimelock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenTimelock_$11650",
                              "typeString": "contract TokenTimelock"
                            }
                          ],
                          "id": 11628,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1705:7:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 11627,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1705:7:74",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 11630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1705:13:74",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 11624,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11591,
                          "src": "1687:5:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$9447_$",
                            "typeString": "function () view returns (contract IERC20)"
                          }
                        },
                        "id": 11625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1687:7:74",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$9447",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 11626,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9386,
                      "src": "1687:17:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 11631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1687:32:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1670:49:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 11636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11634,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11623,
                          "src": "1737:6:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 11635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1746:1:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1737:10:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e54696d656c6f636b3a206e6f20746f6b656e7320746f2072656c65617365",
                        "id": 11637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1749:37:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fd167cd15f7f49233a4aac5b2fadd1b9f782ba42f4eadaf31348954b9436eae8",
                          "typeString": "literal_string \"TokenTimelock: no tokens to release\""
                        },
                        "value": "TokenTimelock: no tokens to release"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fd167cd15f7f49233a4aac5b2fadd1b9f782ba42f4eadaf31348954b9436eae8",
                          "typeString": "literal_string \"TokenTimelock: no tokens to release\""
                        }
                      ],
                      "id": 11633,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1729:7:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1729:58:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11639,
                  "nodeType": "ExpressionStatement",
                  "src": "1729:58:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 11643,
                          "name": "beneficiary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11600,
                          "src": "1819:11:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 11644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1819:13:74",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11645,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11623,
                        "src": "1834:6:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 11640,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11591,
                          "src": "1798:5:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$9447_$",
                            "typeString": "function () view returns (contract IERC20)"
                          }
                        },
                        "id": 11641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1798:7:74",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$9447",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 11642,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11342,
                      "src": "1798:20:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$9447_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$9447_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 11646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1798:43:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11647,
                  "nodeType": "ExpressionStatement",
                  "src": "1798:43:74"
                }
              ]
            },
            "documentation": {
              "id": 11610,
              "nodeType": "StructuredDocumentation",
              "src": "1439:76:74",
              "text": " @notice Transfers tokens held by timelock to beneficiary."
            },
            "functionSelector": "86d1a69f",
            "id": 11649,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "release",
            "nameLocation": "1529:7:74",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11611,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1536:2:74"
            },
            "returnParameters": {
              "id": 11612,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1554:0:74"
            },
            "scope": 11650,
            "src": "1520:328:74",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 11651,
        "src": "307:1543:74",
        "usedErrors": []
      }
    ],
    "src": "33:1818:74"
  },
  "bytecode": "60e060405234801561001057600080fd5b506040516107ca3803806107ca83398101604081905261002f916100c0565b42811161009d5760405162461bcd60e51b815260206004820152603260248201527f546f6b656e54696d656c6f636b3a2072656c656173652074696d65206973206260448201527165666f72652063757272656e742074696d6560701b606482015260840160405180910390fd5b6001600160601b0319606093841b81166080529190921b1660a05260c05261011b565b6000806000606084860312156100d557600080fd5b83516100e081610103565b60208501519093506100f181610103565b80925050604084015190509250925092565b6001600160a01b038116811461011857600080fd5b50565b60805160601c60a05160601c60c05161066261016860003960008181609f015260f0015260008181605301526102a701526000818160ca01528181610182015261028501526106626000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806338af3eed1461005157806386d1a69f14610090578063b91d40011461009a578063fc0c546a146100c8575b600080fd5b7f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b0390911681526020015b60405180910390f35b6100986100ee565b005b6040517f00000000000000000000000000000000000000000000000000000000000000008152602001610087565b7f0000000000000000000000000000000000000000000000000000000000000000610073565b7f000000000000000000000000000000000000000000000000000000000000000042101561017e5760405162461bcd60e51b815260206004820152603260248201527f546f6b656e54696d656c6f636b3a2063757272656e742074696d65206973206260448201527165666f72652072656c656173652074696d6560701b60648201526084015b60405180910390fd5b60007f00000000000000000000000000000000000000000000000000000000000000006040516370a0823160e01b81523060048201526001600160a01b0391909116906370a082319060240160206040518083038186803b1580156101e257600080fd5b505afa1580156101f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021a9190610594565b9050600081116102785760405162461bcd60e51b815260206004820152602360248201527f546f6b656e54696d656c6f636b3a206e6f20746f6b656e7320746f2072656c6560448201526261736560e81b6064820152608401610175565b6102cc6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f0000000000000000000000000000000000000000000000000000000000000000836102cf565b50565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610321908490610326565b505050565b600061037b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166103f89092919063ffffffff16565b80519091501561032157808060200190518101906103999190610572565b6103215760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610175565b60606104078484600085610411565b90505b9392505050565b6060824710156104725760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610175565b843b6104c05760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610175565b600080866001600160a01b031685876040516104dc91906105ad565b60006040518083038185875af1925050503d8060008114610519576040519150601f19603f3d011682016040523d82523d6000602084013e61051e565b606091505b509150915061052e828286610539565b979650505050505050565b6060831561054857508161040a565b8251156105585782518084602001fd5b8160405162461bcd60e51b815260040161017591906105c9565b60006020828403121561058457600080fd5b8151801515811461040a57600080fd5b6000602082840312156105a657600080fd5b5051919050565b600082516105bf8184602087016105fc565b9190910192915050565b60208152600082518060208401526105e88160408501602087016105fc565b601f01601f19169190910160400192915050565b60005b838110156106175781810151838201526020016105ff565b83811115610626576000848401525b5050505056fea2646970667358221220c3eae75ad09908d039a24d34f80f17b28b2bc49db6de8e0f80427d26475137fa64736f6c63430008060033",
  "bytecodeSha1": "c0c36737e131dd42d9352ef6fa1dc10a764a9da1",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.6+commit.11564f7e"
  },
  "contractName": "TokenTimelock",
  "coverageMap": {
    "branches": {
      "59": {},
      "73": {
        "SafeERC20._callOptionalReturn": {
          "19": [
            3668,
            3689,
            false
          ],
          "20": [
            3752,
            3782,
            true
          ]
        }
      },
      "74": {
        "TokenTimelock.release": {
          "14": [
            1572,
            1604,
            true
          ],
          "15": [
            1737,
            1747,
            true
          ]
        }
      },
      "91": {
        "Address.functionCallWithValue": {
          "16": [
            4745,
            4775,
            true
          ]
        },
        "Address.verifyCallResult": {
          "17": [
            7335,
            7342,
            false
          ],
          "18": [
            7476,
            7497,
            false
          ]
        }
      }
    },
    "statements": {
      "59": {},
      "73": {
        "SafeERC20._callOptionalReturn": {
          "7": [
            3744,
            3829
          ]
        },
        "SafeERC20.safeTransfer": {
          "6": [
            746,
            832
          ]
        }
      },
      "74": {
        "TokenTimelock.beneficiary": {
          "0": [
            1234,
            1253
          ]
        },
        "TokenTimelock.release": {
          "3": [
            1564,
            1659
          ],
          "4": [
            1729,
            1787
          ],
          "5": [
            1798,
            1841
          ]
        },
        "TokenTimelock.releaseTime": {
          "1": [
            1407,
            1426
          ]
        },
        "TokenTimelock.token": {
          "2": [
            1075,
            1088
          ]
        }
      },
      "91": {
        "Address.functionCall": {
          "8": [
            3618,
            3677
          ]
        },
        "Address.functionCallWithValue": {
          "9": [
            4737,
            4818
          ],
          "10": [
            4828,
            4888
          ],
          "11": [
            4982,
            5040
          ]
        },
        "Address.verifyCallResult": {
          "12": [
            7358,
            7375
          ],
          "13": [
            7802,
            7822
          ]
        }
      }
    }
  },
  "dependencies": [
    "Address",
    "IERC20",
    "SafeERC20"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061004c5760003560e01c806338af3eed1461005157806386d1a69f14610090578063b91d40011461009a578063fc0c546a146100c8575b600080fd5b7f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b0390911681526020015b60405180910390f35b6100986100ee565b005b6040517f00000000000000000000000000000000000000000000000000000000000000008152602001610087565b7f0000000000000000000000000000000000000000000000000000000000000000610073565b7f000000000000000000000000000000000000000000000000000000000000000042101561017e5760405162461bcd60e51b815260206004820152603260248201527f546f6b656e54696d656c6f636b3a2063757272656e742074696d65206973206260448201527165666f72652072656c656173652074696d6560701b60648201526084015b60405180910390fd5b60007f00000000000000000000000000000000000000000000000000000000000000006040516370a0823160e01b81523060048201526001600160a01b0391909116906370a082319060240160206040518083038186803b1580156101e257600080fd5b505afa1580156101f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021a9190610594565b9050600081116102785760405162461bcd60e51b815260206004820152602360248201527f546f6b656e54696d656c6f636b3a206e6f20746f6b656e7320746f2072656c6560448201526261736560e81b6064820152608401610175565b6102cc6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f0000000000000000000000000000000000000000000000000000000000000000836102cf565b50565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610321908490610326565b505050565b600061037b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166103f89092919063ffffffff16565b80519091501561032157808060200190518101906103999190610572565b6103215760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610175565b60606104078484600085610411565b90505b9392505050565b6060824710156104725760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610175565b843b6104c05760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610175565b600080866001600160a01b031685876040516104dc91906105ad565b60006040518083038185875af1925050503d8060008114610519576040519150601f19603f3d011682016040523d82523d6000602084013e61051e565b606091505b509150915061052e828286610539565b979650505050505050565b6060831561054857508161040a565b8251156105585782518084602001fd5b8160405162461bcd60e51b815260040161017591906105c9565b60006020828403121561058457600080fd5b8151801515811461040a57600080fd5b6000602082840312156105a657600080fd5b5051919050565b600082516105bf8184602087016105fc565b9190910192915050565b60208152600082518060208401526105e88160408501602087016105fc565b601f01601f19169190910160400192915050565b60005b838110156106175781810151838201526020016105ff565b83811115610626576000848401525b5050505056fea2646970667358221220c3eae75ad09908d039a24d34f80f17b28b2bc49db6de8e0f80427d26475137fa64736f6c63430008060033",
  "deployedSourceMap": "307:1543:74:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1163:97;1241:12;1163:97;;;-1:-1:-1;;;;;928:32:121;;;910:51;;898:2;883:18;1163:97:74;;;;;;;;1520:328;;;:::i;:::-;;1336:97;;;1414:12;4007:25:121;;3995:2;3980:18;1336:97:74;3962:76:121;1011:84:74;1082:6;1011:84;;1520:328;1414:12;1572:15;:32;;1564:95;;;;-1:-1:-1;;;1564:95:74;;2064:2:121;1564:95:74;;;2046:21:121;2103:2;2083:18;;;2076:30;2142:34;2122:18;;;2115:62;-1:-1:-1;;;2193:18:121;;;2186:48;2251:19;;1564:95:74;;;;;;;;;1670:14;1082:6;1687:32;;-1:-1:-1;;;1687:32:74;;1713:4;1687:32;;;910:51:121;-1:-1:-1;;;;;1687:17:74;;;;;;;883:18:121;;1687:32:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1670:49;;1746:1;1737:6;:10;1729:58;;;;-1:-1:-1;;;1729:58:74;;3659:2:121;1729:58:74;;;3641:21:121;3698:2;3678:18;;;3671:30;3737:34;3717:18;;;3710:62;-1:-1:-1;;;3788:18:121;;;3781:33;3831:19;;1729:58:74;3631:225:121;1729:58:74;1798:43;-1:-1:-1;;;;;1082:6:74;1798:20;1241:12;1834:6;1798:20;:43::i;:::-;1554:294;1520:328::o;634:205:73:-;773:58;;;-1:-1:-1;;;;;1164:32:121;;773:58:73;;;1146:51:121;1213:18;;;;1206:34;;;773:58:73;;;;;;;;;;1119:18:121;;;;773:58:73;;;;;;;;-1:-1:-1;;;;;773:58:73;-1:-1:-1;;;773:58:73;;;746:86;;766:5;;746:19;:86::i;:::-;634:205;;;:::o;3140:706::-;3559:23;3585:69;3613:4;3585:69;;;;;;;;;;;;;;;;;3593:5;-1:-1:-1;;;;;3585:27:73;;;:69;;;;;:::i;:::-;3668:17;;3559:95;;-1:-1:-1;3668:21:73;3664:176;;3763:10;3752:30;;;;;;;;;;;;:::i;:::-;3744:85;;;;-1:-1:-1;;;3744:85:73;;3248:2:121;3744:85:73;;;3230:21:121;3287:2;3267:18;;;3260:30;3326:34;3306:18;;;3299:62;-1:-1:-1;;;3377:18:121;;;3370:40;3427:19;;3744:85:73;3220:232:121;3461:223:91;3594:12;3625:52;3647:6;3655:4;3661:1;3664:12;3625:21;:52::i;:::-;3618:59;;3461:223;;;;;;:::o;4548:499::-;4713:12;4770:5;4745:21;:30;;4737:81;;;;-1:-1:-1;;;4737:81:91;;2483:2:121;4737:81:91;;;2465:21:121;2522:2;2502:18;;;2495:30;2561:34;2541:18;;;2534:62;-1:-1:-1;;;2612:18:121;;;2605:36;2658:19;;4737:81:91;2455:228:121;4737:81:91;1034:20;;4828:60;;;;-1:-1:-1;;;4828:60:91;;2890:2:121;4828:60:91;;;2872:21:121;2929:2;2909:18;;;2902:30;2968:31;2948:18;;;2941:59;3017:18;;4828:60:91;2862:179:121;4828:60:91;4900:12;4914:23;4941:6;-1:-1:-1;;;;;4941:11:91;4960:5;4967:4;4941:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4899:73;;;;4989:51;5006:7;5015:10;5027:12;4989:16;:51::i;:::-;4982:58;4548:499;-1:-1:-1;;;;;;;4548:499:91:o;7161:692::-;7307:12;7335:7;7331:516;;;-1:-1:-1;7365:10:91;7358:17;;7331:516;7476:17;;:21;7472:365;;7670:10;7664:17;7730:15;7717:10;7713:2;7709:19;7702:44;7472:365;7809:12;7802:20;;-1:-1:-1;;;7802:20:91;;;;;;;;:::i;14:277:121:-;81:6;134:2;122:9;113:7;109:23;105:32;102:2;;;150:1;147;140:12;102:2;182:9;176:16;235:5;228:13;221:21;214:5;211:32;201:2;;257:1;254;247:12;296:184;366:6;419:2;407:9;398:7;394:23;390:32;387:2;;;435:1;432;425:12;387:2;-1:-1:-1;458:16:121;;377:103;-1:-1:-1;377:103:121:o;485:274::-;614:3;652:6;646:13;668:53;714:6;709:3;702:4;694:6;690:17;668:53;:::i;:::-;737:16;;;;;622:137;-1:-1:-1;;622:137:121:o;1474:383::-;1623:2;1612:9;1605:21;1586:4;1655:6;1649:13;1698:6;1693:2;1682:9;1678:18;1671:34;1714:66;1773:6;1768:2;1757:9;1753:18;1748:2;1740:6;1736:15;1714:66;:::i;:::-;1841:2;1820:15;-1:-1:-1;;1816:29:121;1801:45;;;;1848:2;1797:54;;1595:262;-1:-1:-1;;1595:262:121:o;4043:258::-;4115:1;4125:113;4139:6;4136:1;4133:13;4125:113;;;4215:11;;;4209:18;4196:11;;;4189:39;4161:2;4154:10;4125:113;;;4256:6;4253:1;4250:13;4247:2;;;4291:1;4282:6;4277:3;4273:16;4266:27;4247:2;;4096:205;;;:::o",
  "language": "Solidity",
  "natspec": {
    "details": "A token holder contract that will allow a beneficiary to extract the tokens after a given release time. Useful for simple vesting schedules like \"advisors get all of their tokens after 1 year\".",
    "kind": "dev",
    "methods": {
      "beneficiary()": {
        "returns": {
          "_0": "the beneficiary of the tokens."
        }
      },
      "release()": {
        "notice": "Transfers tokens held by timelock to beneficiary."
      },
      "releaseTime()": {
        "returns": {
          "_0": "the time when the tokens are released."
        }
      },
      "token()": {
        "returns": {
          "_0": "the token being held."
        }
      }
    },
    "version": 1
  },
  "offset": [
    307,
    1850
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x38AF3EED EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x86D1A69F EQ PUSH2 0x90 JUMPI DUP1 PUSH4 0xB91D4001 EQ PUSH2 0x9A JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0xC8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x0 JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x98 PUSH2 0xEE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x87 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x73 JUMP JUMPDEST PUSH32 0x0 TIMESTAMP LT ISZERO PUSH2 0x17E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E54696D656C6F636B3A2063757272656E742074696D652069732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x65666F72652072656C656173652074696D65 PUSH1 0x70 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x594 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x278 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E54696D656C6F636B3A206E6F20746F6B656E7320746F2072656C65 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x617365 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x175 JUMP JUMPDEST PUSH2 0x2CC PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH32 0x0 DUP4 PUSH2 0x2CF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x321 SWAP1 DUP5 SWAP1 PUSH2 0x326 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37B DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3F8 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x321 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x399 SWAP2 SWAP1 PUSH2 0x572 JUMP JUMPDEST PUSH2 0x321 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x175 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x407 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x411 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x472 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x175 JUMP JUMPDEST DUP5 EXTCODESIZE PUSH2 0x4C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x175 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x4DC SWAP2 SWAP1 PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x519 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x51E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x52E DUP3 DUP3 DUP7 PUSH2 0x539 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x548 JUMPI POP DUP2 PUSH2 0x40A JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x558 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x175 SWAP2 SWAP1 PUSH2 0x5C9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x584 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x40A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x5BF DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x5FC JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x5E8 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x5FC JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x617 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x5FF JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x626 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 0xEA 0xE7 GAS 0xD0 SWAP10 ADDMOD 0xD0 CODECOPY LOG2 0x4D CALLVALUE 0xF8 0xF OR 0xB2 DUP12 0x2B 0xC4 SWAP14 0xB6 0xDE DUP15 0xF DUP1 TIMESTAMP PUSH30 0x26475137FA64736F6C634300080600330000000000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        307,
        1850
      ],
      "op": "PUSH1",
      "path": "74",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        307,
        1850
      ],
      "op": "PUSH1",
      "path": "74",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        307,
        1850
      ],
      "op": "MSTORE",
      "path": "74"
    },
    "5": {
      "fn": null,
      "offset": [
        307,
        1850
      ],
      "op": "CALLVALUE",
      "path": "74"
    },
    "6": {
      "fn": null,
      "offset": [
        307,
        1850
      ],
      "op": "DUP1",
      "path": "74"
    },
    "7": {
      "fn": null,
      "offset": [
        307,
        1850
      ],
      "op": "ISZERO",
      "path": "74"
    },
    "8": {
      "fn": null,
      "offset": [
        307,
        1850
      ],
      "op": "PUSH2",
      "path": "74",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        307,
        1850
      ],
      "op": "JUMPI",
      "path": "74"
    },
    "12": {
      "fn": null,
      "offset": [
        307,
        1850
      ],
      "op": "PUSH1",
      "path": "74",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        307,
        1850
      ],
      "op": "DUP1",
      "path": "74"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        307,
        1850
      ],
      "op": "REVERT",
      "path": "74"
    },
    "16": {
      "fn": null,
      "offset": [
        307,
        1850
      ],
      "op": "JUMPDEST",
      "path": "74"
    },
    "17": {
      "fn": null,
      "offset": [
        307,
        1850
      ],
      "op": "POP",
      "path": "74"
    },
    "18": {
      "fn": null,
      "offset": [
        307,
        1850
      ],
      "op": "PUSH1",
      "path": "74",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        307,
        1850
      ],
      "op": "CALLDATASIZE",
      "path": "74"
    },
    "21": {
      "fn": null,
      "offset": [
        307,
        1850
      ],
      "op": "LT",
      "path": "74"
    },
    "22": {
      "fn": null,
      "offset": [
        307,
        1850
      ],
      "op": "PUSH2",
      "path": "74",
      "value": "0x4C"
    },
    "25": {
      "fn": null,
      "offset": [
        307,
        1850
      ],
      "op": "JUMPI",
      "path": "74"
    },
    "26": {
      "fn": null,
      "offset": [
        307,
        1850
      ],
      "op": "PUSH1",
      "path": "74",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        307,
        1850
      ],
      "op": "CALLDATALOAD",
      "path": "74"
    },
    "29": {
      "fn": null,
      "offset": [
        307,
        1850
      ],
      "op": "PUSH1",
      "path": "74",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        307,
        1850
      ],
      "op": "SHR",
      "path": "74"
    },
    "32": {
      "fn": null,
      "offset": [
        307,
        1850
      ],
      "op": "DUP1",
      "path": "74"
    },
    "33": {
      "fn": null,
      "offset": [
        307,
        1850
      ],
      "op": "PUSH4",
      "path": "74",
      "value": "0x38AF3EED"
    },
    "38": {
      "fn": null,
      "offset": [
        307,
        1850
      ],
      "op": "EQ",
      "path": "74"
    },
    "39": {
      "fn": null,
      "offset": [
        307,
        1850
      ],
      "op": "PUSH2",
      "path": "74",
      "value": "0x51"
    },
    "42": {
      "fn": null,
      "offset": [
        307,
        1850
      ],
      "op": "JUMPI",
      "path": "74"
    },
    "43": {
      "fn": null,
      "offset": [
        307,
        1850
      ],
      "op": "DUP1",
      "path": "74"
    },
    "44": {
      "fn": null,
      "offset": [
        307,
        1850
      ],
      "op": "PUSH4",
      "path": "74",
      "value": "0x86D1A69F"
    },
    "49": {
      "fn": null,
      "offset": [
        307,
        1850
      ],
      "op": "EQ",
      "path": "74"
    },
    "50": {
      "fn": null,
      "offset": [
        307,
        1850
      ],
      "op": "PUSH2",
      "path": "74",
      "value": "0x90"
    },
    "53": {
      "fn": null,
      "offset": [
        307,
        1850
      ],
      "op": "JUMPI",
      "path": "74"
    },
    "54": {
      "fn": null,
      "offset": [
        307,
        1850
      ],
      "op": "DUP1",
      "path": "74"
    },
    "55": {
      "fn": null,
      "offset": [
        307,
        1850
      ],
      "op": "PUSH4",
      "path": "74",
      "value": "0xB91D4001"
    },
    "60": {
      "fn": null,
      "offset": [
        307,
        1850
      ],
      "op": "EQ",
      "path": "74"
    },
    "61": {
      "fn": null,
      "offset": [
        307,
        1850
      ],
      "op": "PUSH2",
      "path": "74",
      "value": "0x9A"
    },
    "64": {
      "fn": null,
      "offset": [
        307,
        1850
      ],
      "op": "JUMPI",
      "path": "74"
    },
    "65": {
      "fn": null,
      "offset": [
        307,
        1850
      ],
      "op": "DUP1",
      "path": "74"
    },
    "66": {
      "fn": null,
      "offset": [
        307,
        1850
      ],
      "op": "PUSH4",
      "path": "74",
      "value": "0xFC0C546A"
    },
    "71": {
      "fn": null,
      "offset": [
        307,
        1850
      ],
      "op": "EQ",
      "path": "74"
    },
    "72": {
      "fn": null,
      "offset": [
        307,
        1850
      ],
      "op": "PUSH2",
      "path": "74",
      "value": "0xC8"
    },
    "75": {
      "fn": null,
      "offset": [
        307,
        1850
      ],
      "op": "JUMPI",
      "path": "74"
    },
    "76": {
      "fn": null,
      "offset": [
        307,
        1850
      ],
      "op": "JUMPDEST",
      "path": "74"
    },
    "77": {
      "fn": null,
      "offset": [
        307,
        1850
      ],
      "op": "PUSH1",
      "path": "74",
      "value": "0x0"
    },
    "79": {
      "fn": null,
      "offset": [
        307,
        1850
      ],
      "op": "DUP1",
      "path": "74"
    },
    "80": {
      "first_revert": true,
      "fn": null,
      "offset": [
        307,
        1850
      ],
      "op": "REVERT",
      "path": "74"
    },
    "81": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1163,
        1260
      ],
      "op": "JUMPDEST",
      "path": "74"
    },
    "82": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1241,
        1253
      ],
      "op": "PUSH32",
      "path": "74",
      "statement": 0,
      "value": "0x0"
    },
    "115": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1163,
        1260
      ],
      "op": "JUMPDEST",
      "path": "74"
    },
    "116": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1163,
        1260
      ],
      "op": "PUSH1",
      "path": "74",
      "value": "0x40"
    },
    "118": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1163,
        1260
      ],
      "op": "MLOAD",
      "path": "74"
    },
    "119": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "121": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "123": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "125": {
      "op": "SHL"
    },
    "126": {
      "op": "SUB"
    },
    "127": {
      "op": "SWAP1"
    },
    "128": {
      "op": "SWAP2"
    },
    "129": {
      "op": "AND"
    },
    "130": {
      "op": "DUP2"
    },
    "131": {
      "op": "MSTORE"
    },
    "132": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "134": {
      "op": "ADD"
    },
    "135": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1163,
        1260
      ],
      "op": "JUMPDEST",
      "path": "74"
    },
    "136": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1163,
        1260
      ],
      "op": "PUSH1",
      "path": "74",
      "value": "0x40"
    },
    "138": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1163,
        1260
      ],
      "op": "MLOAD",
      "path": "74"
    },
    "139": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1163,
        1260
      ],
      "op": "DUP1",
      "path": "74"
    },
    "140": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1163,
        1260
      ],
      "op": "SWAP2",
      "path": "74"
    },
    "141": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1163,
        1260
      ],
      "op": "SUB",
      "path": "74"
    },
    "142": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1163,
        1260
      ],
      "op": "SWAP1",
      "path": "74"
    },
    "143": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1163,
        1260
      ],
      "op": "RETURN",
      "path": "74"
    },
    "144": {
      "fn": "TokenTimelock.release",
      "offset": [
        1520,
        1848
      ],
      "op": "JUMPDEST",
      "path": "74"
    },
    "145": {
      "fn": "TokenTimelock.release",
      "offset": [
        1520,
        1848
      ],
      "op": "PUSH2",
      "path": "74",
      "value": "0x98"
    },
    "148": {
      "fn": "TokenTimelock.release",
      "offset": [
        1520,
        1848
      ],
      "op": "PUSH2",
      "path": "74",
      "value": "0xEE"
    },
    "151": {
      "fn": "TokenTimelock.release",
      "jump": "i",
      "offset": [
        1520,
        1848
      ],
      "op": "JUMP",
      "path": "74"
    },
    "152": {
      "fn": "TokenTimelock.release",
      "offset": [
        1520,
        1848
      ],
      "op": "JUMPDEST",
      "path": "74"
    },
    "153": {
      "fn": "TokenTimelock.release",
      "offset": [
        1520,
        1848
      ],
      "op": "STOP",
      "path": "74"
    },
    "154": {
      "fn": "TokenTimelock.releaseTime",
      "offset": [
        1336,
        1433
      ],
      "op": "JUMPDEST",
      "path": "74"
    },
    "155": {
      "fn": "TokenTimelock.releaseTime",
      "offset": [
        1336,
        1433
      ],
      "op": "PUSH1",
      "path": "74",
      "value": "0x40"
    },
    "157": {
      "fn": "TokenTimelock.releaseTime",
      "offset": [
        1336,
        1433
      ],
      "op": "MLOAD",
      "path": "74"
    },
    "158": {
      "fn": "TokenTimelock.releaseTime",
      "offset": [
        1414,
        1426
      ],
      "op": "PUSH32",
      "path": "74",
      "statement": 1,
      "value": "0x0"
    },
    "191": {
      "op": "DUP2"
    },
    "192": {
      "op": "MSTORE"
    },
    "193": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "195": {
      "op": "ADD"
    },
    "196": {
      "fn": "TokenTimelock.releaseTime",
      "offset": [
        1336,
        1433
      ],
      "op": "PUSH2",
      "path": "74",
      "value": "0x87"
    },
    "199": {
      "op": "JUMP"
    },
    "200": {
      "fn": "TokenTimelock.token",
      "offset": [
        1011,
        1095
      ],
      "op": "JUMPDEST",
      "path": "74"
    },
    "201": {
      "fn": "TokenTimelock.token",
      "offset": [
        1082,
        1088
      ],
      "op": "PUSH32",
      "path": "74",
      "statement": 2,
      "value": "0x0"
    },
    "234": {
      "fn": "TokenTimelock.token",
      "offset": [
        1011,
        1095
      ],
      "op": "PUSH2",
      "path": "74",
      "value": "0x73"
    },
    "237": {
      "fn": "TokenTimelock.token",
      "offset": [
        1011,
        1095
      ],
      "op": "JUMP",
      "path": "74"
    },
    "238": {
      "fn": "TokenTimelock.release",
      "offset": [
        1520,
        1848
      ],
      "op": "JUMPDEST",
      "path": "74"
    },
    "239": {
      "fn": "TokenTimelock.releaseTime",
      "offset": [
        1414,
        1426
      ],
      "op": "PUSH32",
      "path": "74",
      "value": "0x0"
    },
    "272": {
      "fn": "TokenTimelock.release",
      "offset": [
        1572,
        1587
      ],
      "op": "TIMESTAMP",
      "path": "74",
      "statement": 3
    },
    "273": {
      "fn": "TokenTimelock.release",
      "offset": [
        1572,
        1604
      ],
      "op": "LT",
      "path": "74"
    },
    "274": {
      "branch": 14,
      "fn": "TokenTimelock.release",
      "offset": [
        1572,
        1604
      ],
      "op": "ISZERO",
      "path": "74"
    },
    "275": {
      "fn": "TokenTimelock.release",
      "offset": [
        1564,
        1659
      ],
      "op": "PUSH2",
      "path": "74",
      "value": "0x17E"
    },
    "278": {
      "branch": 14,
      "fn": "TokenTimelock.release",
      "offset": [
        1564,
        1659
      ],
      "op": "JUMPI",
      "path": "74"
    },
    "279": {
      "fn": "TokenTimelock.release",
      "offset": [
        1564,
        1659
      ],
      "op": "PUSH1",
      "path": "74",
      "value": "0x40"
    },
    "281": {
      "fn": "TokenTimelock.release",
      "offset": [
        1564,
        1659
      ],
      "op": "MLOAD",
      "path": "74"
    },
    "282": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "286": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "288": {
      "op": "SHL"
    },
    "289": {
      "fn": "TokenTimelock.release",
      "offset": [
        1564,
        1659
      ],
      "op": "DUP2",
      "path": "74"
    },
    "290": {
      "fn": "TokenTimelock.release",
      "offset": [
        1564,
        1659
      ],
      "op": "MSTORE",
      "path": "74"
    },
    "291": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "293": {
      "fn": "TokenTimelock.release",
      "offset": [
        1564,
        1659
      ],
      "op": "PUSH1",
      "path": "74",
      "value": "0x4"
    },
    "295": {
      "fn": "TokenTimelock.release",
      "offset": [
        1564,
        1659
      ],
      "op": "DUP3",
      "path": "74"
    },
    "296": {
      "fn": "TokenTimelock.release",
      "offset": [
        1564,
        1659
      ],
      "op": "ADD",
      "path": "74"
    },
    "297": {
      "op": "MSTORE"
    },
    "298": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "300": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "302": {
      "op": "DUP3"
    },
    "303": {
      "op": "ADD"
    },
    "304": {
      "op": "MSTORE"
    },
    "305": {
      "op": "PUSH32",
      "value": "0x546F6B656E54696D656C6F636B3A2063757272656E742074696D652069732062"
    },
    "338": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "340": {
      "op": "DUP3"
    },
    "341": {
      "op": "ADD"
    },
    "342": {
      "op": "MSTORE"
    },
    "343": {
      "op": "PUSH18",
      "value": "0x65666F72652072656C656173652074696D65"
    },
    "362": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "364": {
      "op": "SHL"
    },
    "365": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "367": {
      "op": "DUP3"
    },
    "368": {
      "op": "ADD"
    },
    "369": {
      "op": "MSTORE"
    },
    "370": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "372": {
      "op": "ADD"
    },
    "373": {
      "fn": "TokenTimelock.release",
      "offset": [
        1564,
        1659
      ],
      "op": "JUMPDEST",
      "path": "74"
    },
    "374": {
      "fn": "TokenTimelock.release",
      "offset": [
        1564,
        1659
      ],
      "op": "PUSH1",
      "path": "74",
      "value": "0x40"
    },
    "376": {
      "fn": "TokenTimelock.release",
      "offset": [
        1564,
        1659
      ],
      "op": "MLOAD",
      "path": "74"
    },
    "377": {
      "fn": "TokenTimelock.release",
      "offset": [
        1564,
        1659
      ],
      "op": "DUP1",
      "path": "74"
    },
    "378": {
      "fn": "TokenTimelock.release",
      "offset": [
        1564,
        1659
      ],
      "op": "SWAP2",
      "path": "74"
    },
    "379": {
      "fn": "TokenTimelock.release",
      "offset": [
        1564,
        1659
      ],
      "op": "SUB",
      "path": "74"
    },
    "380": {
      "fn": "TokenTimelock.release",
      "offset": [
        1564,
        1659
      ],
      "op": "SWAP1",
      "path": "74"
    },
    "381": {
      "fn": "TokenTimelock.release",
      "offset": [
        1564,
        1659
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "74"
    },
    "382": {
      "fn": "TokenTimelock.release",
      "offset": [
        1564,
        1659
      ],
      "op": "JUMPDEST",
      "path": "74"
    },
    "383": {
      "fn": "TokenTimelock.release",
      "offset": [
        1670,
        1684
      ],
      "op": "PUSH1",
      "path": "74",
      "value": "0x0"
    },
    "385": {
      "fn": "TokenTimelock.token",
      "offset": [
        1082,
        1088
      ],
      "op": "PUSH32",
      "path": "74",
      "value": "0x0"
    },
    "418": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1719
      ],
      "op": "PUSH1",
      "path": "74",
      "value": "0x40"
    },
    "420": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1719
      ],
      "op": "MLOAD",
      "path": "74"
    },
    "421": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "426": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "428": {
      "op": "SHL"
    },
    "429": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1719
      ],
      "op": "DUP2",
      "path": "74"
    },
    "430": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1719
      ],
      "op": "MSTORE",
      "path": "74"
    },
    "431": {
      "fn": "TokenTimelock.release",
      "offset": [
        1713,
        1717
      ],
      "op": "ADDRESS",
      "path": "74"
    },
    "432": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1719
      ],
      "op": "PUSH1",
      "path": "74",
      "value": "0x4"
    },
    "434": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1719
      ],
      "op": "DUP3",
      "path": "74"
    },
    "435": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1719
      ],
      "op": "ADD",
      "path": "74"
    },
    "436": {
      "op": "MSTORE"
    },
    "437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "441": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "443": {
      "op": "SHL"
    },
    "444": {
      "op": "SUB"
    },
    "445": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1704
      ],
      "op": "SWAP2",
      "path": "74"
    },
    "446": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1704
      ],
      "op": "SWAP1",
      "path": "74"
    },
    "447": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1704
      ],
      "op": "SWAP2",
      "path": "74"
    },
    "448": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1704
      ],
      "op": "AND",
      "path": "74"
    },
    "449": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1704
      ],
      "op": "SWAP1",
      "path": "74"
    },
    "450": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1704
      ],
      "op": "PUSH4",
      "path": "74",
      "value": "0x70A08231"
    },
    "455": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1704
      ],
      "op": "SWAP1",
      "path": "74"
    },
    "456": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "458": {
      "op": "ADD"
    },
    "459": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1719
      ],
      "op": "PUSH1",
      "path": "74",
      "value": "0x20"
    },
    "461": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1719
      ],
      "op": "PUSH1",
      "path": "74",
      "value": "0x40"
    },
    "463": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1719
      ],
      "op": "MLOAD",
      "path": "74"
    },
    "464": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1719
      ],
      "op": "DUP1",
      "path": "74"
    },
    "465": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1719
      ],
      "op": "DUP4",
      "path": "74"
    },
    "466": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1719
      ],
      "op": "SUB",
      "path": "74"
    },
    "467": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1719
      ],
      "op": "DUP2",
      "path": "74"
    },
    "468": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1719
      ],
      "op": "DUP7",
      "path": "74"
    },
    "469": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1719
      ],
      "op": "DUP1",
      "path": "74"
    },
    "470": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1719
      ],
      "op": "EXTCODESIZE",
      "path": "74"
    },
    "471": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1719
      ],
      "op": "ISZERO",
      "path": "74"
    },
    "472": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1719
      ],
      "op": "DUP1",
      "path": "74"
    },
    "473": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1719
      ],
      "op": "ISZERO",
      "path": "74"
    },
    "474": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1719
      ],
      "op": "PUSH2",
      "path": "74",
      "value": "0x1E2"
    },
    "477": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1719
      ],
      "op": "JUMPI",
      "path": "74"
    },
    "478": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1719
      ],
      "op": "PUSH1",
      "path": "74",
      "value": "0x0"
    },
    "480": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1719
      ],
      "op": "DUP1",
      "path": "74"
    },
    "481": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1719
      ],
      "op": "REVERT",
      "path": "74"
    },
    "482": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1719
      ],
      "op": "JUMPDEST",
      "path": "74"
    },
    "483": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1719
      ],
      "op": "POP",
      "path": "74"
    },
    "484": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1719
      ],
      "op": "GAS",
      "path": "74"
    },
    "485": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1719
      ],
      "op": "STATICCALL",
      "path": "74"
    },
    "486": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1719
      ],
      "op": "ISZERO",
      "path": "74"
    },
    "487": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1719
      ],
      "op": "DUP1",
      "path": "74"
    },
    "488": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1719
      ],
      "op": "ISZERO",
      "path": "74"
    },
    "489": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1719
      ],
      "op": "PUSH2",
      "path": "74",
      "value": "0x1F6"
    },
    "492": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1719
      ],
      "op": "JUMPI",
      "path": "74"
    },
    "493": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1719
      ],
      "op": "RETURNDATASIZE",
      "path": "74"
    },
    "494": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1719
      ],
      "op": "PUSH1",
      "path": "74",
      "value": "0x0"
    },
    "496": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1719
      ],
      "op": "DUP1",
      "path": "74"
    },
    "497": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1719
      ],
      "op": "RETURNDATACOPY",
      "path": "74"
    },
    "498": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1719
      ],
      "op": "RETURNDATASIZE",
      "path": "74"
    },
    "499": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1719
      ],
      "op": "PUSH1",
      "path": "74",
      "value": "0x0"
    },
    "501": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1719
      ],
      "op": "REVERT",
      "path": "74"
    },
    "502": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1719
      ],
      "op": "JUMPDEST",
      "path": "74"
    },
    "503": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1719
      ],
      "op": "POP",
      "path": "74"
    },
    "504": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1719
      ],
      "op": "POP",
      "path": "74"
    },
    "505": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1719
      ],
      "op": "POP",
      "path": "74"
    },
    "506": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1719
      ],
      "op": "POP",
      "path": "74"
    },
    "507": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1719
      ],
      "op": "PUSH1",
      "path": "74",
      "value": "0x40"
    },
    "509": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1719
      ],
      "op": "MLOAD",
      "path": "74"
    },
    "510": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1719
      ],
      "op": "RETURNDATASIZE",
      "path": "74"
    },
    "511": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1719
      ],
      "op": "PUSH1",
      "path": "74",
      "value": "0x1F"
    },
    "513": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1719
      ],
      "op": "NOT",
      "path": "74"
    },
    "514": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1719
      ],
      "op": "PUSH1",
      "path": "74",
      "value": "0x1F"
    },
    "516": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1719
      ],
      "op": "DUP3",
      "path": "74"
    },
    "517": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1719
      ],
      "op": "ADD",
      "path": "74"
    },
    "518": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1719
      ],
      "op": "AND",
      "path": "74"
    },
    "519": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1719
      ],
      "op": "DUP3",
      "path": "74"
    },
    "520": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1719
      ],
      "op": "ADD",
      "path": "74"
    },
    "521": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1719
      ],
      "op": "DUP1",
      "path": "74"
    },
    "522": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1719
      ],
      "op": "PUSH1",
      "path": "74",
      "value": "0x40"
    },
    "524": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1719
      ],
      "op": "MSTORE",
      "path": "74"
    },
    "525": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1719
      ],
      "op": "POP",
      "path": "74"
    },
    "526": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1719
      ],
      "op": "DUP2",
      "path": "74"
    },
    "527": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1719
      ],
      "op": "ADD",
      "path": "74"
    },
    "528": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1719
      ],
      "op": "SWAP1",
      "path": "74"
    },
    "529": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1719
      ],
      "op": "PUSH2",
      "path": "74",
      "value": "0x21A"
    },
    "532": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1719
      ],
      "op": "SWAP2",
      "path": "74"
    },
    "533": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1719
      ],
      "op": "SWAP1",
      "path": "74"
    },
    "534": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1719
      ],
      "op": "PUSH2",
      "path": "74",
      "value": "0x594"
    },
    "537": {
      "fn": "TokenTimelock.release",
      "jump": "i",
      "offset": [
        1687,
        1719
      ],
      "op": "JUMP",
      "path": "74"
    },
    "538": {
      "fn": "TokenTimelock.release",
      "offset": [
        1687,
        1719
      ],
      "op": "JUMPDEST",
      "path": "74"
    },
    "539": {
      "fn": "TokenTimelock.release",
      "offset": [
        1670,
        1719
      ],
      "op": "SWAP1",
      "path": "74"
    },
    "540": {
      "fn": "TokenTimelock.release",
      "offset": [
        1670,
        1719
      ],
      "op": "POP",
      "path": "74"
    },
    "541": {
      "fn": "TokenTimelock.release",
      "offset": [
        1746,
        1747
      ],
      "op": "PUSH1",
      "path": "74",
      "statement": 4,
      "value": "0x0"
    },
    "543": {
      "fn": "TokenTimelock.release",
      "offset": [
        1737,
        1743
      ],
      "op": "DUP2",
      "path": "74"
    },
    "544": {
      "branch": 15,
      "fn": "TokenTimelock.release",
      "offset": [
        1737,
        1747
      ],
      "op": "GT",
      "path": "74"
    },
    "545": {
      "fn": "TokenTimelock.release",
      "offset": [
        1729,
        1787
      ],
      "op": "PUSH2",
      "path": "74",
      "value": "0x278"
    },
    "548": {
      "branch": 15,
      "fn": "TokenTimelock.release",
      "offset": [
        1729,
        1787
      ],
      "op": "JUMPI",
      "path": "74"
    },
    "549": {
      "fn": "TokenTimelock.release",
      "offset": [
        1729,
        1787
      ],
      "op": "PUSH1",
      "path": "74",
      "value": "0x40"
    },
    "551": {
      "fn": "TokenTimelock.release",
      "offset": [
        1729,
        1787
      ],
      "op": "MLOAD",
      "path": "74"
    },
    "552": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "556": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "558": {
      "op": "SHL"
    },
    "559": {
      "fn": "TokenTimelock.release",
      "offset": [
        1729,
        1787
      ],
      "op": "DUP2",
      "path": "74"
    },
    "560": {
      "fn": "TokenTimelock.release",
      "offset": [
        1729,
        1787
      ],
      "op": "MSTORE",
      "path": "74"
    },
    "561": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "563": {
      "fn": "TokenTimelock.release",
      "offset": [
        1729,
        1787
      ],
      "op": "PUSH1",
      "path": "74",
      "value": "0x4"
    },
    "565": {
      "fn": "TokenTimelock.release",
      "offset": [
        1729,
        1787
      ],
      "op": "DUP3",
      "path": "74"
    },
    "566": {
      "fn": "TokenTimelock.release",
      "offset": [
        1729,
        1787
      ],
      "op": "ADD",
      "path": "74"
    },
    "567": {
      "op": "MSTORE"
    },
    "568": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "570": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "572": {
      "op": "DUP3"
    },
    "573": {
      "op": "ADD"
    },
    "574": {
      "op": "MSTORE"
    },
    "575": {
      "op": "PUSH32",
      "value": "0x546F6B656E54696D656C6F636B3A206E6F20746F6B656E7320746F2072656C65"
    },
    "608": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "610": {
      "op": "DUP3"
    },
    "611": {
      "op": "ADD"
    },
    "612": {
      "op": "MSTORE"
    },
    "613": {
      "op": "PUSH3",
      "value": "0x617365"
    },
    "617": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "619": {
      "op": "SHL"
    },
    "620": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "622": {
      "op": "DUP3"
    },
    "623": {
      "op": "ADD"
    },
    "624": {
      "op": "MSTORE"
    },
    "625": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "627": {
      "op": "ADD"
    },
    "628": {
      "fn": "TokenTimelock.release",
      "offset": [
        1729,
        1787
      ],
      "op": "PUSH2",
      "path": "74",
      "value": "0x175"
    },
    "631": {
      "op": "JUMP"
    },
    "632": {
      "fn": "TokenTimelock.release",
      "offset": [
        1729,
        1787
      ],
      "op": "JUMPDEST",
      "path": "74"
    },
    "633": {
      "fn": "TokenTimelock.release",
      "offset": [
        1798,
        1841
      ],
      "op": "PUSH2",
      "path": "74",
      "statement": 5,
      "value": "0x2CC"
    },
    "636": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "638": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "640": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "642": {
      "op": "SHL"
    },
    "643": {
      "op": "SUB"
    },
    "644": {
      "fn": "TokenTimelock.token",
      "offset": [
        1082,
        1088
      ],
      "op": "PUSH32",
      "path": "74",
      "value": "0x0"
    },
    "677": {
      "fn": "TokenTimelock.release",
      "offset": [
        1798,
        1818
      ],
      "op": "AND",
      "path": "74"
    },
    "678": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1241,
        1253
      ],
      "op": "PUSH32",
      "path": "74",
      "value": "0x0"
    },
    "711": {
      "fn": "TokenTimelock.release",
      "offset": [
        1834,
        1840
      ],
      "op": "DUP4",
      "path": "74"
    },
    "712": {
      "fn": "TokenTimelock.release",
      "offset": [
        1798,
        1818
      ],
      "op": "PUSH2",
      "path": "74",
      "value": "0x2CF"
    },
    "715": {
      "fn": "TokenTimelock.release",
      "jump": "i",
      "offset": [
        1798,
        1841
      ],
      "op": "JUMP",
      "path": "74"
    },
    "716": {
      "fn": "TokenTimelock.release",
      "offset": [
        1798,
        1841
      ],
      "op": "JUMPDEST",
      "path": "74"
    },
    "717": {
      "fn": "TokenTimelock.release",
      "offset": [
        1554,
        1848
      ],
      "op": "POP",
      "path": "74"
    },
    "718": {
      "fn": "TokenTimelock.release",
      "jump": "o",
      "offset": [
        1520,
        1848
      ],
      "op": "JUMP",
      "path": "74"
    },
    "719": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        634,
        839
      ],
      "op": "JUMPDEST",
      "path": "73"
    },
    "720": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "PUSH1",
      "path": "73",
      "statement": 6,
      "value": "0x40"
    },
    "722": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP1",
      "path": "73"
    },
    "723": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MLOAD",
      "path": "73"
    },
    "724": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "726": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "728": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "730": {
      "op": "SHL"
    },
    "731": {
      "op": "SUB"
    },
    "732": {
      "op": "DUP5"
    },
    "733": {
      "op": "AND"
    },
    "734": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "PUSH1",
      "path": "73",
      "value": "0x24"
    },
    "736": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP3",
      "path": "73"
    },
    "737": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "ADD",
      "path": "73"
    },
    "738": {
      "op": "MSTORE"
    },
    "739": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "741": {
      "op": "DUP1"
    },
    "742": {
      "op": "DUP3"
    },
    "743": {
      "op": "ADD"
    },
    "744": {
      "op": "DUP5"
    },
    "745": {
      "op": "SWAP1"
    },
    "746": {
      "op": "MSTORE"
    },
    "747": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP3",
      "path": "73"
    },
    "748": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MLOAD",
      "path": "73"
    },
    "749": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP1",
      "path": "73"
    },
    "750": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP4",
      "path": "73"
    },
    "751": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SUB",
      "path": "73"
    },
    "752": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SWAP1",
      "path": "73"
    },
    "753": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SWAP2",
      "path": "73"
    },
    "754": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "ADD",
      "path": "73"
    },
    "755": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP2",
      "path": "73"
    },
    "756": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MSTORE",
      "path": "73"
    },
    "757": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "759": {
      "op": "SWAP1"
    },
    "760": {
      "op": "SWAP2"
    },
    "761": {
      "op": "ADD"
    },
    "762": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SWAP1",
      "path": "73"
    },
    "763": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SWAP2",
      "path": "73"
    },
    "764": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MSTORE",
      "path": "73"
    },
    "765": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "PUSH1",
      "path": "73",
      "value": "0x20"
    },
    "767": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP2",
      "path": "73"
    },
    "768": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "ADD",
      "path": "73"
    },
    "769": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP1",
      "path": "73"
    },
    "770": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MLOAD",
      "path": "73"
    },
    "771": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "773": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "775": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "777": {
      "op": "SHL"
    },
    "778": {
      "op": "SUB"
    },
    "779": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "AND",
      "path": "73"
    },
    "780": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "785": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "787": {
      "op": "SHL"
    },
    "788": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "OR",
      "path": "73"
    },
    "789": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SWAP1",
      "path": "73"
    },
    "790": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MSTORE",
      "path": "73"
    },
    "791": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        746,
        832
      ],
      "op": "PUSH2",
      "path": "73",
      "value": "0x321"
    },
    "794": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        746,
        832
      ],
      "op": "SWAP1",
      "path": "73"
    },
    "795": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        766,
        771
      ],
      "op": "DUP5",
      "path": "73"
    },
    "796": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        766,
        771
      ],
      "op": "SWAP1",
      "path": "73"
    },
    "797": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        746,
        765
      ],
      "op": "PUSH2",
      "path": "73",
      "value": "0x326"
    },
    "800": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "i",
      "offset": [
        746,
        832
      ],
      "op": "JUMP",
      "path": "73"
    },
    "801": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        746,
        832
      ],
      "op": "JUMPDEST",
      "path": "73"
    },
    "802": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        634,
        839
      ],
      "op": "POP",
      "path": "73"
    },
    "803": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        634,
        839
      ],
      "op": "POP",
      "path": "73"
    },
    "804": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        634,
        839
      ],
      "op": "POP",
      "path": "73"
    },
    "805": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "o",
      "offset": [
        634,
        839
      ],
      "op": "JUMP",
      "path": "73"
    },
    "806": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3140,
        3846
      ],
      "op": "JUMPDEST",
      "path": "73"
    },
    "807": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3559,
        3582
      ],
      "op": "PUSH1",
      "path": "73",
      "value": "0x0"
    },
    "809": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH2",
      "path": "73",
      "value": "0x37B"
    },
    "812": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3613,
        3617
      ],
      "op": "DUP3",
      "path": "73"
    },
    "813": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "73",
      "value": "0x40"
    },
    "815": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "MLOAD",
      "path": "73"
    },
    "816": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "DUP1",
      "path": "73"
    },
    "817": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "73",
      "value": "0x40"
    },
    "819": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "ADD",
      "path": "73"
    },
    "820": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "73",
      "value": "0x40"
    },
    "822": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "MSTORE",
      "path": "73"
    },
    "823": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "DUP1",
      "path": "73"
    },
    "824": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "73",
      "value": "0x20"
    },
    "826": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "DUP2",
      "path": "73"
    },
    "827": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "MSTORE",
      "path": "73"
    },
    "828": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "73",
      "value": "0x20"
    },
    "830": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "ADD",
      "path": "73"
    },
    "831": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH32",
      "path": "73",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "864": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "DUP2",
      "path": "73"
    },
    "865": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "MSTORE",
      "path": "73"
    },
    "866": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "POP",
      "path": "73"
    },
    "867": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3593,
        3598
      ],
      "op": "DUP6",
      "path": "73"
    },
    "868": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "870": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "872": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "874": {
      "op": "SHL"
    },
    "875": {
      "op": "SUB"
    },
    "876": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3612
      ],
      "op": "AND",
      "path": "73"
    },
    "877": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3612
      ],
      "op": "PUSH2",
      "path": "73",
      "value": "0x3F8"
    },
    "880": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3612
      ],
      "op": "SWAP1",
      "path": "73"
    },
    "881": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "SWAP3",
      "path": "73"
    },
    "882": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "SWAP2",
      "path": "73"
    },
    "883": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "SWAP1",
      "path": "73"
    },
    "884": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH4",
      "path": "73",
      "value": "0xFFFFFFFF"
    },
    "889": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "AND",
      "path": "73"
    },
    "890": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3585,
        3654
      ],
      "op": "JUMP",
      "path": "73"
    },
    "891": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "JUMPDEST",
      "path": "73"
    },
    "892": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3668,
        3685
      ],
      "op": "DUP1",
      "path": "73"
    },
    "893": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3668,
        3685
      ],
      "op": "MLOAD",
      "path": "73"
    },
    "894": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3559,
        3654
      ],
      "op": "SWAP1",
      "path": "73"
    },
    "895": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3559,
        3654
      ],
      "op": "SWAP2",
      "path": "73"
    },
    "896": {
      "op": "POP"
    },
    "897": {
      "branch": 19,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3668,
        3689
      ],
      "op": "ISZERO",
      "path": "73"
    },
    "898": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3664,
        3840
      ],
      "op": "PUSH2",
      "path": "73",
      "value": "0x321"
    },
    "901": {
      "branch": 19,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3664,
        3840
      ],
      "op": "JUMPI",
      "path": "73"
    },
    "902": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3763,
        3773
      ],
      "op": "DUP1",
      "path": "73",
      "statement": 7
    },
    "903": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "DUP1",
      "path": "73"
    },
    "904": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "PUSH1",
      "path": "73",
      "value": "0x20"
    },
    "906": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "ADD",
      "path": "73"
    },
    "907": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "SWAP1",
      "path": "73"
    },
    "908": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "MLOAD",
      "path": "73"
    },
    "909": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "DUP2",
      "path": "73"
    },
    "910": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "ADD",
      "path": "73"
    },
    "911": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "SWAP1",
      "path": "73"
    },
    "912": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "PUSH2",
      "path": "73",
      "value": "0x399"
    },
    "915": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "SWAP2",
      "path": "73"
    },
    "916": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "SWAP1",
      "path": "73"
    },
    "917": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "PUSH2",
      "path": "73",
      "value": "0x572"
    },
    "920": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3752,
        3782
      ],
      "op": "JUMP",
      "path": "73"
    },
    "921": {
      "branch": 20,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "JUMPDEST",
      "path": "73"
    },
    "922": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "PUSH2",
      "path": "73",
      "value": "0x321"
    },
    "925": {
      "branch": 20,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "JUMPI",
      "path": "73"
    },
    "926": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "PUSH1",
      "path": "73",
      "value": "0x40"
    },
    "928": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "MLOAD",
      "path": "73"
    },
    "929": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "933": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "935": {
      "op": "SHL"
    },
    "936": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "DUP2",
      "path": "73"
    },
    "937": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "MSTORE",
      "path": "73"
    },
    "938": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "940": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "PUSH1",
      "path": "73",
      "value": "0x4"
    },
    "942": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "DUP3",
      "path": "73"
    },
    "943": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "ADD",
      "path": "73"
    },
    "944": {
      "op": "MSTORE"
    },
    "945": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "947": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "949": {
      "op": "DUP3"
    },
    "950": {
      "op": "ADD"
    },
    "951": {
      "op": "MSTORE"
    },
    "952": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A204552433230206F7065726174696F6E20646964206E"
    },
    "985": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "987": {
      "op": "DUP3"
    },
    "988": {
      "op": "ADD"
    },
    "989": {
      "op": "MSTORE"
    },
    "990": {
      "op": "PUSH10",
      "value": "0x1BDD081CDD58D8D95959"
    },
    "1001": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "1003": {
      "op": "SHL"
    },
    "1004": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1006": {
      "op": "DUP3"
    },
    "1007": {
      "op": "ADD"
    },
    "1008": {
      "op": "MSTORE"
    },
    "1009": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1011": {
      "op": "ADD"
    },
    "1012": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "PUSH2",
      "path": "73",
      "value": "0x175"
    },
    "1015": {
      "op": "JUMP"
    },
    "1016": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "JUMPDEST",
      "path": "91"
    },
    "1017": {
      "fn": "Address.functionCall",
      "offset": [
        3594,
        3606
      ],
      "op": "PUSH1",
      "path": "91",
      "value": "0x60"
    },
    "1019": {
      "fn": "Address.functionCall",
      "offset": [
        3625,
        3677
      ],
      "op": "PUSH2",
      "path": "91",
      "statement": 8,
      "value": "0x407"
    },
    "1022": {
      "fn": "Address.functionCall",
      "offset": [
        3647,
        3653
      ],
      "op": "DUP5",
      "path": "91"
    },
    "1023": {
      "fn": "Address.functionCall",
      "offset": [
        3655,
        3659
      ],
      "op": "DUP5",
      "path": "91"
    },
    "1024": {
      "fn": "Address.functionCall",
      "offset": [
        3661,
        3662
      ],
      "op": "PUSH1",
      "path": "91",
      "value": "0x0"
    },
    "1026": {
      "fn": "Address.functionCall",
      "offset": [
        3664,
        3676
      ],
      "op": "DUP6",
      "path": "91"
    },
    "1027": {
      "fn": "Address.functionCall",
      "offset": [
        3625,
        3646
      ],
      "op": "PUSH2",
      "path": "91",
      "value": "0x411"
    },
    "1030": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        3625,
        3677
      ],
      "op": "JUMP",
      "path": "91"
    },
    "1031": {
      "fn": "Address.functionCall",
      "offset": [
        3625,
        3677
      ],
      "op": "JUMPDEST",
      "path": "91"
    },
    "1032": {
      "fn": "Address.functionCall",
      "offset": [
        3618,
        3677
      ],
      "op": "SWAP1",
      "path": "91"
    },
    "1033": {
      "fn": "Address.functionCall",
      "offset": [
        3618,
        3677
      ],
      "op": "POP",
      "path": "91"
    },
    "1034": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "JUMPDEST",
      "path": "91"
    },
    "1035": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "SWAP4",
      "path": "91"
    },
    "1036": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "SWAP3",
      "path": "91"
    },
    "1037": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "POP",
      "path": "91"
    },
    "1038": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "POP",
      "path": "91"
    },
    "1039": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "POP",
      "path": "91"
    },
    "1040": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [
        3461,
        3684
      ],
      "op": "JUMP",
      "path": "91"
    },
    "1041": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4548,
        5047
      ],
      "op": "JUMPDEST",
      "path": "91"
    },
    "1042": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4713,
        4725
      ],
      "op": "PUSH1",
      "path": "91",
      "value": "0x60"
    },
    "1044": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4770,
        4775
      ],
      "op": "DUP3",
      "path": "91",
      "statement": 9
    },
    "1045": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4745,
        4766
      ],
      "op": "SELFBALANCE",
      "path": "91"
    },
    "1046": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4745,
        4775
      ],
      "op": "LT",
      "path": "91"
    },
    "1047": {
      "branch": 16,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4745,
        4775
      ],
      "op": "ISZERO",
      "path": "91"
    },
    "1048": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "PUSH2",
      "path": "91",
      "value": "0x472"
    },
    "1051": {
      "branch": 16,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "JUMPI",
      "path": "91"
    },
    "1052": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "PUSH1",
      "path": "91",
      "value": "0x40"
    },
    "1054": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "MLOAD",
      "path": "91"
    },
    "1055": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1059": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1061": {
      "op": "SHL"
    },
    "1062": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "DUP2",
      "path": "91"
    },
    "1063": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "MSTORE",
      "path": "91"
    },
    "1064": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1066": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "PUSH1",
      "path": "91",
      "value": "0x4"
    },
    "1068": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "DUP3",
      "path": "91"
    },
    "1069": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "ADD",
      "path": "91"
    },
    "1070": {
      "op": "MSTORE"
    },
    "1071": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "1073": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1075": {
      "op": "DUP3"
    },
    "1076": {
      "op": "ADD"
    },
    "1077": {
      "op": "MSTORE"
    },
    "1078": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E636520666F"
    },
    "1111": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1113": {
      "op": "DUP3"
    },
    "1114": {
      "op": "ADD"
    },
    "1115": {
      "op": "MSTORE"
    },
    "1116": {
      "op": "PUSH6",
      "value": "0x1C8818D85B1B"
    },
    "1123": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "1125": {
      "op": "SHL"
    },
    "1126": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1128": {
      "op": "DUP3"
    },
    "1129": {
      "op": "ADD"
    },
    "1130": {
      "op": "MSTORE"
    },
    "1131": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1133": {
      "op": "ADD"
    },
    "1134": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "PUSH2",
      "path": "91",
      "value": "0x175"
    },
    "1137": {
      "op": "JUMP"
    },
    "1138": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "JUMPDEST",
      "path": "91"
    },
    "1139": {
      "fn": "Address.isContract",
      "offset": [
        1034,
        1054
      ],
      "op": "DUP5",
      "path": "91"
    },
    "1140": {
      "fn": "Address.isContract",
      "offset": [
        1034,
        1054
      ],
      "op": "EXTCODESIZE",
      "path": "91"
    },
    "1141": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "PUSH2",
      "path": "91",
      "statement": 10,
      "value": "0x4C0"
    },
    "1144": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "JUMPI",
      "path": "91"
    },
    "1145": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "PUSH1",
      "path": "91",
      "value": "0x40"
    },
    "1147": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "MLOAD",
      "path": "91"
    },
    "1148": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1152": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1154": {
      "op": "SHL"
    },
    "1155": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "DUP2",
      "path": "91"
    },
    "1156": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "MSTORE",
      "path": "91"
    },
    "1157": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1159": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "PUSH1",
      "path": "91",
      "value": "0x4"
    },
    "1161": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "DUP3",
      "path": "91"
    },
    "1162": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "ADD",
      "path": "91"
    },
    "1163": {
      "op": "MSTORE"
    },
    "1164": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "1166": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1168": {
      "op": "DUP3"
    },
    "1169": {
      "op": "ADD"
    },
    "1170": {
      "op": "MSTORE"
    },
    "1171": {
      "op": "PUSH32",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "1204": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1206": {
      "op": "DUP3"
    },
    "1207": {
      "op": "ADD"
    },
    "1208": {
      "op": "MSTORE"
    },
    "1209": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1211": {
      "op": "ADD"
    },
    "1212": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "PUSH2",
      "path": "91",
      "value": "0x175"
    },
    "1215": {
      "op": "JUMP"
    },
    "1216": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "JUMPDEST",
      "path": "91"
    },
    "1217": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4900,
        4912
      ],
      "op": "PUSH1",
      "path": "91",
      "value": "0x0"
    },
    "1219": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4914,
        4937
      ],
      "op": "DUP1",
      "path": "91"
    },
    "1220": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4947
      ],
      "op": "DUP7",
      "path": "91"
    },
    "1221": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1223": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1225": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1227": {
      "op": "SHL"
    },
    "1228": {
      "op": "SUB"
    },
    "1229": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4952
      ],
      "op": "AND",
      "path": "91"
    },
    "1230": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4960,
        4965
      ],
      "op": "DUP6",
      "path": "91"
    },
    "1231": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4967,
        4971
      ],
      "op": "DUP8",
      "path": "91"
    },
    "1232": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "91",
      "value": "0x40"
    },
    "1234": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MLOAD",
      "path": "91"
    },
    "1235": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH2",
      "path": "91",
      "value": "0x4DC"
    },
    "1238": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP2",
      "path": "91"
    },
    "1239": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP1",
      "path": "91"
    },
    "1240": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH2",
      "path": "91",
      "value": "0x5AD"
    },
    "1243": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMP",
      "path": "91"
    },
    "1244": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMPDEST",
      "path": "91"
    },
    "1245": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "91",
      "value": "0x0"
    },
    "1247": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "91",
      "value": "0x40"
    },
    "1249": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MLOAD",
      "path": "91"
    },
    "1250": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP1",
      "path": "91"
    },
    "1251": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP4",
      "path": "91"
    },
    "1252": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SUB",
      "path": "91"
    },
    "1253": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP2",
      "path": "91"
    },
    "1254": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP6",
      "path": "91"
    },
    "1255": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP8",
      "path": "91"
    },
    "1256": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "GAS",
      "path": "91"
    },
    "1257": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "CALL",
      "path": "91"
    },
    "1258": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP3",
      "path": "91"
    },
    "1259": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "91"
    },
    "1260": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "91"
    },
    "1261": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "91"
    },
    "1262": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATASIZE",
      "path": "91"
    },
    "1263": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP1",
      "path": "91"
    },
    "1264": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "91",
      "value": "0x0"
    },
    "1266": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP2",
      "path": "91"
    },
    "1267": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "EQ",
      "path": "91"
    },
    "1268": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH2",
      "path": "91",
      "value": "0x519"
    },
    "1271": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMPI",
      "path": "91"
    },
    "1272": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "91",
      "value": "0x40"
    },
    "1274": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MLOAD",
      "path": "91"
    },
    "1275": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP2",
      "path": "91"
    },
    "1276": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "91"
    },
    "1277": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "91",
      "value": "0x1F"
    },
    "1279": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "NOT",
      "path": "91"
    },
    "1280": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "91",
      "value": "0x3F"
    },
    "1282": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATASIZE",
      "path": "91"
    },
    "1283": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "ADD",
      "path": "91"
    },
    "1284": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "AND",
      "path": "91"
    },
    "1285": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP3",
      "path": "91"
    },
    "1286": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "ADD",
      "path": "91"
    },
    "1287": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "91",
      "value": "0x40"
    },
    "1289": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MSTORE",
      "path": "91"
    },
    "1290": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATASIZE",
      "path": "91"
    },
    "1291": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP3",
      "path": "91"
    },
    "1292": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MSTORE",
      "path": "91"
    },
    "1293": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATASIZE",
      "path": "91"
    },
    "1294": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "91",
      "value": "0x0"
    },
    "1296": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "91",
      "value": "0x20"
    },
    "1298": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP5",
      "path": "91"
    },
    "1299": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "ADD",
      "path": "91"
    },
    "1300": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATACOPY",
      "path": "91"
    },
    "1301": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH2",
      "path": "91",
      "value": "0x51E"
    },
    "1304": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMP",
      "path": "91"
    },
    "1305": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMPDEST",
      "path": "91"
    },
    "1306": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "91",
      "value": "0x60"
    },
    "1308": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP2",
      "path": "91"
    },
    "1309": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "91"
    },
    "1310": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMPDEST",
      "path": "91"
    },
    "1311": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "91"
    },
    "1312": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4899,
        4972
      ],
      "op": "SWAP2",
      "path": "91"
    },
    "1313": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4899,
        4972
      ],
      "op": "POP",
      "path": "91"
    },
    "1314": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4899,
        4972
      ],
      "op": "SWAP2",
      "path": "91"
    },
    "1315": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4899,
        4972
      ],
      "op": "POP",
      "path": "91"
    },
    "1316": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4989,
        5040
      ],
      "op": "PUSH2",
      "path": "91",
      "statement": 11,
      "value": "0x52E"
    },
    "1319": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5006,
        5013
      ],
      "op": "DUP3",
      "path": "91"
    },
    "1320": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5015,
        5025
      ],
      "op": "DUP3",
      "path": "91"
    },
    "1321": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5027,
        5039
      ],
      "op": "DUP7",
      "path": "91"
    },
    "1322": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4989,
        5005
      ],
      "op": "PUSH2",
      "path": "91",
      "value": "0x539"
    },
    "1325": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        4989,
        5040
      ],
      "op": "JUMP",
      "path": "91"
    },
    "1326": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4989,
        5040
      ],
      "op": "JUMPDEST",
      "path": "91"
    },
    "1327": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5040
      ],
      "op": "SWAP8",
      "path": "91"
    },
    "1328": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4548,
        5047
      ],
      "op": "SWAP7",
      "path": "91"
    },
    "1329": {
      "op": "POP"
    },
    "1330": {
      "op": "POP"
    },
    "1331": {
      "op": "POP"
    },
    "1332": {
      "op": "POP"
    },
    "1333": {
      "op": "POP"
    },
    "1334": {
      "op": "POP"
    },
    "1335": {
      "op": "POP"
    },
    "1336": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [
        4548,
        5047
      ],
      "op": "JUMP",
      "path": "91"
    },
    "1337": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7161,
        7853
      ],
      "op": "JUMPDEST",
      "path": "91"
    },
    "1338": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7307,
        7319
      ],
      "op": "PUSH1",
      "path": "91",
      "value": "0x60"
    },
    "1340": {
      "branch": 17,
      "fn": "Address.verifyCallResult",
      "offset": [
        7335,
        7342
      ],
      "op": "DUP4",
      "path": "91"
    },
    "1341": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7331,
        7847
      ],
      "op": "ISZERO",
      "path": "91"
    },
    "1342": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7331,
        7847
      ],
      "op": "PUSH2",
      "path": "91",
      "value": "0x548"
    },
    "1345": {
      "branch": 17,
      "fn": "Address.verifyCallResult",
      "offset": [
        7331,
        7847
      ],
      "op": "JUMPI",
      "path": "91"
    },
    "1346": {
      "op": "POP"
    },
    "1347": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7365,
        7375
      ],
      "op": "DUP2",
      "path": "91",
      "statement": 12
    },
    "1348": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7358,
        7375
      ],
      "op": "PUSH2",
      "path": "91",
      "value": "0x40A"
    },
    "1351": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7358,
        7375
      ],
      "op": "JUMP",
      "path": "91"
    },
    "1352": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7331,
        7847
      ],
      "op": "JUMPDEST",
      "path": "91"
    },
    "1353": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7476,
        7493
      ],
      "op": "DUP3",
      "path": "91"
    },
    "1354": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7476,
        7493
      ],
      "op": "MLOAD",
      "path": "91"
    },
    "1355": {
      "branch": 18,
      "fn": "Address.verifyCallResult",
      "offset": [
        7476,
        7497
      ],
      "op": "ISZERO",
      "path": "91"
    },
    "1356": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7472,
        7837
      ],
      "op": "PUSH2",
      "path": "91",
      "value": "0x558"
    },
    "1359": {
      "branch": 18,
      "fn": "Address.verifyCallResult",
      "offset": [
        7472,
        7837
      ],
      "op": "JUMPI",
      "path": "91"
    },
    "1360": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7670,
        7680
      ],
      "op": "DUP3",
      "path": "91"
    },
    "1361": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7664,
        7681
      ],
      "op": "MLOAD",
      "path": "91"
    },
    "1362": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7730,
        7745
      ],
      "op": "DUP1",
      "path": "91"
    },
    "1363": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7717,
        7727
      ],
      "op": "DUP5",
      "path": "91"
    },
    "1364": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7713,
        7715
      ],
      "op": "PUSH1",
      "path": "91",
      "value": "0x20"
    },
    "1366": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7709,
        7728
      ],
      "op": "ADD",
      "path": "91"
    },
    "1367": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7702,
        7746
      ],
      "op": "REVERT",
      "path": "91"
    },
    "1368": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7472,
        7837
      ],
      "op": "JUMPDEST",
      "path": "91"
    },
    "1369": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7809,
        7821
      ],
      "op": "DUP2",
      "path": "91",
      "statement": 13
    },
    "1370": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "PUSH1",
      "path": "91",
      "value": "0x40"
    },
    "1372": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "MLOAD",
      "path": "91"
    },
    "1373": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1377": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1379": {
      "op": "SHL"
    },
    "1380": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "DUP2",
      "path": "91"
    },
    "1381": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "MSTORE",
      "path": "91"
    },
    "1382": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "PUSH1",
      "path": "91",
      "value": "0x4"
    },
    "1384": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "ADD",
      "path": "91"
    },
    "1385": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "PUSH2",
      "path": "91",
      "value": "0x175"
    },
    "1388": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "SWAP2",
      "path": "91"
    },
    "1389": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "SWAP1",
      "path": "91"
    },
    "1390": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "PUSH2",
      "path": "91",
      "value": "0x5C9"
    },
    "1393": {
      "fn": "Address.verifyCallResult",
      "jump": "i",
      "offset": [
        7802,
        7822
      ],
      "op": "JUMP",
      "path": "91"
    },
    "1394": {
      "op": "JUMPDEST"
    },
    "1395": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1397": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1399": {
      "op": "DUP3"
    },
    "1400": {
      "op": "DUP5"
    },
    "1401": {
      "op": "SUB"
    },
    "1402": {
      "op": "SLT"
    },
    "1403": {
      "op": "ISZERO"
    },
    "1404": {
      "op": "PUSH2",
      "value": "0x584"
    },
    "1407": {
      "op": "JUMPI"
    },
    "1408": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1410": {
      "op": "DUP1"
    },
    "1411": {
      "op": "REVERT"
    },
    "1412": {
      "op": "JUMPDEST"
    },
    "1413": {
      "op": "DUP2"
    },
    "1414": {
      "op": "MLOAD"
    },
    "1415": {
      "op": "DUP1"
    },
    "1416": {
      "op": "ISZERO"
    },
    "1417": {
      "op": "ISZERO"
    },
    "1418": {
      "op": "DUP2"
    },
    "1419": {
      "op": "EQ"
    },
    "1420": {
      "op": "PUSH2",
      "value": "0x40A"
    },
    "1423": {
      "op": "JUMPI"
    },
    "1424": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1426": {
      "op": "DUP1"
    },
    "1427": {
      "op": "REVERT"
    },
    "1428": {
      "op": "JUMPDEST"
    },
    "1429": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1431": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1433": {
      "op": "DUP3"
    },
    "1434": {
      "op": "DUP5"
    },
    "1435": {
      "op": "SUB"
    },
    "1436": {
      "op": "SLT"
    },
    "1437": {
      "op": "ISZERO"
    },
    "1438": {
      "op": "PUSH2",
      "value": "0x5A6"
    },
    "1441": {
      "op": "JUMPI"
    },
    "1442": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1444": {
      "op": "DUP1"
    },
    "1445": {
      "op": "REVERT"
    },
    "1446": {
      "op": "JUMPDEST"
    },
    "1447": {
      "op": "POP"
    },
    "1448": {
      "op": "MLOAD"
    },
    "1449": {
      "op": "SWAP2"
    },
    "1450": {
      "op": "SWAP1"
    },
    "1451": {
      "op": "POP"
    },
    "1452": {
      "jump": "o",
      "op": "JUMP"
    },
    "1453": {
      "op": "JUMPDEST"
    },
    "1454": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1456": {
      "op": "DUP3"
    },
    "1457": {
      "op": "MLOAD"
    },
    "1458": {
      "op": "PUSH2",
      "value": "0x5BF"
    },
    "1461": {
      "op": "DUP2"
    },
    "1462": {
      "op": "DUP5"
    },
    "1463": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1465": {
      "op": "DUP8"
    },
    "1466": {
      "op": "ADD"
    },
    "1467": {
      "op": "PUSH2",
      "value": "0x5FC"
    },
    "1470": {
      "jump": "i",
      "op": "JUMP"
    },
    "1471": {
      "op": "JUMPDEST"
    },
    "1472": {
      "op": "SWAP2"
    },
    "1473": {
      "op": "SWAP1"
    },
    "1474": {
      "op": "SWAP2"
    },
    "1475": {
      "op": "ADD"
    },
    "1476": {
      "op": "SWAP3"
    },
    "1477": {
      "op": "SWAP2"
    },
    "1478": {
      "op": "POP"
    },
    "1479": {
      "op": "POP"
    },
    "1480": {
      "jump": "o",
      "op": "JUMP"
    },
    "1481": {
      "op": "JUMPDEST"
    },
    "1482": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1484": {
      "op": "DUP2"
    },
    "1485": {
      "op": "MSTORE"
    },
    "1486": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1488": {
      "op": "DUP3"
    },
    "1489": {
      "op": "MLOAD"
    },
    "1490": {
      "op": "DUP1"
    },
    "1491": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1493": {
      "op": "DUP5"
    },
    "1494": {
      "op": "ADD"
    },
    "1495": {
      "op": "MSTORE"
    },
    "1496": {
      "op": "PUSH2",
      "value": "0x5E8"
    },
    "1499": {
      "op": "DUP2"
    },
    "1500": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1502": {
      "op": "DUP6"
    },
    "1503": {
      "op": "ADD"
    },
    "1504": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1506": {
      "op": "DUP8"
    },
    "1507": {
      "op": "ADD"
    },
    "1508": {
      "op": "PUSH2",
      "value": "0x5FC"
    },
    "1511": {
      "jump": "i",
      "op": "JUMP"
    },
    "1512": {
      "op": "JUMPDEST"
    },
    "1513": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1515": {
      "op": "ADD"
    },
    "1516": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1518": {
      "op": "NOT"
    },
    "1519": {
      "op": "AND"
    },
    "1520": {
      "op": "SWAP2"
    },
    "1521": {
      "op": "SWAP1"
    },
    "1522": {
      "op": "SWAP2"
    },
    "1523": {
      "op": "ADD"
    },
    "1524": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1526": {
      "op": "ADD"
    },
    "1527": {
      "op": "SWAP3"
    },
    "1528": {
      "op": "SWAP2"
    },
    "1529": {
      "op": "POP"
    },
    "1530": {
      "op": "POP"
    },
    "1531": {
      "jump": "o",
      "op": "JUMP"
    },
    "1532": {
      "op": "JUMPDEST"
    },
    "1533": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1535": {
      "op": "JUMPDEST"
    },
    "1536": {
      "op": "DUP4"
    },
    "1537": {
      "op": "DUP2"
    },
    "1538": {
      "op": "LT"
    },
    "1539": {
      "op": "ISZERO"
    },
    "1540": {
      "op": "PUSH2",
      "value": "0x617"
    },
    "1543": {
      "op": "JUMPI"
    },
    "1544": {
      "op": "DUP2"
    },
    "1545": {
      "op": "DUP2"
    },
    "1546": {
      "op": "ADD"
    },
    "1547": {
      "op": "MLOAD"
    },
    "1548": {
      "op": "DUP4"
    },
    "1549": {
      "op": "DUP3"
    },
    "1550": {
      "op": "ADD"
    },
    "1551": {
      "op": "MSTORE"
    },
    "1552": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1554": {
      "op": "ADD"
    },
    "1555": {
      "op": "PUSH2",
      "value": "0x5FF"
    },
    "1558": {
      "op": "JUMP"
    },
    "1559": {
      "op": "JUMPDEST"
    },
    "1560": {
      "op": "DUP4"
    },
    "1561": {
      "op": "DUP2"
    },
    "1562": {
      "op": "GT"
    },
    "1563": {
      "op": "ISZERO"
    },
    "1564": {
      "op": "PUSH2",
      "value": "0x626"
    },
    "1567": {
      "op": "JUMPI"
    },
    "1568": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1570": {
      "op": "DUP5"
    },
    "1571": {
      "op": "DUP5"
    },
    "1572": {
      "op": "ADD"
    },
    "1573": {
      "op": "MSTORE"
    },
    "1574": {
      "op": "JUMPDEST"
    },
    "1575": {
      "op": "POP"
    },
    "1576": {
      "op": "POP"
    },
    "1577": {
      "op": "POP"
    },
    "1578": {
      "op": "POP"
    },
    "1579": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "d2c70088e6c3d6fcc63a7a4a8a3d72df1f49d842",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./SafeERC20.sol\";\n\n/**\n * @dev A token holder contract that will allow a beneficiary to extract the\n * tokens after a given release time.\n *\n * Useful for simple vesting schedules like \"advisors get all of their tokens\n * after 1 year\".\n */\ncontract TokenTimelock {\n    using SafeERC20 for IERC20;\n\n    // ERC20 basic token contract being held\n    IERC20 private immutable _token;\n\n    // beneficiary of tokens after they are released\n    address private immutable _beneficiary;\n\n    // timestamp when token release is enabled\n    uint256 private immutable _releaseTime;\n\n    constructor(\n        IERC20 token_,\n        address beneficiary_,\n        uint256 releaseTime_\n    ) {\n        require(releaseTime_ > block.timestamp, \"TokenTimelock: release time is before current time\");\n        _token = token_;\n        _beneficiary = beneficiary_;\n        _releaseTime = releaseTime_;\n    }\n\n    /**\n     * @return the token being held.\n     */\n    function token() public view virtual returns (IERC20) {\n        return _token;\n    }\n\n    /**\n     * @return the beneficiary of the tokens.\n     */\n    function beneficiary() public view virtual returns (address) {\n        return _beneficiary;\n    }\n\n    /**\n     * @return the time when the tokens are released.\n     */\n    function releaseTime() public view virtual returns (uint256) {\n        return _releaseTime;\n    }\n\n    /**\n     * @notice Transfers tokens held by timelock to beneficiary.\n     */\n    function release() public virtual {\n        require(block.timestamp >= releaseTime(), \"TokenTimelock: current time is before release time\");\n\n        uint256 amount = token().balanceOf(address(this));\n        require(amount > 0, \"TokenTimelock: no tokens to release\");\n\n        token().safeTransfer(beneficiary(), amount);\n    }\n}\n",
  "sourceMap": "307:1543:74:-:0;;;642:310;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;776:15;761:12;:30;753:93;;;;-1:-1:-1;;;753:93:74;;682:2:121;753:93:74;;;664:21:121;721:2;701:18;;;694:30;760:34;740:18;;;733:62;-1:-1:-1;;;811:18:121;;;804:48;869:19;;753:93:74;;;;;;;;-1:-1:-1;;;;;;856:15:74;;;;;;;;881:27;;;;;;;918;;307:1543;;14:461:121;117:6;125;133;186:2;174:9;165:7;161:23;157:32;154:2;;;202:1;199;192:12;154:2;234:9;228:16;253:31;278:5;253:31;:::i;:::-;353:2;338:18;;332:25;303:5;;-1:-1:-1;366:33:121;332:25;366:33;:::i;:::-;418:7;408:17;;;465:2;454:9;450:18;444:25;434:35;;144:331;;;;;:::o;899:131::-;-1:-1:-1;;;;;974:31:121;;964:42;;954:2;;1020:1;1017;1010:12;954:2;944:86;:::o;:::-;307:1543:74;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/node_modules/@openzeppelin/contracts/token/ERC20/utils/TokenTimelock.sol",
  "type": "contract"
}