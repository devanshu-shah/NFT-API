{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "payees",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "shares_",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "PayeeAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "PaymentReceived",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "PaymentReleased",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "payee",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "release",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "released",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "shares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalReleased",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "7": "contracts/node_modules/@openzeppelin/contracts/finance/PaymentSplitter.sol",
    "91": "contracts/node_modules/@openzeppelin/contracts/utils/Address.sol",
    "93": "contracts/node_modules/@openzeppelin/contracts/utils/Context.sol"
  },
  "ast": {
    "absolutePath": "contracts/node_modules/@openzeppelin/contracts/finance/PaymentSplitter.sol",
    "exportedSymbols": {
      "Address": [
        15074
      ],
      "Context": [
        15181
      ],
      "PaymentSplitter": [
        1037
      ],
      "SafeMath": [
        18108
      ]
    },
    "id": 1038,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 744,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:7"
      },
      {
        "absolutePath": "contracts/node_modules/@openzeppelin/contracts/utils/Address.sol",
        "file": "../utils/Address.sol",
        "id": 745,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1038,
        "sourceUnit": 15075,
        "src": "58:30:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/node_modules/@openzeppelin/contracts/utils/Context.sol",
        "file": "../utils/Context.sol",
        "id": 746,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1038,
        "sourceUnit": 15182,
        "src": "89:30:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "../utils/math/SafeMath.sol",
        "id": 747,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1038,
        "sourceUnit": 18109,
        "src": "120:36:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 749,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 15181,
              "src": "1009:7:7"
            },
            "id": 750,
            "nodeType": "InheritanceSpecifier",
            "src": "1009:7:7"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 748,
          "nodeType": "StructuredDocumentation",
          "src": "158:822:7",
          "text": " @title PaymentSplitter\n @dev This contract allows to split Ether payments among a group of accounts. The sender does not need to be aware\n that the Ether will be split in this way, since it is handled transparently by the contract.\n The split can be in equal parts or in any other arbitrary proportion. The way this is specified is by assigning each\n account to a number of shares. Of all the Ether that this contract receives, each account will then be able to claim\n an amount proportional to the percentage of total shares they were assigned.\n `PaymentSplitter` follows a _pull payment_ model. This means that payments are not automatically forwarded to the\n accounts but kept in this contract, and the actual transfer is triggered as a separate step by calling the {release}\n function."
        },
        "fullyImplemented": true,
        "id": 1037,
        "linearizedBaseContracts": [
          1037,
          15181
        ],
        "name": "PaymentSplitter",
        "nameLocation": "990:15:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "id": 756,
            "name": "PayeeAdded",
            "nameLocation": "1029:10:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 755,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 752,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1048:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 756,
                  "src": "1040:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 751,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1040:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 754,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "1065:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 756,
                  "src": "1057:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 753,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1057:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1039:33:7"
            },
            "src": "1023:50:7"
          },
          {
            "anonymous": false,
            "id": 762,
            "name": "PaymentReleased",
            "nameLocation": "1084:15:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 761,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 758,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1108:2:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 762,
                  "src": "1100:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 757,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1100:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 760,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1120:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 762,
                  "src": "1112:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 759,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1112:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1099:28:7"
            },
            "src": "1078:50:7"
          },
          {
            "anonymous": false,
            "id": 768,
            "name": "PaymentReceived",
            "nameLocation": "1139:15:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 767,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 764,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "1163:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 768,
                  "src": "1155:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 763,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1155:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 766,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1177:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 768,
                  "src": "1169:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 765,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1169:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1154:30:7"
            },
            "src": "1133:52:7"
          },
          {
            "constant": false,
            "id": 770,
            "mutability": "mutable",
            "name": "_totalShares",
            "nameLocation": "1207:12:7",
            "nodeType": "VariableDeclaration",
            "scope": 1037,
            "src": "1191:28:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 769,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1191:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 772,
            "mutability": "mutable",
            "name": "_totalReleased",
            "nameLocation": "1241:14:7",
            "nodeType": "VariableDeclaration",
            "scope": 1037,
            "src": "1225:30:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 771,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1225:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 776,
            "mutability": "mutable",
            "name": "_shares",
            "nameLocation": "1298:7:7",
            "nodeType": "VariableDeclaration",
            "scope": 1037,
            "src": "1262:43:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 775,
              "keyType": {
                "id": 773,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1270:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1262:27:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 774,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1281:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 780,
            "mutability": "mutable",
            "name": "_released",
            "nameLocation": "1347:9:7",
            "nodeType": "VariableDeclaration",
            "scope": 1037,
            "src": "1311:45:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 779,
              "keyType": {
                "id": 777,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1319:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1311:27:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 778,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1330:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 783,
            "mutability": "mutable",
            "name": "_payees",
            "nameLocation": "1380:7:7",
            "nodeType": "VariableDeclaration",
            "scope": 1037,
            "src": "1362:25:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 781,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1362:7:7",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 782,
              "nodeType": "ArrayTypeName",
              "src": "1362:9:7",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 832,
              "nodeType": "Block",
              "src": "1811:288:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 794,
                            "name": "payees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 787,
                            "src": "1829:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 795,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1829:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 796,
                            "name": "shares_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 790,
                            "src": "1846:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 797,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1846:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1829:31:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061796d656e7453706c69747465723a2070617965657320616e6420736861726573206c656e677468206d69736d61746368",
                        "id": 799,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1862:52:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a5e39d6690ea50b22e040fe9ba22acf868e3d7f78e6ca8dc7ae3224a0aade89f",
                          "typeString": "literal_string \"PaymentSplitter: payees and shares length mismatch\""
                        },
                        "value": "PaymentSplitter: payees and shares length mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a5e39d6690ea50b22e040fe9ba22acf868e3d7f78e6ca8dc7ae3224a0aade89f",
                          "typeString": "literal_string \"PaymentSplitter: payees and shares length mismatch\""
                        }
                      ],
                      "id": 793,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1821:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1821:94:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 801,
                  "nodeType": "ExpressionStatement",
                  "src": "1821:94:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 803,
                            "name": "payees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 787,
                            "src": "1933:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 804,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1933:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 805,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1949:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1933:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061796d656e7453706c69747465723a206e6f20706179656573",
                        "id": 807,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1952:28:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f1437b0f4053e38629626a98d8100226576b62fcebc211e7a49225bd05994643",
                          "typeString": "literal_string \"PaymentSplitter: no payees\""
                        },
                        "value": "PaymentSplitter: no payees"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f1437b0f4053e38629626a98d8100226576b62fcebc211e7a49225bd05994643",
                          "typeString": "literal_string \"PaymentSplitter: no payees\""
                        }
                      ],
                      "id": 802,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1925:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1925:56:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 809,
                  "nodeType": "ExpressionStatement",
                  "src": "1925:56:7"
                },
                {
                  "body": {
                    "id": 830,
                    "nodeType": "Block",
                    "src": "2036:57:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 822,
                                "name": "payees",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 787,
                                "src": "2060:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 824,
                              "indexExpression": {
                                "id": 823,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 811,
                                "src": "2067:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2060:9:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 825,
                                "name": "shares_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 790,
                                "src": "2071:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 827,
                              "indexExpression": {
                                "id": 826,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 811,
                                "src": "2079:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2071:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 821,
                            "name": "_addPayee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1036,
                            "src": "2050:9:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 828,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2050:32:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 829,
                        "nodeType": "ExpressionStatement",
                        "src": "2050:32:7"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 814,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 811,
                      "src": "2012:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 815,
                        "name": "payees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 787,
                        "src": "2016:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 816,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2016:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2012:17:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 831,
                  "initializationExpression": {
                    "assignments": [
                      811
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 811,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2005:1:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 831,
                        "src": "1997:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 810,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1997:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 813,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 812,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2009:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1997:13:7"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 819,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2031:3:7",
                      "subExpression": {
                        "id": 818,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 811,
                        "src": "2031:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 820,
                    "nodeType": "ExpressionStatement",
                    "src": "2031:3:7"
                  },
                  "nodeType": "ForStatement",
                  "src": "1992:101:7"
                }
              ]
            },
            "documentation": {
              "id": 784,
              "nodeType": "StructuredDocumentation",
              "src": "1394:341:7",
              "text": " @dev Creates an instance of `PaymentSplitter` where each account in `payees` is assigned the number of shares at\n the matching position in the `shares` array.\n All addresses in `payees` must be non-zero. Both arrays must have the same non-zero length, and there must be no\n duplicates in `payees`."
            },
            "id": 833,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 791,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 787,
                  "mutability": "mutable",
                  "name": "payees",
                  "nameLocation": "1769:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 833,
                  "src": "1752:23:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 785,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1752:7:7",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 786,
                    "nodeType": "ArrayTypeName",
                    "src": "1752:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 790,
                  "mutability": "mutable",
                  "name": "shares_",
                  "nameLocation": "1794:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 833,
                  "src": "1777:24:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 788,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1777:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 789,
                    "nodeType": "ArrayTypeName",
                    "src": "1777:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1751:51:7"
            },
            "returnParameters": {
              "id": 792,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1811:0:7"
            },
            "scope": 1037,
            "src": "1740:359:7",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 844,
              "nodeType": "Block",
              "src": "2646:62:7",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 838,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15171,
                          "src": "2677:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2677:12:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 840,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2691:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "2691:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 837,
                      "name": "PaymentReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 768,
                      "src": "2661:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2661:40:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 843,
                  "nodeType": "EmitStatement",
                  "src": "2656:45:7"
                }
              ]
            },
            "documentation": {
              "id": 834,
              "nodeType": "StructuredDocumentation",
              "src": "2105:501:7",
              "text": " @dev The Ether received will be logged with {PaymentReceived} events. Note that these events are not fully\n reliable: it's possible for a contract to receive Ether without triggering this function. This only affects the\n reliability of the events, and not the actual splitting of Ether.\n To learn more about this see the Solidity documentation for\n https://solidity.readthedocs.io/en/latest/contracts.html#fallback-function[fallback\n functions]."
            },
            "id": 845,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 835,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2618:2:7"
            },
            "returnParameters": {
              "id": 836,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2646:0:7"
            },
            "scope": 1037,
            "src": "2611:97:7",
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": {
              "id": 853,
              "nodeType": "Block",
              "src": "2839:36:7",
              "statements": [
                {
                  "expression": {
                    "id": 851,
                    "name": "_totalShares",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 770,
                    "src": "2856:12:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 850,
                  "id": 852,
                  "nodeType": "Return",
                  "src": "2849:19:7"
                }
              ]
            },
            "documentation": {
              "id": 846,
              "nodeType": "StructuredDocumentation",
              "src": "2714:67:7",
              "text": " @dev Getter for the total shares held by payees."
            },
            "functionSelector": "3a98ef39",
            "id": 854,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalShares",
            "nameLocation": "2795:11:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 847,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2806:2:7"
            },
            "returnParameters": {
              "id": 850,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 849,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 854,
                  "src": "2830:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 848,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2830:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2829:9:7"
            },
            "scope": 1037,
            "src": "2786:89:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 862,
              "nodeType": "Block",
              "src": "3019:38:7",
              "statements": [
                {
                  "expression": {
                    "id": 860,
                    "name": "_totalReleased",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 772,
                    "src": "3036:14:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 859,
                  "id": 861,
                  "nodeType": "Return",
                  "src": "3029:21:7"
                }
              ]
            },
            "documentation": {
              "id": 855,
              "nodeType": "StructuredDocumentation",
              "src": "2881:78:7",
              "text": " @dev Getter for the total amount of Ether already released."
            },
            "functionSelector": "e33b7de3",
            "id": 863,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalReleased",
            "nameLocation": "2973:13:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 856,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2986:2:7"
            },
            "returnParameters": {
              "id": 859,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 858,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 863,
                  "src": "3010:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 857,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3010:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3009:9:7"
            },
            "scope": 1037,
            "src": "2964:93:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 875,
              "nodeType": "Block",
              "src": "3206:40:7",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 871,
                      "name": "_shares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 776,
                      "src": "3223:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 873,
                    "indexExpression": {
                      "id": 872,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 866,
                      "src": "3231:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3223:16:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 870,
                  "id": 874,
                  "nodeType": "Return",
                  "src": "3216:23:7"
                }
              ]
            },
            "documentation": {
              "id": 864,
              "nodeType": "StructuredDocumentation",
              "src": "3063:75:7",
              "text": " @dev Getter for the amount of shares held by an account."
            },
            "functionSelector": "ce7c2ac2",
            "id": 876,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "shares",
            "nameLocation": "3152:6:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 867,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 866,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3167:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 876,
                  "src": "3159:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 865,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3159:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3158:17:7"
            },
            "returnParameters": {
              "id": 870,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 869,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 876,
                  "src": "3197:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 868,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3197:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3196:9:7"
            },
            "scope": 1037,
            "src": "3143:103:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 888,
              "nodeType": "Block",
              "src": "3405:42:7",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 884,
                      "name": "_released",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 780,
                      "src": "3422:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 886,
                    "indexExpression": {
                      "id": 885,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 879,
                      "src": "3432:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3422:18:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 883,
                  "id": 887,
                  "nodeType": "Return",
                  "src": "3415:25:7"
                }
              ]
            },
            "documentation": {
              "id": 877,
              "nodeType": "StructuredDocumentation",
              "src": "3252:83:7",
              "text": " @dev Getter for the amount of Ether already released to a payee."
            },
            "functionSelector": "9852595c",
            "id": 889,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "released",
            "nameLocation": "3349:8:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 880,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 879,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3366:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 889,
                  "src": "3358:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 878,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3358:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3357:17:7"
            },
            "returnParameters": {
              "id": 883,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 882,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 889,
                  "src": "3396:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 881,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3396:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3395:9:7"
            },
            "scope": 1037,
            "src": "3340:107:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 901,
              "nodeType": "Block",
              "src": "3593:38:7",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 897,
                      "name": "_payees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 783,
                      "src": "3610:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 899,
                    "indexExpression": {
                      "id": 898,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 892,
                      "src": "3618:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3610:14:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 896,
                  "id": 900,
                  "nodeType": "Return",
                  "src": "3603:21:7"
                }
              ]
            },
            "documentation": {
              "id": 890,
              "nodeType": "StructuredDocumentation",
              "src": "3453:75:7",
              "text": " @dev Getter for the address of the payee number `index`."
            },
            "functionSelector": "8b83209b",
            "id": 902,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "payee",
            "nameLocation": "3542:5:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 893,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 892,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "3556:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 902,
                  "src": "3548:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 891,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3548:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3547:15:7"
            },
            "returnParameters": {
              "id": 896,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 895,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 902,
                  "src": "3584:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 894,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3584:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3583:9:7"
            },
            "scope": 1037,
            "src": "3533:98:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 977,
              "nodeType": "Block",
              "src": "3882:543:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 913,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 909,
                            "name": "_shares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 776,
                            "src": "3900:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 911,
                          "indexExpression": {
                            "id": 910,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 905,
                            "src": "3908:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3900:16:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 912,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3919:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3900:20:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061796d656e7453706c69747465723a206163636f756e7420686173206e6f20736861726573",
                        "id": 914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3922:40:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_41702911e7fdf9741c61509216c070cb4be5837176954fb37acaf958eaff82dd",
                          "typeString": "literal_string \"PaymentSplitter: account has no shares\""
                        },
                        "value": "PaymentSplitter: account has no shares"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_41702911e7fdf9741c61509216c070cb4be5837176954fb37acaf958eaff82dd",
                          "typeString": "literal_string \"PaymentSplitter: account has no shares\""
                        }
                      ],
                      "id": 908,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3892:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3892:71:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 916,
                  "nodeType": "ExpressionStatement",
                  "src": "3892:71:7"
                },
                {
                  "assignments": [
                    918
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 918,
                      "mutability": "mutable",
                      "name": "totalReceived",
                      "nameLocation": "3982:13:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 977,
                      "src": "3974:21:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 917,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3974:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 926,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 921,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4006:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PaymentSplitter_$1037",
                              "typeString": "contract PaymentSplitter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PaymentSplitter_$1037",
                              "typeString": "contract PaymentSplitter"
                            }
                          ],
                          "id": 920,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3998:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 919,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3998:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 922,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3998:13:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 923,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "src": "3998:21:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 924,
                      "name": "_totalReleased",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 772,
                      "src": "4022:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3998:38:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3974:62:7"
                },
                {
                  "assignments": [
                    928
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 928,
                      "mutability": "mutable",
                      "name": "payment",
                      "nameLocation": "4054:7:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 977,
                      "src": "4046:15:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 927,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4046:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 941,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 940,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 936,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 933,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 929,
                              "name": "totalReceived",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 918,
                              "src": "4065:13:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "baseExpression": {
                                "id": 930,
                                "name": "_shares",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 776,
                                "src": "4081:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 932,
                              "indexExpression": {
                                "id": 931,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 905,
                                "src": "4089:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4081:16:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4065:32:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 934,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "4064:34:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "id": 935,
                        "name": "_totalShares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 770,
                        "src": "4101:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4064:49:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "baseExpression": {
                        "id": 937,
                        "name": "_released",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 780,
                        "src": "4116:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 939,
                      "indexExpression": {
                        "id": 938,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 905,
                        "src": "4126:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4116:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4064:70:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4046:88:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 943,
                          "name": "payment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 928,
                          "src": "4153:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 944,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4164:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4153:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061796d656e7453706c69747465723a206163636f756e74206973206e6f7420647565207061796d656e74",
                        "id": 946,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4167:45:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_57f87f0ebf27afe0d68884e28202f547fd6c4ce1b7243f1356690df65e0fa2e4",
                          "typeString": "literal_string \"PaymentSplitter: account is not due payment\""
                        },
                        "value": "PaymentSplitter: account is not due payment"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_57f87f0ebf27afe0d68884e28202f547fd6c4ce1b7243f1356690df65e0fa2e4",
                          "typeString": "literal_string \"PaymentSplitter: account is not due payment\""
                        }
                      ],
                      "id": 942,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4145:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4145:68:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 948,
                  "nodeType": "ExpressionStatement",
                  "src": "4145:68:7"
                },
                {
                  "expression": {
                    "id": 957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 949,
                        "name": "_released",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 780,
                        "src": "4224:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 951,
                      "indexExpression": {
                        "id": 950,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 905,
                        "src": "4234:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4224:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 956,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 952,
                          "name": "_released",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 780,
                          "src": "4245:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 954,
                        "indexExpression": {
                          "id": 953,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 905,
                          "src": "4255:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4245:18:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 955,
                        "name": "payment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 928,
                        "src": "4266:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4245:28:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4224:49:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 958,
                  "nodeType": "ExpressionStatement",
                  "src": "4224:49:7"
                },
                {
                  "expression": {
                    "id": 963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 959,
                      "name": "_totalReleased",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 772,
                      "src": "4283:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 962,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 960,
                        "name": "_totalReleased",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 772,
                        "src": "4300:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 961,
                        "name": "payment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 928,
                        "src": "4317:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4300:24:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4283:41:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 964,
                  "nodeType": "ExpressionStatement",
                  "src": "4283:41:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 968,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 905,
                        "src": "4353:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 969,
                        "name": "payment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 928,
                        "src": "4362:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 965,
                        "name": "Address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15074,
                        "src": "4335:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Address_$15074_$",
                          "typeString": "type(library Address)"
                        }
                      },
                      "id": 967,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sendValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14831,
                      "src": "4335:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$",
                        "typeString": "function (address payable,uint256)"
                      }
                    },
                    "id": 970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4335:35:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 971,
                  "nodeType": "ExpressionStatement",
                  "src": "4335:35:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 973,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 905,
                        "src": "4401:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 974,
                        "name": "payment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 928,
                        "src": "4410:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 972,
                      "name": "PaymentReleased",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 762,
                      "src": "4385:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4385:33:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 976,
                  "nodeType": "EmitStatement",
                  "src": "4380:38:7"
                }
              ]
            },
            "documentation": {
              "id": 903,
              "nodeType": "StructuredDocumentation",
              "src": "3637:183:7",
              "text": " @dev Triggers a transfer to `account` of the amount of Ether they are owed, according to their percentage of the\n total shares and their previous withdrawals."
            },
            "functionSelector": "19165587",
            "id": 978,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "release",
            "nameLocation": "3834:7:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 906,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 905,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3858:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 978,
                  "src": "3842:23:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 904,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3842:15:7",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3841:25:7"
            },
            "returnParameters": {
              "id": 907,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3882:0:7"
            },
            "scope": 1037,
            "src": "3825:600:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1035,
              "nodeType": "Block",
              "src": "4671:403:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 987,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 981,
                          "src": "4689:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 990,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4708:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 989,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4700:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 988,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4700:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 991,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4700:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4689:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061796d656e7453706c69747465723a206163636f756e7420697320746865207a65726f2061646472657373",
                        "id": 993,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4712:46:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_22db6c622fd62a15ab5fca8fc78156905c4f1b5914d7d1db97b192b87e8c816b",
                          "typeString": "literal_string \"PaymentSplitter: account is the zero address\""
                        },
                        "value": "PaymentSplitter: account is the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_22db6c622fd62a15ab5fca8fc78156905c4f1b5914d7d1db97b192b87e8c816b",
                          "typeString": "literal_string \"PaymentSplitter: account is the zero address\""
                        }
                      ],
                      "id": 986,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4681:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4681:78:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 995,
                  "nodeType": "ExpressionStatement",
                  "src": "4681:78:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 997,
                          "name": "shares_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 983,
                          "src": "4777:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 998,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4787:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4777:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061796d656e7453706c69747465723a20736861726573206172652030",
                        "id": 1000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4790:31:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f9c1be4d5245e2b1590d7367c9c09f1ac5365954d05fed4172915681bdc80ed4",
                          "typeString": "literal_string \"PaymentSplitter: shares are 0\""
                        },
                        "value": "PaymentSplitter: shares are 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f9c1be4d5245e2b1590d7367c9c09f1ac5365954d05fed4172915681bdc80ed4",
                          "typeString": "literal_string \"PaymentSplitter: shares are 0\""
                        }
                      ],
                      "id": 996,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4769:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4769:53:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1002,
                  "nodeType": "ExpressionStatement",
                  "src": "4769:53:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1008,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 1004,
                            "name": "_shares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 776,
                            "src": "4840:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1006,
                          "indexExpression": {
                            "id": 1005,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 981,
                            "src": "4848:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4840:16:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1007,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4860:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4840:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061796d656e7453706c69747465723a206163636f756e7420616c72656164792068617320736861726573",
                        "id": 1009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4863:45:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_df40dd957dfb1d655a61a3d20a7083773a63031454719eb1eb83074b56cf5635",
                          "typeString": "literal_string \"PaymentSplitter: account already has shares\""
                        },
                        "value": "PaymentSplitter: account already has shares"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_df40dd957dfb1d655a61a3d20a7083773a63031454719eb1eb83074b56cf5635",
                          "typeString": "literal_string \"PaymentSplitter: account already has shares\""
                        }
                      ],
                      "id": 1003,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4832:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4832:77:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1011,
                  "nodeType": "ExpressionStatement",
                  "src": "4832:77:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1015,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 981,
                        "src": "4933:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1012,
                        "name": "_payees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 783,
                        "src": "4920:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1014,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4920:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 1016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4920:21:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1017,
                  "nodeType": "ExpressionStatement",
                  "src": "4920:21:7"
                },
                {
                  "expression": {
                    "id": 1022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1018,
                        "name": "_shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 776,
                        "src": "4951:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1020,
                      "indexExpression": {
                        "id": 1019,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 981,
                        "src": "4959:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4951:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1021,
                      "name": "shares_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 983,
                      "src": "4970:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4951:26:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1023,
                  "nodeType": "ExpressionStatement",
                  "src": "4951:26:7"
                },
                {
                  "expression": {
                    "id": 1028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1024,
                      "name": "_totalShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 770,
                      "src": "4987:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1027,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1025,
                        "name": "_totalShares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 770,
                        "src": "5002:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 1026,
                        "name": "shares_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 983,
                        "src": "5017:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5002:22:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4987:37:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1029,
                  "nodeType": "ExpressionStatement",
                  "src": "4987:37:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1031,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 981,
                        "src": "5050:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1032,
                        "name": "shares_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 983,
                        "src": "5059:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1030,
                      "name": "PayeeAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 756,
                      "src": "5039:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5039:28:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1034,
                  "nodeType": "EmitStatement",
                  "src": "5034:33:7"
                }
              ]
            },
            "documentation": {
              "id": 979,
              "nodeType": "StructuredDocumentation",
              "src": "4431:174:7",
              "text": " @dev Add a new payee to the contract.\n @param account The address of the payee to add.\n @param shares_ The number of shares owned by the payee."
            },
            "id": 1036,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_addPayee",
            "nameLocation": "4619:9:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 984,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 981,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "4637:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1036,
                  "src": "4629:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 980,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4629:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 983,
                  "mutability": "mutable",
                  "name": "shares_",
                  "nameLocation": "4654:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1036,
                  "src": "4646:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 982,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4646:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4628:34:7"
            },
            "returnParameters": {
              "id": 985,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4671:0:7"
            },
            "scope": 1037,
            "src": "4610:464:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 1038,
        "src": "981:4095:7",
        "usedErrors": []
      }
    ],
    "src": "33:5044:7"
  },
  "bytecode": "608060405260405162000b7e38038062000b7e8339810160408190526200002691620003c6565b8051825114620000985760405162461bcd60e51b815260206004820152603260248201527f5061796d656e7453706c69747465723a2070617965657320616e6420736861726044820152710cae640d8cadccee8d040dad2e6dac2e8c6d60731b60648201526084015b60405180910390fd5b6000825111620000eb5760405162461bcd60e51b815260206004820152601a60248201527f5061796d656e7453706c69747465723a206e6f2070617965657300000000000060448201526064016200008f565b60005b825181101562000157576200014283828151811062000111576200011162000552565b60200260200101518383815181106200012e576200012e62000552565b60200260200101516200016060201b60201c565b806200014e816200051e565b915050620000ee565b5050506200057e565b6001600160a01b038216620001cd5760405162461bcd60e51b815260206004820152602c60248201527f5061796d656e7453706c69747465723a206163636f756e74206973207468652060448201526b7a65726f206164647265737360a01b60648201526084016200008f565b600081116200021f5760405162461bcd60e51b815260206004820152601d60248201527f5061796d656e7453706c69747465723a2073686172657320617265203000000060448201526064016200008f565b6001600160a01b038216600090815260026020526040902054156200029b5760405162461bcd60e51b815260206004820152602b60248201527f5061796d656e7453706c69747465723a206163636f756e7420616c726561647960448201526a206861732073686172657360a81b60648201526084016200008f565b60048054600181019091557f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b0319166001600160a01b0384169081179091556000908152600260205260408120829055546200030390829062000503565b600055604080516001600160a01b0384168152602081018390527f40c340f65e17194d14ddddb073d3c9f888e3cb52b5aae0c6c7706b4fbc905fac910160405180910390a15050565b600082601f8301126200035e57600080fd5b81516020620003776200037183620004dd565b620004aa565b80838252828201915082860187848660051b89010111156200039857600080fd5b60005b85811015620003b9578151845292840192908401906001016200039b565b5090979650505050505050565b60008060408385031215620003da57600080fd5b82516001600160401b0380821115620003f257600080fd5b818501915085601f8301126200040757600080fd5b815160206200041a6200037183620004dd565b8083825282820191508286018a848660051b89010111156200043b57600080fd5b600096505b84871015620004765780516001600160a01b03811681146200046157600080fd5b83526001969096019591830191830162000440565b50918801519196509093505050808211156200049157600080fd5b50620004a0858286016200034c565b9150509250929050565b604051601f8201601f191681016001600160401b0381118282101715620004d557620004d562000568565b604052919050565b60006001600160401b03821115620004f957620004f962000568565b5060051b60200190565b600082198211156200051957620005196200053c565b500190565b60006000198214156200053557620005356200053c565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6105f0806200058e6000396000f3fe6080604052600436106100595760003560e01c806319165587146100a75780633a98ef39146100c95780638b83209b146100ed5780639852595c14610125578063ce7c2ac21461015b578063e33b7de31461019157600080fd5b366100a2577f6ef95f06320e7a25a04a175ca677b7052bdd97131872c2192525a629f51be77033604080516001600160a01b0390921682523460208301520160405180910390a1005b600080fd5b3480156100b357600080fd5b506100c76100c23660046104c9565b6101a6565b005b3480156100d557600080fd5b506000545b6040519081526020015b60405180910390f35b3480156100f957600080fd5b5061010d6101083660046104ed565b61037b565b6040516001600160a01b0390911681526020016100e4565b34801561013157600080fd5b506100da6101403660046104c9565b6001600160a01b031660009081526003602052604090205490565b34801561016757600080fd5b506100da6101763660046104c9565b6001600160a01b031660009081526002602052604090205490565b34801561019d57600080fd5b506001546100da565b6001600160a01b03811660009081526002602052604090205461021f5760405162461bcd60e51b815260206004820152602660248201527f5061796d656e7453706c69747465723a206163636f756e7420686173206e6f2060448201526573686172657360d01b60648201526084015b60405180910390fd5b60006001544761022f9190610506565b6001600160a01b038316600090815260036020908152604080832054835460029093529083205493945091926102659085610540565b61026f919061051e565b610279919061055f565b9050806102dc5760405162461bcd60e51b815260206004820152602b60248201527f5061796d656e7453706c69747465723a206163636f756e74206973206e6f742060448201526a191d59481c185e5b595b9d60aa1b6064820152608401610216565b6001600160a01b038316600090815260036020526040902054610300908290610506565b6001600160a01b038416600090815260036020526040902055600154610327908290610506565b60015561033483826103ab565b604080516001600160a01b0385168152602081018390527fdf20fd1e76bc69d672e4814fafb2c449bba3a5369d8359adf9e05e6fde87b056910160405180910390a1505050565b6000600482815481106103905761039061058c565b6000918252602090912001546001600160a01b031692915050565b804710156103fb5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610216565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610448576040519150601f19603f3d011682016040523d82523d6000602084013e61044d565b606091505b50509050806104c45760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610216565b505050565b6000602082840312156104db57600080fd5b81356104e6816105a2565b9392505050565b6000602082840312156104ff57600080fd5b5035919050565b6000821982111561051957610519610576565b500190565b60008261053b57634e487b7160e01b600052601260045260246000fd5b500490565b600081600019048311821515161561055a5761055a610576565b500290565b60008282101561057157610571610576565b500390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03811681146105b757600080fd5b5056fea2646970667358221220504845e2850922e7bb6e2c49b04eba6f84849aa5a06ff7767dbf6f667fc5a69464736f6c63430008060033",
  "bytecodeSha1": "84e990a5beac39548c937032e02fdb1b9e61fe1d",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.6+commit.11564f7e"
  },
  "contractName": "PaymentSplitter",
  "coverageMap": {
    "branches": {
      "7": {
        "PaymentSplitter.release": {
          "15": [
            4153,
            4165,
            true
          ]
        }
      },
      "91": {
        "Address.sendValue": {
          "16": [
            2101,
            2132,
            true
          ],
          "17": [
            2247,
            2254,
            true
          ]
        }
      },
      "93": {}
    },
    "statements": {
      "7": {
        "PaymentSplitter.<receive>": {
          "0": [
            2656,
            2701
          ]
        },
        "PaymentSplitter.payee": {
          "12": [
            3603,
            3624
          ]
        },
        "PaymentSplitter.release": {
          "6": [
            3892,
            3963
          ],
          "7": [
            4145,
            4213
          ],
          "8": [
            4224,
            4273
          ],
          "9": [
            4283,
            4324
          ],
          "10": [
            4335,
            4370
          ],
          "11": [
            4380,
            4418
          ]
        },
        "PaymentSplitter.released": {
          "3": [
            3415,
            3440
          ]
        },
        "PaymentSplitter.shares": {
          "4": [
            3216,
            3239
          ]
        },
        "PaymentSplitter.totalReleased": {
          "5": [
            3029,
            3050
          ]
        },
        "PaymentSplitter.totalShares": {
          "2": [
            2849,
            2868
          ]
        }
      },
      "91": {
        "Address.sendValue": {
          "13": [
            2093,
            2166
          ],
          "14": [
            2239,
            2317
          ]
        }
      },
      "93": {
        "Context._msgSender": {
          "1": [
            659,
            676
          ]
        }
      }
    }
  },
  "dependencies": [
    "Address",
    "Context"
  ],
  "deployedBytecode": "6080604052600436106100595760003560e01c806319165587146100a75780633a98ef39146100c95780638b83209b146100ed5780639852595c14610125578063ce7c2ac21461015b578063e33b7de31461019157600080fd5b366100a2577f6ef95f06320e7a25a04a175ca677b7052bdd97131872c2192525a629f51be77033604080516001600160a01b0390921682523460208301520160405180910390a1005b600080fd5b3480156100b357600080fd5b506100c76100c23660046104c9565b6101a6565b005b3480156100d557600080fd5b506000545b6040519081526020015b60405180910390f35b3480156100f957600080fd5b5061010d6101083660046104ed565b61037b565b6040516001600160a01b0390911681526020016100e4565b34801561013157600080fd5b506100da6101403660046104c9565b6001600160a01b031660009081526003602052604090205490565b34801561016757600080fd5b506100da6101763660046104c9565b6001600160a01b031660009081526002602052604090205490565b34801561019d57600080fd5b506001546100da565b6001600160a01b03811660009081526002602052604090205461021f5760405162461bcd60e51b815260206004820152602660248201527f5061796d656e7453706c69747465723a206163636f756e7420686173206e6f2060448201526573686172657360d01b60648201526084015b60405180910390fd5b60006001544761022f9190610506565b6001600160a01b038316600090815260036020908152604080832054835460029093529083205493945091926102659085610540565b61026f919061051e565b610279919061055f565b9050806102dc5760405162461bcd60e51b815260206004820152602b60248201527f5061796d656e7453706c69747465723a206163636f756e74206973206e6f742060448201526a191d59481c185e5b595b9d60aa1b6064820152608401610216565b6001600160a01b038316600090815260036020526040902054610300908290610506565b6001600160a01b038416600090815260036020526040902055600154610327908290610506565b60015561033483826103ab565b604080516001600160a01b0385168152602081018390527fdf20fd1e76bc69d672e4814fafb2c449bba3a5369d8359adf9e05e6fde87b056910160405180910390a1505050565b6000600482815481106103905761039061058c565b6000918252602090912001546001600160a01b031692915050565b804710156103fb5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610216565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610448576040519150601f19603f3d011682016040523d82523d6000602084013e61044d565b606091505b50509050806104c45760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610216565b505050565b6000602082840312156104db57600080fd5b81356104e6816105a2565b9392505050565b6000602082840312156104ff57600080fd5b5035919050565b6000821982111561051957610519610576565b500190565b60008261053b57634e487b7160e01b600052601260045260246000fd5b500490565b600081600019048311821515161561055a5761055a610576565b500290565b60008282101561057157610571610576565b500390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03811681146105b757600080fd5b5056fea2646970667358221220504845e2850922e7bb6e2c49b04eba6f84849aa5a06ff7767dbf6f667fc5a69464736f6c63430008060033",
  "deployedSourceMap": "981:4095:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2661:40;666:10:93;2661:40:7;;;-1:-1:-1;;;;;1329:32:121;;;1311:51;;2691:9:7;1393:2:121;1378:18;;1371:34;1284:18;2661:40:7;;;;;;;981:4095;;;;;3825:600;;;;;;;;;;-1:-1:-1;3825:600:7;;;;;:::i;:::-;;:::i;:::-;;2786:89;;;;;;;;;;-1:-1:-1;2830:7:7;2856:12;2786:89;;;3445:25:121;;;3433:2;3418:18;2786:89:7;;;;;;;;3533:98;;;;;;;;;;-1:-1:-1;3533:98:7;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1085:32:121;;;1067:51;;1055:2;1040:18;3533:98:7;1022:102:121;3340:107:7;;;;;;;;;;-1:-1:-1;3340:107:7;;;;;:::i;:::-;-1:-1:-1;;;;;3422:18:7;3396:7;3422:18;;;:9;:18;;;;;;;3340:107;3143:103;;;;;;;;;;-1:-1:-1;3143:103:7;;;;;:::i;:::-;-1:-1:-1;;;;;3223:16:7;3197:7;3223:16;;;:7;:16;;;;;;;3143:103;2964:93;;;;;;;;;;-1:-1:-1;3036:14:7;;2964:93;;3825:600;-1:-1:-1;;;;;3900:16:7;;3919:1;3900:16;;;:7;:16;;;;;;3892:71;;;;-1:-1:-1;;;3892:71:7;;1897:2:121;3892:71:7;;;1879:21:121;1936:2;1916:18;;;1909:30;1975:34;1955:18;;;1948:62;-1:-1:-1;;;2026:18:121;;;2019:36;2072:19;;3892:71:7;;;;;;;;;3974:21;4022:14;;3998:21;:38;;;;:::i;:::-;-1:-1:-1;;;;;4116:18:7;;4046:15;4116:18;;;:9;:18;;;;;;;;;4101:12;;4081:7;:16;;;;;;;3974:62;;-1:-1:-1;4046:15:7;;4065:32;;3974:62;4065:32;:::i;:::-;4064:49;;;;:::i;:::-;:70;;;;:::i;:::-;4046:88;-1:-1:-1;4153:12:7;4145:68;;;;-1:-1:-1;;;4145:68:7;;3089:2:121;4145:68:7;;;3071:21:121;3128:2;3108:18;;;3101:30;3167:34;3147:18;;;3140:62;-1:-1:-1;;;3218:18:121;;;3211:41;3269:19;;4145:68:7;3061:233:121;4145:68:7;-1:-1:-1;;;;;4245:18:7;;;;;;:9;:18;;;;;;:28;;4266:7;;4245:28;:::i;:::-;-1:-1:-1;;;;;4224:18:7;;;;;;:9;:18;;;;;:49;4300:14;;:24;;4317:7;;4300:24;:::i;:::-;4283:14;:41;4335:35;4353:7;4362;4335:17;:35::i;:::-;4385:33;;;-1:-1:-1;;;;;1329:32:121;;1311:51;;1393:2;1378:18;;1371:34;;;4385:33:7;;1284:18:121;4385:33:7;;;;;;;3882:543;;3825:600;:::o;3533:98::-;3584:7;3610;3618:5;3610:14;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;3610:14:7;;3533:98;-1:-1:-1;;3533:98:7:o;2012:312:91:-;2126:6;2101:21;:31;;2093:73;;;;-1:-1:-1;;;2093:73:91;;2731:2:121;2093:73:91;;;2713:21:121;2770:2;2750:18;;;2743:30;2809:31;2789:18;;;2782:59;2858:18;;2093:73:91;2703:179:121;2093:73:91;2178:12;2196:9;-1:-1:-1;;;;;2196:14:91;2218:6;2196:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2177:52;;;2247:7;2239:78;;;;-1:-1:-1;;;2239:78:91;;2304:2:121;2239:78:91;;;2286:21:121;2343:2;2323:18;;;2316:30;2382:34;2362:18;;;2355:62;2453:28;2433:18;;;2426:56;2499:19;;2239:78:91;2276:248:121;2239:78:91;2083:241;2012:312;;:::o;14:247:121:-;73:6;126:2;114:9;105:7;101:23;97:32;94:2;;;142:1;139;132:12;94:2;181:9;168:23;200:31;225:5;200:31;:::i;:::-;250:5;84:177;-1:-1:-1;;;84:177:121:o;526:180::-;585:6;638:2;626:9;617:7;613:23;609:32;606:2;;;654:1;651;644:12;606:2;-1:-1:-1;677:23:121;;596:110;-1:-1:-1;596:110:121:o;3481:128::-;3521:3;3552:1;3548:6;3545:1;3542:13;3539:2;;;3558:18;;:::i;:::-;-1:-1:-1;3594:9:121;;3529:80::o;3614:217::-;3654:1;3680;3670:2;;3724:10;3719:3;3715:20;3712:1;3705:31;3759:4;3756:1;3749:15;3787:4;3784:1;3777:15;3670:2;-1:-1:-1;3816:9:121;;3660:171::o;3836:168::-;3876:7;3942:1;3938;3934:6;3930:14;3927:1;3924:21;3919:1;3912:9;3905:17;3901:45;3898:2;;;3949:18;;:::i;:::-;-1:-1:-1;3989:9:121;;3888:116::o;4009:125::-;4049:4;4077:1;4074;4071:8;4068:2;;;4082:18;;:::i;:::-;-1:-1:-1;4119:9:121;;4058:76::o;4139:127::-;4200:10;4195:3;4191:20;4188:1;4181:31;4231:4;4228:1;4221:15;4255:4;4252:1;4245:15;4271:127;4332:10;4327:3;4323:20;4320:1;4313:31;4363:4;4360:1;4353:15;4387:4;4384:1;4377:15;4403:131;-1:-1:-1;;;;;4478:31:121;;4468:42;;4458:2;;4524:1;4521;4514:12;4458:2;4448:86;:::o",
  "language": "Solidity",
  "natspec": {
    "details": "This contract allows to split Ether payments among a group of accounts. The sender does not need to be aware that the Ether will be split in this way, since it is handled transparently by the contract. The split can be in equal parts or in any other arbitrary proportion. The way this is specified is by assigning each account to a number of shares. Of all the Ether that this contract receives, each account will then be able to claim an amount proportional to the percentage of total shares they were assigned. `PaymentSplitter` follows a _pull payment_ model. This means that payments are not automatically forwarded to the accounts but kept in this contract, and the actual transfer is triggered as a separate step by calling the {release} function.",
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Creates an instance of `PaymentSplitter` where each account in `payees` is assigned the number of shares at the matching position in the `shares` array. All addresses in `payees` must be non-zero. Both arrays must have the same non-zero length, and there must be no duplicates in `payees`."
      },
      "payee(uint256)": {
        "details": "Getter for the address of the payee number `index`."
      },
      "release(address)": {
        "details": "Triggers a transfer to `account` of the amount of Ether they are owed, according to their percentage of the total shares and their previous withdrawals."
      },
      "released(address)": {
        "details": "Getter for the amount of Ether already released to a payee."
      },
      "shares(address)": {
        "details": "Getter for the amount of shares held by an account."
      },
      "totalReleased()": {
        "details": "Getter for the total amount of Ether already released."
      },
      "totalShares()": {
        "details": "Getter for the total shares held by payees."
      }
    },
    "title": "PaymentSplitter",
    "version": 1
  },
  "offset": [
    981,
    5076
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x59 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x19165587 EQ PUSH2 0xA7 JUMPI DUP1 PUSH4 0x3A98EF39 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x8B83209B EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x9852595C EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0xCE7C2AC2 EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0xE33B7DE3 EQ PUSH2 0x191 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0xA2 JUMPI PUSH32 0x6EF95F06320E7A25A04A175CA677B7052BDD97131872C2192525A629F51BE770 CALLER PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE CALLVALUE PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC7 PUSH2 0xC2 CALLDATASIZE PUSH1 0x4 PUSH2 0x4C9 JUMP JUMPDEST PUSH2 0x1A6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10D PUSH2 0x108 CALLDATASIZE PUSH1 0x4 PUSH2 0x4ED JUMP JUMPDEST PUSH2 0x37B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x131 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDA PUSH2 0x140 CALLDATASIZE PUSH1 0x4 PUSH2 0x4C9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x167 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDA PUSH2 0x176 CALLDATASIZE PUSH1 0x4 PUSH2 0x4C9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0xDA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x21F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061796D656E7453706C69747465723A206163636F756E7420686173206E6F20 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x736861726573 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SELFBALANCE PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x506 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP4 SLOAD PUSH1 0x2 SWAP1 SWAP4 MSTORE SWAP1 DUP4 KECCAK256 SLOAD SWAP4 SWAP5 POP SWAP2 SWAP3 PUSH2 0x265 SWAP1 DUP6 PUSH2 0x540 JUMP JUMPDEST PUSH2 0x26F SWAP2 SWAP1 PUSH2 0x51E JUMP JUMPDEST PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x55F JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x2DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061796D656E7453706C69747465723A206163636F756E74206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x191D59481C185E5B595B9D PUSH1 0xAA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x216 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x300 SWAP1 DUP3 SWAP1 PUSH2 0x506 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x1 SLOAD PUSH2 0x327 SWAP1 DUP3 SWAP1 PUSH2 0x506 JUMP JUMPDEST PUSH1 0x1 SSTORE PUSH2 0x334 DUP4 DUP3 PUSH2 0x3AB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0xDF20FD1E76BC69D672E4814FAFB2C449BBA3A5369D8359ADF9E05E6FDE87B056 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x390 JUMPI PUSH2 0x390 PUSH2 0x58C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x3FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x216 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x448 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x44D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x4C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20756E61626C6520746F2073656E642076616C75652C2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6563697069656E74206D61792068617665207265766572746564000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x216 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4E6 DUP2 PUSH2 0x5A2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x519 JUMPI PUSH2 0x519 PUSH2 0x576 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x53B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x55A JUMPI PUSH2 0x55A PUSH2 0x576 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x571 JUMPI PUSH2 0x571 PUSH2 0x576 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x5B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP 0x48 GASLIMIT 0xE2 DUP6 MULMOD 0x22 0xE7 0xBB PUSH15 0x2C49B04EBA6F84849AA5A06FF7767D 0xBF PUSH16 0x667FC5A69464736F6C63430008060033 ",
  "pcMap": {
    "0": {
      "offset": [
        981,
        5076
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        981,
        5076
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        981,
        5076
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5": {
      "fn": null,
      "offset": [
        981,
        5076
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        981,
        5076
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "8": {
      "fn": null,
      "offset": [
        981,
        5076
      ],
      "op": "LT",
      "path": "7"
    },
    "9": {
      "fn": null,
      "offset": [
        981,
        5076
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x59"
    },
    "12": {
      "fn": null,
      "offset": [
        981,
        5076
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "13": {
      "fn": null,
      "offset": [
        981,
        5076
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        981,
        5076
      ],
      "op": "CALLDATALOAD",
      "path": "7"
    },
    "16": {
      "fn": null,
      "offset": [
        981,
        5076
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        981,
        5076
      ],
      "op": "SHR",
      "path": "7"
    },
    "19": {
      "fn": null,
      "offset": [
        981,
        5076
      ],
      "op": "DUP1",
      "path": "7"
    },
    "20": {
      "fn": null,
      "offset": [
        981,
        5076
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x19165587"
    },
    "25": {
      "fn": null,
      "offset": [
        981,
        5076
      ],
      "op": "EQ",
      "path": "7"
    },
    "26": {
      "fn": null,
      "offset": [
        981,
        5076
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA7"
    },
    "29": {
      "fn": null,
      "offset": [
        981,
        5076
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "30": {
      "fn": null,
      "offset": [
        981,
        5076
      ],
      "op": "DUP1",
      "path": "7"
    },
    "31": {
      "fn": null,
      "offset": [
        981,
        5076
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x3A98EF39"
    },
    "36": {
      "fn": null,
      "offset": [
        981,
        5076
      ],
      "op": "EQ",
      "path": "7"
    },
    "37": {
      "fn": null,
      "offset": [
        981,
        5076
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC9"
    },
    "40": {
      "fn": null,
      "offset": [
        981,
        5076
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "41": {
      "fn": null,
      "offset": [
        981,
        5076
      ],
      "op": "DUP1",
      "path": "7"
    },
    "42": {
      "fn": null,
      "offset": [
        981,
        5076
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x8B83209B"
    },
    "47": {
      "fn": null,
      "offset": [
        981,
        5076
      ],
      "op": "EQ",
      "path": "7"
    },
    "48": {
      "fn": null,
      "offset": [
        981,
        5076
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xED"
    },
    "51": {
      "fn": null,
      "offset": [
        981,
        5076
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "52": {
      "fn": null,
      "offset": [
        981,
        5076
      ],
      "op": "DUP1",
      "path": "7"
    },
    "53": {
      "fn": null,
      "offset": [
        981,
        5076
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x9852595C"
    },
    "58": {
      "fn": null,
      "offset": [
        981,
        5076
      ],
      "op": "EQ",
      "path": "7"
    },
    "59": {
      "fn": null,
      "offset": [
        981,
        5076
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x125"
    },
    "62": {
      "fn": null,
      "offset": [
        981,
        5076
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "63": {
      "fn": null,
      "offset": [
        981,
        5076
      ],
      "op": "DUP1",
      "path": "7"
    },
    "64": {
      "fn": null,
      "offset": [
        981,
        5076
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xCE7C2AC2"
    },
    "69": {
      "fn": null,
      "offset": [
        981,
        5076
      ],
      "op": "EQ",
      "path": "7"
    },
    "70": {
      "fn": null,
      "offset": [
        981,
        5076
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x15B"
    },
    "73": {
      "fn": null,
      "offset": [
        981,
        5076
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "74": {
      "fn": null,
      "offset": [
        981,
        5076
      ],
      "op": "DUP1",
      "path": "7"
    },
    "75": {
      "fn": null,
      "offset": [
        981,
        5076
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xE33B7DE3"
    },
    "80": {
      "fn": null,
      "offset": [
        981,
        5076
      ],
      "op": "EQ",
      "path": "7"
    },
    "81": {
      "fn": null,
      "offset": [
        981,
        5076
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x191"
    },
    "84": {
      "fn": null,
      "offset": [
        981,
        5076
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "85": {
      "fn": null,
      "offset": [
        981,
        5076
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "87": {
      "fn": null,
      "offset": [
        981,
        5076
      ],
      "op": "DUP1",
      "path": "7"
    },
    "88": {
      "fn": null,
      "offset": [
        981,
        5076
      ],
      "op": "REVERT",
      "path": "7"
    },
    "89": {
      "fn": null,
      "offset": [
        981,
        5076
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "90": {
      "fn": null,
      "offset": [
        981,
        5076
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "91": {
      "fn": null,
      "offset": [
        981,
        5076
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA2"
    },
    "94": {
      "fn": null,
      "offset": [
        981,
        5076
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "95": {
      "fn": "PaymentSplitter.<receive>",
      "offset": [
        2661,
        2701
      ],
      "op": "PUSH32",
      "path": "7",
      "statement": 0,
      "value": "0x6EF95F06320E7A25A04A175CA677B7052BDD97131872C2192525A629F51BE770"
    },
    "128": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "93",
      "statement": 1
    },
    "129": {
      "fn": "PaymentSplitter.<receive>",
      "offset": [
        2661,
        2701
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "131": {
      "fn": "PaymentSplitter.<receive>",
      "offset": [
        2661,
        2701
      ],
      "op": "DUP1",
      "path": "7"
    },
    "132": {
      "fn": "PaymentSplitter.<receive>",
      "offset": [
        2661,
        2701
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "133": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "135": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "137": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "139": {
      "op": "SHL"
    },
    "140": {
      "op": "SUB"
    },
    "141": {
      "op": "SWAP1"
    },
    "142": {
      "op": "SWAP3"
    },
    "143": {
      "op": "AND"
    },
    "144": {
      "op": "DUP3"
    },
    "145": {
      "op": "MSTORE"
    },
    "146": {
      "fn": "PaymentSplitter.<receive>",
      "offset": [
        2691,
        2700
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "147": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "149": {
      "op": "DUP4"
    },
    "150": {
      "op": "ADD"
    },
    "151": {
      "op": "MSTORE"
    },
    "152": {
      "op": "ADD"
    },
    "153": {
      "fn": "PaymentSplitter.<receive>",
      "offset": [
        2661,
        2701
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "155": {
      "fn": "PaymentSplitter.<receive>",
      "offset": [
        2661,
        2701
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "156": {
      "fn": "PaymentSplitter.<receive>",
      "offset": [
        2661,
        2701
      ],
      "op": "DUP1",
      "path": "7"
    },
    "157": {
      "fn": "PaymentSplitter.<receive>",
      "offset": [
        2661,
        2701
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "158": {
      "fn": "PaymentSplitter.<receive>",
      "offset": [
        2661,
        2701
      ],
      "op": "SUB",
      "path": "7"
    },
    "159": {
      "fn": "PaymentSplitter.<receive>",
      "offset": [
        2661,
        2701
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "160": {
      "fn": "PaymentSplitter.<receive>",
      "offset": [
        2661,
        2701
      ],
      "op": "LOG1",
      "path": "7"
    },
    "161": {
      "offset": [
        981,
        5076
      ],
      "op": "STOP",
      "path": "7"
    },
    "162": {
      "fn": "PaymentSplitter.<receive>",
      "offset": [
        981,
        5076
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "163": {
      "fn": "PaymentSplitter.<receive>",
      "offset": [
        981,
        5076
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "165": {
      "fn": "PaymentSplitter.<receive>",
      "offset": [
        981,
        5076
      ],
      "op": "DUP1",
      "path": "7"
    },
    "166": {
      "first_revert": true,
      "fn": "PaymentSplitter.<receive>",
      "offset": [
        981,
        5076
      ],
      "op": "REVERT",
      "path": "7"
    },
    "167": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3825,
        4425
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "168": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3825,
        4425
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "169": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3825,
        4425
      ],
      "op": "DUP1",
      "path": "7"
    },
    "170": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3825,
        4425
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "171": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3825,
        4425
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB3"
    },
    "174": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3825,
        4425
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "175": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3825,
        4425
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "177": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3825,
        4425
      ],
      "op": "DUP1",
      "path": "7"
    },
    "178": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3825,
        4425
      ],
      "op": "REVERT",
      "path": "7"
    },
    "179": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3825,
        4425
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "180": {
      "op": "POP"
    },
    "181": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3825,
        4425
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC7"
    },
    "184": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3825,
        4425
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC2"
    },
    "187": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3825,
        4425
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "188": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3825,
        4425
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "190": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3825,
        4425
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4C9"
    },
    "193": {
      "fn": "PaymentSplitter.release",
      "jump": "i",
      "offset": [
        3825,
        4425
      ],
      "op": "JUMP",
      "path": "7"
    },
    "194": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3825,
        4425
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "195": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3825,
        4425
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1A6"
    },
    "198": {
      "fn": "PaymentSplitter.release",
      "jump": "i",
      "offset": [
        3825,
        4425
      ],
      "op": "JUMP",
      "path": "7"
    },
    "199": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3825,
        4425
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "200": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3825,
        4425
      ],
      "op": "STOP",
      "path": "7"
    },
    "201": {
      "fn": "PaymentSplitter.totalShares",
      "offset": [
        2786,
        2875
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "202": {
      "fn": "PaymentSplitter.totalShares",
      "offset": [
        2786,
        2875
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "203": {
      "fn": "PaymentSplitter.totalShares",
      "offset": [
        2786,
        2875
      ],
      "op": "DUP1",
      "path": "7"
    },
    "204": {
      "fn": "PaymentSplitter.totalShares",
      "offset": [
        2786,
        2875
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "205": {
      "fn": "PaymentSplitter.totalShares",
      "offset": [
        2786,
        2875
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD5"
    },
    "208": {
      "fn": "PaymentSplitter.totalShares",
      "offset": [
        2786,
        2875
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "209": {
      "fn": "PaymentSplitter.totalShares",
      "offset": [
        2786,
        2875
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "211": {
      "fn": "PaymentSplitter.totalShares",
      "offset": [
        2786,
        2875
      ],
      "op": "DUP1",
      "path": "7"
    },
    "212": {
      "fn": "PaymentSplitter.totalShares",
      "offset": [
        2786,
        2875
      ],
      "op": "REVERT",
      "path": "7"
    },
    "213": {
      "fn": "PaymentSplitter.totalShares",
      "offset": [
        2786,
        2875
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "214": {
      "op": "POP"
    },
    "215": {
      "fn": "PaymentSplitter.totalShares",
      "offset": [
        2830,
        2837
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "217": {
      "fn": "PaymentSplitter.totalShares",
      "offset": [
        2856,
        2868
      ],
      "op": "SLOAD",
      "path": "7",
      "statement": 2
    },
    "218": {
      "fn": "PaymentSplitter.totalShares",
      "offset": [
        2786,
        2875
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "219": {
      "fn": "PaymentSplitter.totalShares",
      "offset": [
        2786,
        2875
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "221": {
      "fn": "PaymentSplitter.totalShares",
      "offset": [
        2786,
        2875
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "222": {
      "op": "SWAP1"
    },
    "223": {
      "op": "DUP2"
    },
    "224": {
      "op": "MSTORE"
    },
    "225": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "227": {
      "op": "ADD"
    },
    "228": {
      "fn": "PaymentSplitter.totalShares",
      "offset": [
        2786,
        2875
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "229": {
      "fn": "PaymentSplitter.totalShares",
      "offset": [
        2786,
        2875
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "231": {
      "fn": "PaymentSplitter.totalShares",
      "offset": [
        2786,
        2875
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "232": {
      "fn": "PaymentSplitter.totalShares",
      "offset": [
        2786,
        2875
      ],
      "op": "DUP1",
      "path": "7"
    },
    "233": {
      "fn": "PaymentSplitter.totalShares",
      "offset": [
        2786,
        2875
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "234": {
      "fn": "PaymentSplitter.totalShares",
      "offset": [
        2786,
        2875
      ],
      "op": "SUB",
      "path": "7"
    },
    "235": {
      "fn": "PaymentSplitter.totalShares",
      "offset": [
        2786,
        2875
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "236": {
      "fn": "PaymentSplitter.totalShares",
      "offset": [
        2786,
        2875
      ],
      "op": "RETURN",
      "path": "7"
    },
    "237": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3533,
        3631
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "238": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3533,
        3631
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "239": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3533,
        3631
      ],
      "op": "DUP1",
      "path": "7"
    },
    "240": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3533,
        3631
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "241": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3533,
        3631
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF9"
    },
    "244": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3533,
        3631
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "245": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3533,
        3631
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "247": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3533,
        3631
      ],
      "op": "DUP1",
      "path": "7"
    },
    "248": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3533,
        3631
      ],
      "op": "REVERT",
      "path": "7"
    },
    "249": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3533,
        3631
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "250": {
      "op": "POP"
    },
    "251": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3533,
        3631
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x10D"
    },
    "254": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3533,
        3631
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x108"
    },
    "257": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3533,
        3631
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "258": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3533,
        3631
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "260": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3533,
        3631
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4ED"
    },
    "263": {
      "fn": "PaymentSplitter.payee",
      "jump": "i",
      "offset": [
        3533,
        3631
      ],
      "op": "JUMP",
      "path": "7"
    },
    "264": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3533,
        3631
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "265": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3533,
        3631
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x37B"
    },
    "268": {
      "fn": "PaymentSplitter.payee",
      "jump": "i",
      "offset": [
        3533,
        3631
      ],
      "op": "JUMP",
      "path": "7"
    },
    "269": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3533,
        3631
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "270": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3533,
        3631
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "272": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3533,
        3631
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "273": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "275": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "277": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "279": {
      "op": "SHL"
    },
    "280": {
      "op": "SUB"
    },
    "281": {
      "op": "SWAP1"
    },
    "282": {
      "op": "SWAP2"
    },
    "283": {
      "op": "AND"
    },
    "284": {
      "op": "DUP2"
    },
    "285": {
      "op": "MSTORE"
    },
    "286": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "288": {
      "op": "ADD"
    },
    "289": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3533,
        3631
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE4"
    },
    "292": {
      "op": "JUMP"
    },
    "293": {
      "fn": "PaymentSplitter.released",
      "offset": [
        3340,
        3447
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "294": {
      "fn": "PaymentSplitter.released",
      "offset": [
        3340,
        3447
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "295": {
      "fn": "PaymentSplitter.released",
      "offset": [
        3340,
        3447
      ],
      "op": "DUP1",
      "path": "7"
    },
    "296": {
      "fn": "PaymentSplitter.released",
      "offset": [
        3340,
        3447
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "297": {
      "fn": "PaymentSplitter.released",
      "offset": [
        3340,
        3447
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x131"
    },
    "300": {
      "fn": "PaymentSplitter.released",
      "offset": [
        3340,
        3447
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "301": {
      "fn": "PaymentSplitter.released",
      "offset": [
        3340,
        3447
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "303": {
      "fn": "PaymentSplitter.released",
      "offset": [
        3340,
        3447
      ],
      "op": "DUP1",
      "path": "7"
    },
    "304": {
      "fn": "PaymentSplitter.released",
      "offset": [
        3340,
        3447
      ],
      "op": "REVERT",
      "path": "7"
    },
    "305": {
      "fn": "PaymentSplitter.released",
      "offset": [
        3340,
        3447
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "306": {
      "op": "POP"
    },
    "307": {
      "fn": "PaymentSplitter.released",
      "offset": [
        3340,
        3447
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xDA"
    },
    "310": {
      "fn": "PaymentSplitter.released",
      "offset": [
        3340,
        3447
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x140"
    },
    "313": {
      "fn": "PaymentSplitter.released",
      "offset": [
        3340,
        3447
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "314": {
      "fn": "PaymentSplitter.released",
      "offset": [
        3340,
        3447
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "316": {
      "fn": "PaymentSplitter.released",
      "offset": [
        3340,
        3447
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4C9"
    },
    "319": {
      "fn": "PaymentSplitter.released",
      "jump": "i",
      "offset": [
        3340,
        3447
      ],
      "op": "JUMP",
      "path": "7"
    },
    "320": {
      "fn": "PaymentSplitter.released",
      "offset": [
        3340,
        3447
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "321": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "323": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "325": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "327": {
      "op": "SHL"
    },
    "328": {
      "op": "SUB"
    },
    "329": {
      "fn": "PaymentSplitter.released",
      "offset": [
        3422,
        3440
      ],
      "op": "AND",
      "path": "7",
      "statement": 3
    },
    "330": {
      "fn": "PaymentSplitter.released",
      "offset": [
        3396,
        3403
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "332": {
      "fn": "PaymentSplitter.released",
      "offset": [
        3422,
        3440
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "333": {
      "fn": "PaymentSplitter.released",
      "offset": [
        3422,
        3440
      ],
      "op": "DUP2",
      "path": "7"
    },
    "334": {
      "fn": "PaymentSplitter.released",
      "offset": [
        3422,
        3440
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "335": {
      "fn": "PaymentSplitter.released",
      "offset": [
        3422,
        3431
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "337": {
      "fn": "PaymentSplitter.released",
      "offset": [
        3422,
        3440
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "339": {
      "fn": "PaymentSplitter.released",
      "offset": [
        3422,
        3440
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "340": {
      "fn": "PaymentSplitter.released",
      "offset": [
        3422,
        3440
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "342": {
      "fn": "PaymentSplitter.released",
      "offset": [
        3422,
        3440
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "343": {
      "fn": "PaymentSplitter.released",
      "offset": [
        3422,
        3440
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "344": {
      "fn": "PaymentSplitter.released",
      "offset": [
        3422,
        3440
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "345": {
      "fn": "PaymentSplitter.released",
      "offset": [
        3422,
        3440
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "346": {
      "fn": "PaymentSplitter.released",
      "offset": [
        3340,
        3447
      ],
      "op": "JUMP",
      "path": "7"
    },
    "347": {
      "fn": "PaymentSplitter.shares",
      "offset": [
        3143,
        3246
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "348": {
      "fn": "PaymentSplitter.shares",
      "offset": [
        3143,
        3246
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "349": {
      "fn": "PaymentSplitter.shares",
      "offset": [
        3143,
        3246
      ],
      "op": "DUP1",
      "path": "7"
    },
    "350": {
      "fn": "PaymentSplitter.shares",
      "offset": [
        3143,
        3246
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "351": {
      "fn": "PaymentSplitter.shares",
      "offset": [
        3143,
        3246
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x167"
    },
    "354": {
      "fn": "PaymentSplitter.shares",
      "offset": [
        3143,
        3246
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "355": {
      "fn": "PaymentSplitter.shares",
      "offset": [
        3143,
        3246
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "357": {
      "fn": "PaymentSplitter.shares",
      "offset": [
        3143,
        3246
      ],
      "op": "DUP1",
      "path": "7"
    },
    "358": {
      "fn": "PaymentSplitter.shares",
      "offset": [
        3143,
        3246
      ],
      "op": "REVERT",
      "path": "7"
    },
    "359": {
      "fn": "PaymentSplitter.shares",
      "offset": [
        3143,
        3246
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "360": {
      "op": "POP"
    },
    "361": {
      "fn": "PaymentSplitter.shares",
      "offset": [
        3143,
        3246
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xDA"
    },
    "364": {
      "fn": "PaymentSplitter.shares",
      "offset": [
        3143,
        3246
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x176"
    },
    "367": {
      "fn": "PaymentSplitter.shares",
      "offset": [
        3143,
        3246
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "368": {
      "fn": "PaymentSplitter.shares",
      "offset": [
        3143,
        3246
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "370": {
      "fn": "PaymentSplitter.shares",
      "offset": [
        3143,
        3246
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4C9"
    },
    "373": {
      "fn": "PaymentSplitter.shares",
      "jump": "i",
      "offset": [
        3143,
        3246
      ],
      "op": "JUMP",
      "path": "7"
    },
    "374": {
      "fn": "PaymentSplitter.shares",
      "offset": [
        3143,
        3246
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "379": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "381": {
      "op": "SHL"
    },
    "382": {
      "op": "SUB"
    },
    "383": {
      "fn": "PaymentSplitter.shares",
      "offset": [
        3223,
        3239
      ],
      "op": "AND",
      "path": "7",
      "statement": 4
    },
    "384": {
      "fn": "PaymentSplitter.shares",
      "offset": [
        3197,
        3204
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "386": {
      "fn": "PaymentSplitter.shares",
      "offset": [
        3223,
        3239
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "387": {
      "fn": "PaymentSplitter.shares",
      "offset": [
        3223,
        3239
      ],
      "op": "DUP2",
      "path": "7"
    },
    "388": {
      "fn": "PaymentSplitter.shares",
      "offset": [
        3223,
        3239
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "389": {
      "fn": "PaymentSplitter.shares",
      "offset": [
        3223,
        3230
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "391": {
      "fn": "PaymentSplitter.shares",
      "offset": [
        3223,
        3239
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "393": {
      "fn": "PaymentSplitter.shares",
      "offset": [
        3223,
        3239
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "394": {
      "fn": "PaymentSplitter.shares",
      "offset": [
        3223,
        3239
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "396": {
      "fn": "PaymentSplitter.shares",
      "offset": [
        3223,
        3239
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "397": {
      "fn": "PaymentSplitter.shares",
      "offset": [
        3223,
        3239
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "398": {
      "fn": "PaymentSplitter.shares",
      "offset": [
        3223,
        3239
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "399": {
      "fn": "PaymentSplitter.shares",
      "offset": [
        3223,
        3239
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "400": {
      "fn": "PaymentSplitter.shares",
      "offset": [
        3143,
        3246
      ],
      "op": "JUMP",
      "path": "7"
    },
    "401": {
      "fn": "PaymentSplitter.totalReleased",
      "offset": [
        2964,
        3057
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "402": {
      "fn": "PaymentSplitter.totalReleased",
      "offset": [
        2964,
        3057
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "403": {
      "fn": "PaymentSplitter.totalReleased",
      "offset": [
        2964,
        3057
      ],
      "op": "DUP1",
      "path": "7"
    },
    "404": {
      "fn": "PaymentSplitter.totalReleased",
      "offset": [
        2964,
        3057
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "405": {
      "fn": "PaymentSplitter.totalReleased",
      "offset": [
        2964,
        3057
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x19D"
    },
    "408": {
      "fn": "PaymentSplitter.totalReleased",
      "offset": [
        2964,
        3057
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "409": {
      "fn": "PaymentSplitter.totalReleased",
      "offset": [
        2964,
        3057
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "411": {
      "fn": "PaymentSplitter.totalReleased",
      "offset": [
        2964,
        3057
      ],
      "op": "DUP1",
      "path": "7"
    },
    "412": {
      "fn": "PaymentSplitter.totalReleased",
      "offset": [
        2964,
        3057
      ],
      "op": "REVERT",
      "path": "7"
    },
    "413": {
      "fn": "PaymentSplitter.totalReleased",
      "offset": [
        2964,
        3057
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "414": {
      "op": "POP"
    },
    "415": {
      "fn": "PaymentSplitter.totalReleased",
      "offset": [
        3036,
        3050
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 5,
      "value": "0x1"
    },
    "417": {
      "fn": "PaymentSplitter.totalReleased",
      "offset": [
        3036,
        3050
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "418": {
      "fn": "PaymentSplitter.totalReleased",
      "offset": [
        2964,
        3057
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xDA"
    },
    "421": {
      "fn": "PaymentSplitter.totalReleased",
      "offset": [
        2964,
        3057
      ],
      "op": "JUMP",
      "path": "7"
    },
    "422": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3825,
        4425
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "423": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "425": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "427": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "429": {
      "op": "SHL"
    },
    "430": {
      "op": "SUB"
    },
    "431": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3900,
        3916
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 6
    },
    "432": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3900,
        3916
      ],
      "op": "AND",
      "path": "7"
    },
    "433": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3919,
        3920
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "435": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3900,
        3916
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "436": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3900,
        3916
      ],
      "op": "DUP2",
      "path": "7"
    },
    "437": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3900,
        3916
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "438": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3900,
        3907
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "440": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3900,
        3916
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "442": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3900,
        3916
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "443": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3900,
        3916
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "445": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3900,
        3916
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "446": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3900,
        3916
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "447": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3900,
        3916
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "448": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3892,
        3963
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x21F"
    },
    "451": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3892,
        3963
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "452": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3892,
        3963
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "454": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3892,
        3963
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "455": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "459": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "461": {
      "op": "SHL"
    },
    "462": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3892,
        3963
      ],
      "op": "DUP2",
      "path": "7"
    },
    "463": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3892,
        3963
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "464": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "466": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3892,
        3963
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "468": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3892,
        3963
      ],
      "op": "DUP3",
      "path": "7"
    },
    "469": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3892,
        3963
      ],
      "op": "ADD",
      "path": "7"
    },
    "470": {
      "op": "MSTORE"
    },
    "471": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "473": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "475": {
      "op": "DUP3"
    },
    "476": {
      "op": "ADD"
    },
    "477": {
      "op": "MSTORE"
    },
    "478": {
      "op": "PUSH32",
      "value": "0x5061796D656E7453706C69747465723A206163636F756E7420686173206E6F20"
    },
    "511": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "513": {
      "op": "DUP3"
    },
    "514": {
      "op": "ADD"
    },
    "515": {
      "op": "MSTORE"
    },
    "516": {
      "op": "PUSH6",
      "value": "0x736861726573"
    },
    "523": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "525": {
      "op": "SHL"
    },
    "526": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "528": {
      "op": "DUP3"
    },
    "529": {
      "op": "ADD"
    },
    "530": {
      "op": "MSTORE"
    },
    "531": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "533": {
      "op": "ADD"
    },
    "534": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3892,
        3963
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "535": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3892,
        3963
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "537": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3892,
        3963
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "538": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3892,
        3963
      ],
      "op": "DUP1",
      "path": "7"
    },
    "539": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3892,
        3963
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "540": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3892,
        3963
      ],
      "op": "SUB",
      "path": "7"
    },
    "541": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3892,
        3963
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "542": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3892,
        3963
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "7"
    },
    "543": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3892,
        3963
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "544": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3974,
        3995
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "546": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4022,
        4036
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "548": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4022,
        4036
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "549": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3998,
        4019
      ],
      "op": "SELFBALANCE",
      "path": "7"
    },
    "550": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3998,
        4036
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x22F"
    },
    "553": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3998,
        4036
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "554": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3998,
        4036
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "555": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3998,
        4036
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x506"
    },
    "558": {
      "fn": "PaymentSplitter.release",
      "jump": "i",
      "offset": [
        3998,
        4036
      ],
      "op": "JUMP",
      "path": "7"
    },
    "559": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3998,
        4036
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "560": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "562": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "564": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "566": {
      "op": "SHL"
    },
    "567": {
      "op": "SUB"
    },
    "568": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4116,
        4134
      ],
      "op": "DUP4",
      "path": "7"
    },
    "569": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4116,
        4134
      ],
      "op": "AND",
      "path": "7"
    },
    "570": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4046,
        4061
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "572": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4116,
        4134
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "573": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4116,
        4134
      ],
      "op": "DUP2",
      "path": "7"
    },
    "574": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4116,
        4134
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "575": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4116,
        4125
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "577": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4116,
        4134
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "579": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4116,
        4134
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "580": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4116,
        4134
      ],
      "op": "DUP2",
      "path": "7"
    },
    "581": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4116,
        4134
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "582": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4116,
        4134
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "584": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4116,
        4134
      ],
      "op": "DUP1",
      "path": "7"
    },
    "585": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4116,
        4134
      ],
      "op": "DUP4",
      "path": "7"
    },
    "586": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4116,
        4134
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "587": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4116,
        4134
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "588": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4101,
        4113
      ],
      "op": "DUP4",
      "path": "7"
    },
    "589": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4101,
        4113
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "590": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4081,
        4088
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "592": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4081,
        4097
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "593": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4081,
        4097
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "594": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4081,
        4097
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "595": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4081,
        4097
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "596": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4081,
        4097
      ],
      "op": "DUP4",
      "path": "7"
    },
    "597": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4081,
        4097
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "598": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4081,
        4097
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "599": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3974,
        4036
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "600": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3974,
        4036
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "601": {
      "op": "POP"
    },
    "602": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4046,
        4061
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "603": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4046,
        4061
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "604": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4065,
        4097
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x265"
    },
    "607": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4065,
        4097
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "608": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3974,
        4036
      ],
      "op": "DUP6",
      "path": "7"
    },
    "609": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4065,
        4097
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x540"
    },
    "612": {
      "fn": "PaymentSplitter.release",
      "jump": "i",
      "offset": [
        4065,
        4097
      ],
      "op": "JUMP",
      "path": "7"
    },
    "613": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4065,
        4097
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "614": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4064,
        4113
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x26F"
    },
    "617": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4064,
        4113
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "618": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4064,
        4113
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "619": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4064,
        4113
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x51E"
    },
    "622": {
      "fn": "PaymentSplitter.release",
      "jump": "i",
      "offset": [
        4064,
        4113
      ],
      "op": "JUMP",
      "path": "7"
    },
    "623": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4064,
        4113
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "624": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4064,
        4134
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x279"
    },
    "627": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4064,
        4134
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "628": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4064,
        4134
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "629": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4064,
        4134
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x55F"
    },
    "632": {
      "fn": "PaymentSplitter.release",
      "jump": "i",
      "offset": [
        4064,
        4134
      ],
      "op": "JUMP",
      "path": "7"
    },
    "633": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4064,
        4134
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "634": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4046,
        4134
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "635": {
      "op": "POP"
    },
    "636": {
      "branch": 15,
      "fn": "PaymentSplitter.release",
      "offset": [
        4153,
        4165
      ],
      "op": "DUP1",
      "path": "7",
      "statement": 7
    },
    "637": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4145,
        4213
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2DC"
    },
    "640": {
      "branch": 15,
      "fn": "PaymentSplitter.release",
      "offset": [
        4145,
        4213
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "641": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4145,
        4213
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "643": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4145,
        4213
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "644": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "648": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "650": {
      "op": "SHL"
    },
    "651": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4145,
        4213
      ],
      "op": "DUP2",
      "path": "7"
    },
    "652": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4145,
        4213
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "653": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "655": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4145,
        4213
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "657": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4145,
        4213
      ],
      "op": "DUP3",
      "path": "7"
    },
    "658": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4145,
        4213
      ],
      "op": "ADD",
      "path": "7"
    },
    "659": {
      "op": "MSTORE"
    },
    "660": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "662": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "664": {
      "op": "DUP3"
    },
    "665": {
      "op": "ADD"
    },
    "666": {
      "op": "MSTORE"
    },
    "667": {
      "op": "PUSH32",
      "value": "0x5061796D656E7453706C69747465723A206163636F756E74206973206E6F7420"
    },
    "700": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "702": {
      "op": "DUP3"
    },
    "703": {
      "op": "ADD"
    },
    "704": {
      "op": "MSTORE"
    },
    "705": {
      "op": "PUSH11",
      "value": "0x191D59481C185E5B595B9D"
    },
    "717": {
      "op": "PUSH1",
      "value": "0xAA"
    },
    "719": {
      "op": "SHL"
    },
    "720": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "722": {
      "op": "DUP3"
    },
    "723": {
      "op": "ADD"
    },
    "724": {
      "op": "MSTORE"
    },
    "725": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "727": {
      "op": "ADD"
    },
    "728": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4145,
        4213
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x216"
    },
    "731": {
      "op": "JUMP"
    },
    "732": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4145,
        4213
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "733": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "735": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "737": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "739": {
      "op": "SHL"
    },
    "740": {
      "op": "SUB"
    },
    "741": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4245,
        4263
      ],
      "op": "DUP4",
      "path": "7",
      "statement": 8
    },
    "742": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4245,
        4263
      ],
      "op": "AND",
      "path": "7"
    },
    "743": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4245,
        4263
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "745": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4245,
        4263
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "746": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4245,
        4263
      ],
      "op": "DUP2",
      "path": "7"
    },
    "747": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4245,
        4263
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "748": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4245,
        4254
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "750": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4245,
        4263
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "752": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4245,
        4263
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "753": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4245,
        4263
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "755": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4245,
        4263
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "756": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4245,
        4263
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "757": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4245,
        4263
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "758": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4245,
        4273
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x300"
    },
    "761": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4245,
        4273
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "762": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4266,
        4273
      ],
      "op": "DUP3",
      "path": "7"
    },
    "763": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4266,
        4273
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "764": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4245,
        4273
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x506"
    },
    "767": {
      "fn": "PaymentSplitter.release",
      "jump": "i",
      "offset": [
        4245,
        4273
      ],
      "op": "JUMP",
      "path": "7"
    },
    "768": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4245,
        4273
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "769": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "771": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "773": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "775": {
      "op": "SHL"
    },
    "776": {
      "op": "SUB"
    },
    "777": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4224,
        4242
      ],
      "op": "DUP5",
      "path": "7"
    },
    "778": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4224,
        4242
      ],
      "op": "AND",
      "path": "7"
    },
    "779": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4224,
        4242
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "781": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4224,
        4242
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "782": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4224,
        4242
      ],
      "op": "DUP2",
      "path": "7"
    },
    "783": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4224,
        4242
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "784": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4224,
        4233
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "786": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4224,
        4242
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "788": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4224,
        4242
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "789": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4224,
        4242
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "791": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4224,
        4242
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "792": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4224,
        4242
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "793": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4224,
        4273
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "794": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4300,
        4314
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 9,
      "value": "0x1"
    },
    "796": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4300,
        4314
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "797": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4300,
        4324
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x327"
    },
    "800": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4300,
        4324
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "801": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4317,
        4324
      ],
      "op": "DUP3",
      "path": "7"
    },
    "802": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4317,
        4324
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "803": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4300,
        4324
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x506"
    },
    "806": {
      "fn": "PaymentSplitter.release",
      "jump": "i",
      "offset": [
        4300,
        4324
      ],
      "op": "JUMP",
      "path": "7"
    },
    "807": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4300,
        4324
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "808": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4283,
        4297
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "810": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4283,
        4324
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "811": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4335,
        4370
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 10,
      "value": "0x334"
    },
    "814": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4353,
        4360
      ],
      "op": "DUP4",
      "path": "7"
    },
    "815": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4362,
        4369
      ],
      "op": "DUP3",
      "path": "7"
    },
    "816": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4335,
        4352
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3AB"
    },
    "819": {
      "fn": "PaymentSplitter.release",
      "jump": "i",
      "offset": [
        4335,
        4370
      ],
      "op": "JUMP",
      "path": "7"
    },
    "820": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4335,
        4370
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "821": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4385,
        4418
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 11,
      "value": "0x40"
    },
    "823": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4385,
        4418
      ],
      "op": "DUP1",
      "path": "7"
    },
    "824": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4385,
        4418
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "825": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "827": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "829": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "831": {
      "op": "SHL"
    },
    "832": {
      "op": "SUB"
    },
    "833": {
      "op": "DUP6"
    },
    "834": {
      "op": "AND"
    },
    "835": {
      "op": "DUP2"
    },
    "836": {
      "op": "MSTORE"
    },
    "837": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "839": {
      "op": "DUP2"
    },
    "840": {
      "op": "ADD"
    },
    "841": {
      "op": "DUP4"
    },
    "842": {
      "op": "SWAP1"
    },
    "843": {
      "op": "MSTORE"
    },
    "844": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4385,
        4418
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xDF20FD1E76BC69D672E4814FAFB2C449BBA3A5369D8359ADF9E05E6FDE87B056"
    },
    "877": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4385,
        4418
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "878": {
      "op": "ADD"
    },
    "879": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4385,
        4418
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "881": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4385,
        4418
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "882": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4385,
        4418
      ],
      "op": "DUP1",
      "path": "7"
    },
    "883": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4385,
        4418
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "884": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4385,
        4418
      ],
      "op": "SUB",
      "path": "7"
    },
    "885": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4385,
        4418
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "886": {
      "fn": "PaymentSplitter.release",
      "offset": [
        4385,
        4418
      ],
      "op": "LOG1",
      "path": "7"
    },
    "887": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3882,
        4425
      ],
      "op": "POP",
      "path": "7"
    },
    "888": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3882,
        4425
      ],
      "op": "POP",
      "path": "7"
    },
    "889": {
      "fn": "PaymentSplitter.release",
      "offset": [
        3825,
        4425
      ],
      "op": "POP",
      "path": "7"
    },
    "890": {
      "fn": "PaymentSplitter.release",
      "jump": "o",
      "offset": [
        3825,
        4425
      ],
      "op": "JUMP",
      "path": "7"
    },
    "891": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3533,
        3631
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "892": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3584,
        3591
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "894": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3610,
        3617
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 12,
      "value": "0x4"
    },
    "896": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3618,
        3623
      ],
      "op": "DUP3",
      "path": "7"
    },
    "897": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3610,
        3624
      ],
      "op": "DUP2",
      "path": "7"
    },
    "898": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3610,
        3624
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "899": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3610,
        3624
      ],
      "op": "DUP2",
      "path": "7"
    },
    "900": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3610,
        3624
      ],
      "op": "LT",
      "path": "7"
    },
    "901": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3610,
        3624
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x390"
    },
    "904": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3610,
        3624
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "905": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3610,
        3624
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x390"
    },
    "908": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3610,
        3624
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x58C"
    },
    "911": {
      "fn": "PaymentSplitter.payee",
      "jump": "i",
      "offset": [
        3610,
        3624
      ],
      "op": "JUMP",
      "path": "7"
    },
    "912": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3610,
        3624
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "913": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3610,
        3624
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "915": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3610,
        3624
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "916": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3610,
        3624
      ],
      "op": "DUP3",
      "path": "7"
    },
    "917": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3610,
        3624
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "918": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3610,
        3624
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "920": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3610,
        3624
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "921": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3610,
        3624
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "922": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3610,
        3624
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "923": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3610,
        3624
      ],
      "op": "ADD",
      "path": "7"
    },
    "924": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3610,
        3624
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "927": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "929": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "931": {
      "op": "SHL"
    },
    "932": {
      "op": "SUB"
    },
    "933": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3610,
        3624
      ],
      "op": "AND",
      "path": "7"
    },
    "934": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3610,
        3624
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "935": {
      "fn": "PaymentSplitter.payee",
      "offset": [
        3533,
        3631
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "936": {
      "op": "POP"
    },
    "937": {
      "op": "POP"
    },
    "938": {
      "fn": "PaymentSplitter.payee",
      "jump": "o",
      "offset": [
        3533,
        3631
      ],
      "op": "JUMP",
      "path": "7"
    },
    "939": {
      "fn": "Address.sendValue",
      "offset": [
        2012,
        2324
      ],
      "op": "JUMPDEST",
      "path": "91"
    },
    "940": {
      "fn": "Address.sendValue",
      "offset": [
        2126,
        2132
      ],
      "op": "DUP1",
      "path": "91",
      "statement": 13
    },
    "941": {
      "fn": "Address.sendValue",
      "offset": [
        2101,
        2122
      ],
      "op": "SELFBALANCE",
      "path": "91"
    },
    "942": {
      "fn": "Address.sendValue",
      "offset": [
        2101,
        2132
      ],
      "op": "LT",
      "path": "91"
    },
    "943": {
      "branch": 16,
      "fn": "Address.sendValue",
      "offset": [
        2101,
        2132
      ],
      "op": "ISZERO",
      "path": "91"
    },
    "944": {
      "fn": "Address.sendValue",
      "offset": [
        2093,
        2166
      ],
      "op": "PUSH2",
      "path": "91",
      "value": "0x3FB"
    },
    "947": {
      "branch": 16,
      "fn": "Address.sendValue",
      "offset": [
        2093,
        2166
      ],
      "op": "JUMPI",
      "path": "91"
    },
    "948": {
      "fn": "Address.sendValue",
      "offset": [
        2093,
        2166
      ],
      "op": "PUSH1",
      "path": "91",
      "value": "0x40"
    },
    "950": {
      "fn": "Address.sendValue",
      "offset": [
        2093,
        2166
      ],
      "op": "MLOAD",
      "path": "91"
    },
    "951": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "955": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "957": {
      "op": "SHL"
    },
    "958": {
      "fn": "Address.sendValue",
      "offset": [
        2093,
        2166
      ],
      "op": "DUP2",
      "path": "91"
    },
    "959": {
      "fn": "Address.sendValue",
      "offset": [
        2093,
        2166
      ],
      "op": "MSTORE",
      "path": "91"
    },
    "960": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "962": {
      "fn": "Address.sendValue",
      "offset": [
        2093,
        2166
      ],
      "op": "PUSH1",
      "path": "91",
      "value": "0x4"
    },
    "964": {
      "fn": "Address.sendValue",
      "offset": [
        2093,
        2166
      ],
      "op": "DUP3",
      "path": "91"
    },
    "965": {
      "fn": "Address.sendValue",
      "offset": [
        2093,
        2166
      ],
      "op": "ADD",
      "path": "91"
    },
    "966": {
      "op": "MSTORE"
    },
    "967": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "969": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "971": {
      "op": "DUP3"
    },
    "972": {
      "op": "ADD"
    },
    "973": {
      "op": "MSTORE"
    },
    "974": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E6365000000"
    },
    "1007": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1009": {
      "op": "DUP3"
    },
    "1010": {
      "op": "ADD"
    },
    "1011": {
      "op": "MSTORE"
    },
    "1012": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1014": {
      "op": "ADD"
    },
    "1015": {
      "fn": "Address.sendValue",
      "offset": [
        2093,
        2166
      ],
      "op": "PUSH2",
      "path": "91",
      "value": "0x216"
    },
    "1018": {
      "op": "JUMP"
    },
    "1019": {
      "fn": "Address.sendValue",
      "offset": [
        2093,
        2166
      ],
      "op": "JUMPDEST",
      "path": "91"
    },
    "1020": {
      "fn": "Address.sendValue",
      "offset": [
        2178,
        2190
      ],
      "op": "PUSH1",
      "path": "91",
      "value": "0x0"
    },
    "1022": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2205
      ],
      "op": "DUP3",
      "path": "91"
    },
    "1023": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1025": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1027": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1029": {
      "op": "SHL"
    },
    "1030": {
      "op": "SUB"
    },
    "1031": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2210
      ],
      "op": "AND",
      "path": "91"
    },
    "1032": {
      "fn": "Address.sendValue",
      "offset": [
        2218,
        2224
      ],
      "op": "DUP3",
      "path": "91"
    },
    "1033": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "PUSH1",
      "path": "91",
      "value": "0x40"
    },
    "1035": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "MLOAD",
      "path": "91"
    },
    "1036": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "PUSH1",
      "path": "91",
      "value": "0x0"
    },
    "1038": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "PUSH1",
      "path": "91",
      "value": "0x40"
    },
    "1040": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "MLOAD",
      "path": "91"
    },
    "1041": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "DUP1",
      "path": "91"
    },
    "1042": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "DUP4",
      "path": "91"
    },
    "1043": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "SUB",
      "path": "91"
    },
    "1044": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "DUP2",
      "path": "91"
    },
    "1045": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "DUP6",
      "path": "91"
    },
    "1046": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "DUP8",
      "path": "91"
    },
    "1047": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "GAS",
      "path": "91"
    },
    "1048": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "CALL",
      "path": "91"
    },
    "1049": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "SWAP3",
      "path": "91"
    },
    "1050": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "POP",
      "path": "91"
    },
    "1051": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "POP",
      "path": "91"
    },
    "1052": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "POP",
      "path": "91"
    },
    "1053": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "RETURNDATASIZE",
      "path": "91"
    },
    "1054": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "DUP1",
      "path": "91"
    },
    "1055": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "PUSH1",
      "path": "91",
      "value": "0x0"
    },
    "1057": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "DUP2",
      "path": "91"
    },
    "1058": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "EQ",
      "path": "91"
    },
    "1059": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "PUSH2",
      "path": "91",
      "value": "0x448"
    },
    "1062": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "JUMPI",
      "path": "91"
    },
    "1063": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "PUSH1",
      "path": "91",
      "value": "0x40"
    },
    "1065": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "MLOAD",
      "path": "91"
    },
    "1066": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "SWAP2",
      "path": "91"
    },
    "1067": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "POP",
      "path": "91"
    },
    "1068": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "PUSH1",
      "path": "91",
      "value": "0x1F"
    },
    "1070": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "NOT",
      "path": "91"
    },
    "1071": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "PUSH1",
      "path": "91",
      "value": "0x3F"
    },
    "1073": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "RETURNDATASIZE",
      "path": "91"
    },
    "1074": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "ADD",
      "path": "91"
    },
    "1075": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "AND",
      "path": "91"
    },
    "1076": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "DUP3",
      "path": "91"
    },
    "1077": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "ADD",
      "path": "91"
    },
    "1078": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "PUSH1",
      "path": "91",
      "value": "0x40"
    },
    "1080": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "MSTORE",
      "path": "91"
    },
    "1081": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "RETURNDATASIZE",
      "path": "91"
    },
    "1082": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "DUP3",
      "path": "91"
    },
    "1083": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "MSTORE",
      "path": "91"
    },
    "1084": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "RETURNDATASIZE",
      "path": "91"
    },
    "1085": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "PUSH1",
      "path": "91",
      "value": "0x0"
    },
    "1087": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "PUSH1",
      "path": "91",
      "value": "0x20"
    },
    "1089": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "DUP5",
      "path": "91"
    },
    "1090": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "ADD",
      "path": "91"
    },
    "1091": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "RETURNDATACOPY",
      "path": "91"
    },
    "1092": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "PUSH2",
      "path": "91",
      "value": "0x44D"
    },
    "1095": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "JUMP",
      "path": "91"
    },
    "1096": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "JUMPDEST",
      "path": "91"
    },
    "1097": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "PUSH1",
      "path": "91",
      "value": "0x60"
    },
    "1099": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "SWAP2",
      "path": "91"
    },
    "1100": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "POP",
      "path": "91"
    },
    "1101": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "JUMPDEST",
      "path": "91"
    },
    "1102": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "POP",
      "path": "91"
    },
    "1103": {
      "fn": "Address.sendValue",
      "offset": [
        2177,
        2229
      ],
      "op": "POP",
      "path": "91"
    },
    "1104": {
      "fn": "Address.sendValue",
      "offset": [
        2177,
        2229
      ],
      "op": "SWAP1",
      "path": "91"
    },
    "1105": {
      "fn": "Address.sendValue",
      "offset": [
        2177,
        2229
      ],
      "op": "POP",
      "path": "91"
    },
    "1106": {
      "branch": 17,
      "fn": "Address.sendValue",
      "offset": [
        2247,
        2254
      ],
      "op": "DUP1",
      "path": "91",
      "statement": 14
    },
    "1107": {
      "fn": "Address.sendValue",
      "offset": [
        2239,
        2317
      ],
      "op": "PUSH2",
      "path": "91",
      "value": "0x4C4"
    },
    "1110": {
      "branch": 17,
      "fn": "Address.sendValue",
      "offset": [
        2239,
        2317
      ],
      "op": "JUMPI",
      "path": "91"
    },
    "1111": {
      "fn": "Address.sendValue",
      "offset": [
        2239,
        2317
      ],
      "op": "PUSH1",
      "path": "91",
      "value": "0x40"
    },
    "1113": {
      "fn": "Address.sendValue",
      "offset": [
        2239,
        2317
      ],
      "op": "MLOAD",
      "path": "91"
    },
    "1114": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1118": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1120": {
      "op": "SHL"
    },
    "1121": {
      "fn": "Address.sendValue",
      "offset": [
        2239,
        2317
      ],
      "op": "DUP2",
      "path": "91"
    },
    "1122": {
      "fn": "Address.sendValue",
      "offset": [
        2239,
        2317
      ],
      "op": "MSTORE",
      "path": "91"
    },
    "1123": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1125": {
      "fn": "Address.sendValue",
      "offset": [
        2239,
        2317
      ],
      "op": "PUSH1",
      "path": "91",
      "value": "0x4"
    },
    "1127": {
      "fn": "Address.sendValue",
      "offset": [
        2239,
        2317
      ],
      "op": "DUP3",
      "path": "91"
    },
    "1128": {
      "fn": "Address.sendValue",
      "offset": [
        2239,
        2317
      ],
      "op": "ADD",
      "path": "91"
    },
    "1129": {
      "op": "MSTORE"
    },
    "1130": {
      "op": "PUSH1",
      "value": "0x3A"
    },
    "1132": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1134": {
      "op": "DUP3"
    },
    "1135": {
      "op": "ADD"
    },
    "1136": {
      "op": "MSTORE"
    },
    "1137": {
      "op": "PUSH32",
      "value": "0x416464726573733A20756E61626C6520746F2073656E642076616C75652C2072"
    },
    "1170": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1172": {
      "op": "DUP3"
    },
    "1173": {
      "op": "ADD"
    },
    "1174": {
      "op": "MSTORE"
    },
    "1175": {
      "op": "PUSH32",
      "value": "0x6563697069656E74206D61792068617665207265766572746564000000000000"
    },
    "1208": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1210": {
      "op": "DUP3"
    },
    "1211": {
      "op": "ADD"
    },
    "1212": {
      "op": "MSTORE"
    },
    "1213": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1215": {
      "op": "ADD"
    },
    "1216": {
      "fn": "Address.sendValue",
      "offset": [
        2239,
        2317
      ],
      "op": "PUSH2",
      "path": "91",
      "value": "0x216"
    },
    "1219": {
      "op": "JUMP"
    },
    "1220": {
      "fn": "Address.sendValue",
      "offset": [
        2239,
        2317
      ],
      "op": "JUMPDEST",
      "path": "91"
    },
    "1221": {
      "fn": "Address.sendValue",
      "offset": [
        2083,
        2324
      ],
      "op": "POP",
      "path": "91"
    },
    "1222": {
      "fn": "Address.sendValue",
      "offset": [
        2012,
        2324
      ],
      "op": "POP",
      "path": "91"
    },
    "1223": {
      "fn": "Address.sendValue",
      "offset": [
        2012,
        2324
      ],
      "op": "POP",
      "path": "91"
    },
    "1224": {
      "fn": "Address.sendValue",
      "jump": "o",
      "offset": [
        2012,
        2324
      ],
      "op": "JUMP",
      "path": "91"
    },
    "1225": {
      "op": "JUMPDEST"
    },
    "1226": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1228": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1230": {
      "op": "DUP3"
    },
    "1231": {
      "op": "DUP5"
    },
    "1232": {
      "op": "SUB"
    },
    "1233": {
      "op": "SLT"
    },
    "1234": {
      "op": "ISZERO"
    },
    "1235": {
      "op": "PUSH2",
      "value": "0x4DB"
    },
    "1238": {
      "op": "JUMPI"
    },
    "1239": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1241": {
      "op": "DUP1"
    },
    "1242": {
      "op": "REVERT"
    },
    "1243": {
      "op": "JUMPDEST"
    },
    "1244": {
      "op": "DUP2"
    },
    "1245": {
      "op": "CALLDATALOAD"
    },
    "1246": {
      "op": "PUSH2",
      "value": "0x4E6"
    },
    "1249": {
      "op": "DUP2"
    },
    "1250": {
      "op": "PUSH2",
      "value": "0x5A2"
    },
    "1253": {
      "jump": "i",
      "op": "JUMP"
    },
    "1254": {
      "op": "JUMPDEST"
    },
    "1255": {
      "op": "SWAP4"
    },
    "1256": {
      "op": "SWAP3"
    },
    "1257": {
      "op": "POP"
    },
    "1258": {
      "op": "POP"
    },
    "1259": {
      "op": "POP"
    },
    "1260": {
      "jump": "o",
      "op": "JUMP"
    },
    "1261": {
      "op": "JUMPDEST"
    },
    "1262": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1264": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1266": {
      "op": "DUP3"
    },
    "1267": {
      "op": "DUP5"
    },
    "1268": {
      "op": "SUB"
    },
    "1269": {
      "op": "SLT"
    },
    "1270": {
      "op": "ISZERO"
    },
    "1271": {
      "op": "PUSH2",
      "value": "0x4FF"
    },
    "1274": {
      "op": "JUMPI"
    },
    "1275": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1277": {
      "op": "DUP1"
    },
    "1278": {
      "op": "REVERT"
    },
    "1279": {
      "op": "JUMPDEST"
    },
    "1280": {
      "op": "POP"
    },
    "1281": {
      "op": "CALLDATALOAD"
    },
    "1282": {
      "op": "SWAP2"
    },
    "1283": {
      "op": "SWAP1"
    },
    "1284": {
      "op": "POP"
    },
    "1285": {
      "jump": "o",
      "op": "JUMP"
    },
    "1286": {
      "op": "JUMPDEST"
    },
    "1287": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1289": {
      "op": "DUP3"
    },
    "1290": {
      "op": "NOT"
    },
    "1291": {
      "op": "DUP3"
    },
    "1292": {
      "op": "GT"
    },
    "1293": {
      "op": "ISZERO"
    },
    "1294": {
      "op": "PUSH2",
      "value": "0x519"
    },
    "1297": {
      "op": "JUMPI"
    },
    "1298": {
      "op": "PUSH2",
      "value": "0x519"
    },
    "1301": {
      "op": "PUSH2",
      "value": "0x576"
    },
    "1304": {
      "jump": "i",
      "op": "JUMP"
    },
    "1305": {
      "op": "JUMPDEST"
    },
    "1306": {
      "op": "POP"
    },
    "1307": {
      "op": "ADD"
    },
    "1308": {
      "op": "SWAP1"
    },
    "1309": {
      "jump": "o",
      "op": "JUMP"
    },
    "1310": {
      "op": "JUMPDEST"
    },
    "1311": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1313": {
      "op": "DUP3"
    },
    "1314": {
      "op": "PUSH2",
      "value": "0x53B"
    },
    "1317": {
      "op": "JUMPI"
    },
    "1318": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1323": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1325": {
      "op": "SHL"
    },
    "1326": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1328": {
      "op": "MSTORE"
    },
    "1329": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "1331": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1333": {
      "op": "MSTORE"
    },
    "1334": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1336": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1338": {
      "op": "REVERT"
    },
    "1339": {
      "op": "JUMPDEST"
    },
    "1340": {
      "op": "POP"
    },
    "1341": {
      "op": "DIV"
    },
    "1342": {
      "op": "SWAP1"
    },
    "1343": {
      "jump": "o",
      "op": "JUMP"
    },
    "1344": {
      "op": "JUMPDEST"
    },
    "1345": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1347": {
      "op": "DUP2"
    },
    "1348": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1350": {
      "op": "NOT"
    },
    "1351": {
      "op": "DIV"
    },
    "1352": {
      "op": "DUP4"
    },
    "1353": {
      "op": "GT"
    },
    "1354": {
      "op": "DUP3"
    },
    "1355": {
      "op": "ISZERO"
    },
    "1356": {
      "op": "ISZERO"
    },
    "1357": {
      "op": "AND"
    },
    "1358": {
      "op": "ISZERO"
    },
    "1359": {
      "op": "PUSH2",
      "value": "0x55A"
    },
    "1362": {
      "op": "JUMPI"
    },
    "1363": {
      "op": "PUSH2",
      "value": "0x55A"
    },
    "1366": {
      "op": "PUSH2",
      "value": "0x576"
    },
    "1369": {
      "jump": "i",
      "op": "JUMP"
    },
    "1370": {
      "op": "JUMPDEST"
    },
    "1371": {
      "op": "POP"
    },
    "1372": {
      "op": "MUL"
    },
    "1373": {
      "op": "SWAP1"
    },
    "1374": {
      "jump": "o",
      "op": "JUMP"
    },
    "1375": {
      "op": "JUMPDEST"
    },
    "1376": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1378": {
      "op": "DUP3"
    },
    "1379": {
      "op": "DUP3"
    },
    "1380": {
      "op": "LT"
    },
    "1381": {
      "op": "ISZERO"
    },
    "1382": {
      "op": "PUSH2",
      "value": "0x571"
    },
    "1385": {
      "op": "JUMPI"
    },
    "1386": {
      "op": "PUSH2",
      "value": "0x571"
    },
    "1389": {
      "op": "PUSH2",
      "value": "0x576"
    },
    "1392": {
      "jump": "i",
      "op": "JUMP"
    },
    "1393": {
      "op": "JUMPDEST"
    },
    "1394": {
      "op": "POP"
    },
    "1395": {
      "op": "SUB"
    },
    "1396": {
      "op": "SWAP1"
    },
    "1397": {
      "jump": "o",
      "op": "JUMP"
    },
    "1398": {
      "op": "JUMPDEST"
    },
    "1399": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1404": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1406": {
      "op": "SHL"
    },
    "1407": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1409": {
      "op": "MSTORE"
    },
    "1410": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1412": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1414": {
      "op": "MSTORE"
    },
    "1415": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1417": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1419": {
      "op": "REVERT"
    },
    "1420": {
      "op": "JUMPDEST"
    },
    "1421": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1426": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1428": {
      "op": "SHL"
    },
    "1429": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1431": {
      "op": "MSTORE"
    },
    "1432": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "1434": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1436": {
      "op": "MSTORE"
    },
    "1437": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1439": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1441": {
      "op": "REVERT"
    },
    "1442": {
      "op": "JUMPDEST"
    },
    "1443": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1445": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1447": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1449": {
      "op": "SHL"
    },
    "1450": {
      "op": "SUB"
    },
    "1451": {
      "op": "DUP2"
    },
    "1452": {
      "op": "AND"
    },
    "1453": {
      "op": "DUP2"
    },
    "1454": {
      "op": "EQ"
    },
    "1455": {
      "op": "PUSH2",
      "value": "0x5B7"
    },
    "1458": {
      "op": "JUMPI"
    },
    "1459": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1461": {
      "op": "DUP1"
    },
    "1462": {
      "op": "REVERT"
    },
    "1463": {
      "op": "JUMPDEST"
    },
    "1464": {
      "op": "POP"
    },
    "1465": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "282384b2d2af287231844e0e38daaf6b62b85c57",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Address.sol\";\nimport \"../utils/Context.sol\";\nimport \"../utils/math/SafeMath.sol\";\n\n/**\n * @title PaymentSplitter\n * @dev This contract allows to split Ether payments among a group of accounts. The sender does not need to be aware\n * that the Ether will be split in this way, since it is handled transparently by the contract.\n *\n * The split can be in equal parts or in any other arbitrary proportion. The way this is specified is by assigning each\n * account to a number of shares. Of all the Ether that this contract receives, each account will then be able to claim\n * an amount proportional to the percentage of total shares they were assigned.\n *\n * `PaymentSplitter` follows a _pull payment_ model. This means that payments are not automatically forwarded to the\n * accounts but kept in this contract, and the actual transfer is triggered as a separate step by calling the {release}\n * function.\n */\ncontract PaymentSplitter is Context {\n    event PayeeAdded(address account, uint256 shares);\n    event PaymentReleased(address to, uint256 amount);\n    event PaymentReceived(address from, uint256 amount);\n\n    uint256 private _totalShares;\n    uint256 private _totalReleased;\n\n    mapping(address => uint256) private _shares;\n    mapping(address => uint256) private _released;\n    address[] private _payees;\n\n    /**\n     * @dev Creates an instance of `PaymentSplitter` where each account in `payees` is assigned the number of shares at\n     * the matching position in the `shares` array.\n     *\n     * All addresses in `payees` must be non-zero. Both arrays must have the same non-zero length, and there must be no\n     * duplicates in `payees`.\n     */\n    constructor(address[] memory payees, uint256[] memory shares_) payable {\n        require(payees.length == shares_.length, \"PaymentSplitter: payees and shares length mismatch\");\n        require(payees.length > 0, \"PaymentSplitter: no payees\");\n\n        for (uint256 i = 0; i < payees.length; i++) {\n            _addPayee(payees[i], shares_[i]);\n        }\n    }\n\n    /**\n     * @dev The Ether received will be logged with {PaymentReceived} events. Note that these events are not fully\n     * reliable: it's possible for a contract to receive Ether without triggering this function. This only affects the\n     * reliability of the events, and not the actual splitting of Ether.\n     *\n     * To learn more about this see the Solidity documentation for\n     * https://solidity.readthedocs.io/en/latest/contracts.html#fallback-function[fallback\n     * functions].\n     */\n    receive() external payable virtual {\n        emit PaymentReceived(_msgSender(), msg.value);\n    }\n\n    /**\n     * @dev Getter for the total shares held by payees.\n     */\n    function totalShares() public view returns (uint256) {\n        return _totalShares;\n    }\n\n    /**\n     * @dev Getter for the total amount of Ether already released.\n     */\n    function totalReleased() public view returns (uint256) {\n        return _totalReleased;\n    }\n\n    /**\n     * @dev Getter for the amount of shares held by an account.\n     */\n    function shares(address account) public view returns (uint256) {\n        return _shares[account];\n    }\n\n    /**\n     * @dev Getter for the amount of Ether already released to a payee.\n     */\n    function released(address account) public view returns (uint256) {\n        return _released[account];\n    }\n\n    /**\n     * @dev Getter for the address of the payee number `index`.\n     */\n    function payee(uint256 index) public view returns (address) {\n        return _payees[index];\n    }\n\n    /**\n     * @dev Triggers a transfer to `account` of the amount of Ether they are owed, according to their percentage of the\n     * total shares and their previous withdrawals.\n     */\n    function release(address payable account) public virtual {\n        require(_shares[account] > 0, \"PaymentSplitter: account has no shares\");\n\n        uint256 totalReceived = address(this).balance + _totalReleased;\n        uint256 payment = (totalReceived * _shares[account]) / _totalShares - _released[account];\n\n        require(payment != 0, \"PaymentSplitter: account is not due payment\");\n\n        _released[account] = _released[account] + payment;\n        _totalReleased = _totalReleased + payment;\n\n        Address.sendValue(account, payment);\n        emit PaymentReleased(account, payment);\n    }\n\n    /**\n     * @dev Add a new payee to the contract.\n     * @param account The address of the payee to add.\n     * @param shares_ The number of shares owned by the payee.\n     */\n    function _addPayee(address account, uint256 shares_) private {\n        require(account != address(0), \"PaymentSplitter: account is the zero address\");\n        require(shares_ > 0, \"PaymentSplitter: shares are 0\");\n        require(_shares[account] == 0, \"PaymentSplitter: account already has shares\");\n\n        _payees.push(account);\n        _shares[account] = shares_;\n        _totalShares = _totalShares + shares_;\n        emit PayeeAdded(account, shares_);\n    }\n}\n",
  "sourceMap": "981:4095:7:-:0;;;1740:359;;;;;;;;;;;;;;;;;;:::i;:::-;1846:7;:14;1829:6;:13;:31;1821:94;;;;-1:-1:-1;;;1821:94:7;;2847:2:121;1821:94:7;;;2829:21:121;2886:2;2866:18;;;2859:30;2925:34;2905:18;;;2898:62;-1:-1:-1;;;2976:18:121;;;2969:48;3034:19;;1821:94:7;;;;;;;;;1949:1;1933:6;:13;:17;1925:56;;;;-1:-1:-1;;;1925:56:7;;3678:2:121;1925:56:7;;;3660:21:121;3717:2;3697:18;;;3690:30;3756:28;3736:18;;;3729:56;3802:18;;1925:56:7;3650:176:121;1925:56:7;1997:9;1992:101;2016:6;:13;2012:1;:17;1992:101;;;2050:32;2060:6;2067:1;2060:9;;;;;;;;:::i;:::-;;;;;;;2071:7;2079:1;2071:10;;;;;;;;:::i;:::-;;;;;;;2050:9;;;:32;;:::i;:::-;2031:3;;;;:::i;:::-;;;;1992:101;;;;1740:359;;981:4095;;4610:464;-1:-1:-1;;;;;4689:21:7;;4681:78;;;;-1:-1:-1;;;4681:78:7;;2434:2:121;4681:78:7;;;2416:21:121;2473:2;2453:18;;;2446:30;2512:34;2492:18;;;2485:62;-1:-1:-1;;;2563:18:121;;;2556:42;2615:19;;4681:78:7;2406:234:121;4681:78:7;4787:1;4777:7;:11;4769:53;;;;-1:-1:-1;;;4769:53:7;;4033:2:121;4769:53:7;;;4015:21:121;4072:2;4052:18;;;4045:30;4111:31;4091:18;;;4084:59;4160:18;;4769:53:7;4005:179:121;4769:53:7;-1:-1:-1;;;;;4840:16:7;;;;;;:7;:16;;;;;;:21;4832:77;;;;-1:-1:-1;;;4832:77:7;;3266:2:121;4832:77:7;;;3248:21:121;3305:2;3285:18;;;3278:30;3344:34;3324:18;;;3317:62;-1:-1:-1;;;3395:18:121;;;3388:41;3446:19;;4832:77:7;3238:233:121;4832:77:7;4920:7;:21;;;;;;;;;;;;-1:-1:-1;;;;;;4920:21:7;-1:-1:-1;;;;;4920:21:7;;;;;;;;-1:-1:-1;4951:16:7;;;:7;4920:21;4951:16;;;;:26;;;5002:12;:22;;4951:26;;5002:22;:::i;:::-;4987:12;:37;5039:28;;;-1:-1:-1;;;;;2145:32:121;;2127:51;;2209:2;2194:18;;2187:34;;;5039:28:7;;2100:18:121;5039:28:7;;;;;;;4610:464;;:::o;14:670:121:-;79:5;132:3;125:4;117:6;113:17;109:27;99:2;;150:1;147;140:12;99:2;179:6;173:13;205:4;229:60;245:43;285:2;245:43;:::i;:::-;229:60;:::i;:::-;311:3;335:2;330:3;323:15;363:2;358:3;354:12;347:19;;398:2;390:6;386:15;450:3;445:2;439;436:1;432:10;424:6;420:23;416:32;413:41;410:2;;;467:1;464;457:12;410:2;489:1;499:156;513:2;510:1;507:9;499:156;;;570:10;;558:23;;601:12;;;;633;;;;531:1;524:9;499:156;;;-1:-1:-1;673:5:121;;89:595;-1:-1:-1;;;;;;;89:595:121:o;689:1259::-;818:6;826;879:2;867:9;858:7;854:23;850:32;847:2;;;895:1;892;885:12;847:2;922:16;;-1:-1:-1;;;;;987:14:121;;;984:2;;;1014:1;1011;1004:12;984:2;1052:6;1041:9;1037:22;1027:32;;1097:7;1090:4;1086:2;1082:13;1078:27;1068:2;;1119:1;1116;1109:12;1068:2;1148;1142:9;1170:4;1194:60;1210:43;1250:2;1210:43;:::i;1194:60::-;1276:3;1300:2;1295:3;1288:15;1328:2;1323:3;1319:12;1312:19;;1359:2;1355;1351:11;1407:7;1402:2;1396;1393:1;1389:10;1385:2;1381:19;1377:28;1374:41;1371:2;;;1428:1;1425;1418:12;1371:2;1450:1;1441:10;;1460:270;1474:2;1471:1;1468:9;1460:270;;;1532:10;;-1:-1:-1;;;;;1575:31:121;;1565:42;;1555:2;;1621:1;1618;1611:12;1555:2;1638:18;;1492:1;1485:9;;;;;1676:12;;;;1708;;1460:270;;;-1:-1:-1;1785:18:121;;;1779:25;1749:5;;-1:-1:-1;1779:25:121;;-1:-1:-1;;;1816:16:121;;;1813:2;;;1845:1;1842;1835:12;1813:2;;1868:74;1934:7;1923:8;1912:9;1908:24;1868:74;:::i;:::-;1858:84;;;837:1111;;;;;:::o;4189:275::-;4260:2;4254:9;4325:2;4306:13;;-1:-1:-1;;4302:27:121;4290:40;;-1:-1:-1;;;;;4345:34:121;;4381:22;;;4342:62;4339:2;;;4407:18;;:::i;:::-;4443:2;4436:22;4234:230;;-1:-1:-1;4234:230:121:o;4469:183::-;4529:4;-1:-1:-1;;;;;4551:30:121;;4548:2;;;4584:18;;:::i;:::-;-1:-1:-1;4629:1:121;4625:14;4641:4;4621:25;;4538:114::o;4657:128::-;4697:3;4728:1;4724:6;4721:1;4718:13;4715:2;;;4734:18;;:::i;:::-;-1:-1:-1;4770:9:121;;4705:80::o;4790:135::-;4829:3;-1:-1:-1;;4850:17:121;;4847:2;;;4870:18;;:::i;:::-;-1:-1:-1;4917:1:121;4906:13;;4837:88::o;4930:127::-;4991:10;4986:3;4982:20;4979:1;4972:31;5022:4;5019:1;5012:15;5046:4;5043:1;5036:15;5062:127;5123:10;5118:3;5114:20;5111:1;5104:31;5154:4;5151:1;5144:15;5178:4;5175:1;5168:15;5194:127;5255:10;5250:3;5246:20;5243:1;5236:31;5286:4;5283:1;5276:15;5310:4;5307:1;5300:15;5226:95;981:4095:7;;;;;;",
  "sourcePath": "contracts/node_modules/@openzeppelin/contracts/finance/PaymentSplitter.sol",
  "type": "contract"
}